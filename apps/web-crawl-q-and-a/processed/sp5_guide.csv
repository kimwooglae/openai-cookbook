,link,type,text
0,e9fc0aa13b009f35,normal,"WebSquare5는 엔진과 스튜디오(개발도구)로 구성됩니다. 스튜디오는 웹스퀘어 화면 파일을 개발할 수 있는 환경을 제공하고, 엔진은 웹스퀘어 화면 파일을 브라우저에 표시합니다."
1,0f8de5b0bd7e0ac5,normal,"웹스퀘어 스튜디오는 WYSIWYG 방식의 통합 개발 도구로, 개발자는 컴포넌트 그리기, 스크립트 추가, 화면 확인, 디버깅을 한번에 수행할 수 있습니다."
2,8e4473e53b3e07a6,normal,Window OS 만 지원합니다.
3,0b0d04fcf2954c06,unordered_list,"* 최소 JRE(JDK) 1.8.0_2xx 이상 필요. (하위 버전을 사용할 경우 IntelliWeb Designer가 보이지 않을 수 있음.)
** openjdk-1.8.0.242-1.b08.x86_64 : 해당 jdk 버전의 버그로 인해 Eclipse 프로젝트가 정상 생성되지 않고 WebSquare 스튜디오가 비정상 동작. (다른 버전의 사용을 권장.)
* open jdk (zulu)
** jdk 11.0.1 ~ 11.0.6 (해당 버전까지만 동작.)
* oracle jdk
** jdk 11.0.0 ~ 11.0.13"
4,efdb8460f029fc5e,note,기존 웹스퀘어 스튜디오 버전에서 제공되던 jre 포함 버전은 미지원.
5,2206e205f081d543,definition_list,"(1) 인스톨러 준비
사용자 PC 사양에 맞는 인스톨러를 제공 받으십시오. 
(2) <strong>Java 1.8 준비</strong>
WebSquare Studio IWD는 Java 1.8 이상에서 동작합니다. 
+ 사용자 PC에 Java 1.8 이상을 설치하십시오. 
(3) <strong>기존 스튜디오 삭제</strong>
기존에 설치된 스튜디오가 있을 경우, 설치된 스튜디오를 먼저 제거하십시오.
+ 단, workspace 폴더는 삭제하지 말고 계속 사용하십시오. 
(4) <strong>32-bit (x86) 인스톨러 사용</strong>
64-bit OS에서 32-bit JRE를 사용하려면, 32-bit (x86) 인스톨러를 실행하십시오."
6,f49f0c47a5926441,ordered_list,"# 인스톨러를 실행합니다.


# <strong>다음</strong>을 클릭합니다."
7,ba786a37a37abdc5,ordered_list,# <strong>동의함</strong>을 클릭합니다.
8,5fe9de36ef6d7c2c,ordered_list,# WebSquare Studio IWD는Java 1.8 이상에서 동작합니다. Java 경로를 bin 폴더까지 지정한 후 <strong>다음</strong>을 클릭합니다.
9,2605a7082ad4c50f,ordered_list,"# 설치 경로를 지정합니다.
# <strong>설치</strong>를 클릭합니다."
10,a0e8d0f154532c66,ordered_list,# 아래와 같이 설치가 진행됩니다.
11,7ebdffa6b51049fc,ordered_list,# <strong>다음</strong>을 클릭합니다.
12,c19f14274b364ad1,ordered_list,# 성공적으로 설치되면 아래와 같은 화면이 나타납니다.
13,be5301784a46fb61,ordered_list,# Studio를 실행하십시오.
14,83558a2ca6cf5cd8,ordered_list,# Workspace를 지정합니다.
15,104106c5a6d45c9b,ordered_list,# Studio가 시작되고 아래와 같이 웰컴 페이지가 표시됩니다. 각 항목을 클릭하면 해당 내용을 확인할 수 있습니다.
16,a751c7317c73c472,ordered_list,"# <strong>Help</strong> ­ <strong>웹스퀘어 라이선스 등록</strong>을 선택하여, 라이선스를 입력합니다."
17,6a6cffd695488ac2,ordered_list,# 라이선스가 등록되면 아래와같은 창이 나타납니다.
18,2f10aa690daf31c2,normal,WebSquare5 Studio를 설치하려는 PC에 JDK(Java Develoment Kit) v1.8 버전이 설치되어 있어야 합니다.
19,e821959f47e5ed5e,caution,"<strong>한글 포함 금지 및 글자수 제한</strong>

설치 폴더명이 <span class=""r_blue001_span"">한글을 포함하거나 256자를 초과할 경우</span> WebSquare5 Studio가 정상적으로 작동하지 않을 수 있습니다."
20,55ca6074cd7402dc,note,"<strong>최신 Eclipse 설치 지원 </strong>

20220325 버전 이후 부터 최신 이클립스 설치를 지원합니다."
21,c43c411fe1186808,ordered_list,# <strong><em>webSquare_5_0_5_feature_xxx.zip</em></strong> 파일을 준비합니다. (파일명은 변경 될 수 있습니다.)
22,9d60514fa13f0d5b,ordered_list,"# Eclipse 공식 홈페이지에서 제공하는 Eclipse IDE for Java EE Developers를 설치합니다. (Eclipse IDE for Java EE Developers는 WebSquare5이 사용하는 기본적인 플러그인을 포함합니다.)
# Eclipse를 실행합니다.
# <strong>Help</strong> ­ <strong>Install New Software...</strong> 을 선택합니다."
23,431a8c03d1069bdd,ordered_list,"# 아래와 같이<strong> Install 창</strong>이 나타나면 <span class=""r_bold01_span"">Add</span> 버튼을 클릭합니다"
24,248f754faaf9229a,ordered_list,# 아래와 같이 <strong>Add Repository 창</strong>이 나타나면 원하는 이름을 <strong>Name</strong> 항목에 입력합니다.
25,96f94c1b821aa091,ordered_list,"# <strong>Archive..</strong> 버튼을 클릭하여 Location에 <strong><span class=""r_italic_span"">websquare_5_0_5_feature_xxx.zip</span></strong> 파일을 추가합니다.
# <strong>Add</strong> 버튼을 클릭합니다."
26,2caea9735c9abe8b,ordered_list,"# <strong>Install 창</strong>에 <strong><em>webSquare_5_0_5_feature_xxx.zip </em></strong>파일의 경로가 표시된 것을 확인합니다.
# <strong>Details</strong> 항목에서 제일 상단의 <strong>Show only the latest version of available software</strong> 항목만 남겨두고 모두 체크 해제합니다."
27,d4ff1ebd177ccd7e,ordered_list,"# <strong>Details</strong> 항목의 체크박스를 해제한 후, 상단에 feature 파일 2개가 표시되는지 확인합니다."
28,c7d5251585a33bad,ordered_list,"# 2개의 feature 파일들을 모두 선택하고, <strong>Next</strong> 버튼을 클릭합니다."
29,ba303c966ec21811,ordered_list,"# 선택한 feature 파일들을 확인하고, <strong>Next</strong> 버튼을 클릭합니다."
30,6e3104a57c836d8a,ordered_list,"# 동의 후, <strong>Finish</strong> 버튼을 클릭합니다."
31,7d36e82cabd76bfb,ordered_list,# 아래와 같은 메시지가 설치 중 표시되면 <strong>Install anyway</strong> 버튼을 클릭합니다.
32,f7cc06f391a8be65,ordered_list,# <strong>Restart</strong> 버튼을 클릭합니다.
33,8260d3f4a0646e46,ordered_list,"# Eclipse가 재실행되고 WebSquare 플러그인이 설치됩니다.
# <strong>Open Perspective</strong> 메뉴를 사용하여 WebSquare 설치를 확인합니다."
34,869b0d08965484c5,ordered_list,"# Eclipse 우측 상단에서 WebSquare 아이콘을 확인합니다. 
# <strong>Create a Project</strong>를 클릭합니다."
35,403a3281c54b2650,ordered_list,# <strong>New Project</strong>에서 WebSquare Project가 생성되는지 확인합니다
36,d23227bc6846ad2a,ordered_list,"# <strong>[Windows]</strong> - <strong>[Preferences]</strong>를 클릭합니다.
# 왼쪽 목록에서 <strong>WebSquare</strong>를 클릭합니다.
# 각 항목을 설정합니다."
37,00960fffa56d53f4,ordered_list,"# WebSquare Studio를 시작합니다.
# <strong>[<span class=""r_screen_text_span"">Window]-[Preferences]</span></strong>를 선택합니다.
# <strong>[<span class=""r_screen_text_span"">WebSquare]-[Embedded Engine]</span></strong>를 선택합니다.
# 현재 설치된 Engine 버전을<span class=""r_screen_text_span""> </span>확인합니다."
38,e7dd484233737449,ordered_list,"# <strong>Add</strong>를 클릭하여 Engine 파일을 추가합니다. (<em><strong>zip</strong></em> 확장명의 압축 파일로, 압축 해제할 필요는 없습니다.) 
# 새 Engine이 추가되는 과정은 오른쪽 아래의 상태 진행 창에서 확인할 수 있습니다. 100% 완료되면 새로운 Engine이 성공적으로 추가됩니다.
# 새 버전의 Engine을 선택하고 <strong>OK </strong>버튼을 클릭하면 스튜디오가 재 시작되며 새로운 Engine으로 바뀌어 있는 것을 확인할 수 있습니다."
39,5c48f435d26faee2,normal,"WebSquare5 Engine은 JAR 파일 형태로 제공되어 웹 서버에 설치됩니다. WebSquare5 Engine의 설치 사양은 WebSquare5 Engine이 설치되는 웹 서버 사양을 따릅니다. 단, 대용량 파일 업로드/다운로드와 같은 웹을 통해 제공하는 서버스 종류 및 규모에 따라 웹서버 환경을 구성할 것을 권장합니다."
40,cb0e5ca7484f1203,normal,"좀 더 자세한 내용은 <a class=""link"" href=""https://inswave.com/confluence/pages/viewpage.action?pageId=14723235"">웹스퀘어 서버 설치 가이드</a>를 참고하십시오."
41,36927e623c280d89,definition_list,"웹
IE11 이상
+ IE 제외 기타 웹 브라우저는 에버그린 브라우저 정책 따름. (최신 버전 및 직전 버전을 지원.)
모바일
Andorid 
+ Safari (iPhone, iPad)"
42,0c348f39632f45d9,pre,"프로젝트의 <span class=""r_italic_span"">WebSquare Configure</span> 폴더에 있는 <span class=""r_italic_span"">client.config.xml</span> 및 <span class=""r_italic_span"">server.config.xml</span> 파일을 클릭하여 직접 설정을 변경할 수 있습니다."
43,4659344f87718cbf,normal,"다음은 <span class=""r_italic_span"">client.config.xml</span> 파일을 클릭하면 표시되는 화면입니다. 각 설정 항목에 대한 설명이 표시되며, 설정 값을 직접 입력하거나 선택할 수 있습니다. 하단의 카테고리를 클릭하면 해당 부분으로 직접 이동할 수 있습니다."
44,96cec01948961aa0,note,"설정 항목에 대한 자세한 설명은 <a class=""reference text"" href=""#db5edae0d31101bd"">client.configlxml (클라이언트 설정)</a> 참조."
45,0a8656ca65c6b1d0,normal,"다음은 <span class=""r_italic_span"">serverconfig.xml</span> 파일을 클릭하면 표시되는 화면입니다. 각 설정 항목에 대한 설명이 표시되며, 설정 값을 직접 입력하거나 선택할 수 있습니다. 하단의 카테고리를 클릭하면 해당 부분으로 직접 이동할 수 있습니다."
46,416008b372648b91,note,"설정 항목에 대한 자세한 설명은 <a class=""reference"" href=""#42b8f4c660d4b1c8"">server.config.xml (서버 설정)</a> 참조."
47,1e03c93f5a4c8aab,normal,본 단락은 WebSquare5 엔진 설치 시 발생할 수 있는 주요 상황 및 그 해결책을 정리한 것입니다. 아래의 이슈에 대한 해결책을 참고하십시오.
48,ca560cd261361d12,normal,"WebSquare.startApplication is not function"" 경고 창이 나올 경우 래의 방법으로 확인하십시오."
49,2981d57c30ad0be5,ordered_list,"# 브라우저 개발자도구에서 <strong><em>config.xml</em></strong>의 유형(MIME-Type)을 확인합니다. 
# 정상인 경우 application/xml이 표시되어야 합니다. (""text/html"" 등으로 표시되면 오류입니다.)"
50,0679ac3820f8885b,ordered_list,"# JEUS 6 혹은 webtob인 경우, http.m의 xml 관련 MIME-Type을 확인합니다.
# ""xml MimeType = ""application/xml"", SVRTYPE = HTML""인지 확인합니다."
51,68c325077c0c83b1,normal,"WebServer와 WAS를 분리해서 사용할 경우, .jar 및 .jsp 파일은 WAS에 나머지 파일은 WebServer에 저장하십시오."
52,3cf24f63e7f8fab8,ordered_list,# WebServer와 WAS에 동일한 폴더 구조를 구성합니다.
53,e93fd8d112158d1f,note,"# engine , externalJS, fiddle, uiplugin 폴더를 확인하십시오
# 특히 externalJS 하위의 editor 폴더에는 같은 이름의 .js 파일이 존재할 수 있습니다."
54,d9352b9430947b0f,ordered_list,"# 이후 웹스퀘어 화면 file은 모두 WebServer의 해당 경로로 업로드 해야합니다. (WAS에 올릴 경우, xml 헤더 중복 에러가 발생할 수 있습니다.)
# 브라우저 개발자 도구에서 GET /websquare/javascript.wq?q=/bootloader 이상 진행하지 못하는 경우, <kbd>.wq</kbd> 관련 설정을 확인하십시오."
55,abffe1a23510e9aa,note,WebServer 및 WAS 설정 과정에서 <kbd>.wq</kbd> 처리가 필요하기 때문에 서버 엔지니어 지원이 필요합니다.
56,39f4f3f676685cd4,normal,WebSquare5를 정상 설치했으나 페이지 로딩 시 <strong><em>javascript.wq?q=/bootloader 404</em> </strong><strong> error</strong>가 발생할 수 있습니다. 이 경우 다음을 확인하십시오.
57,7647552472bcdd44,ordered_list,"# WAS 및 WebServer가 설치 경로를 정확히 바라보고 있는가? (일반적인 html파일 등을 올려놓고 확인 가능)
# WAS 및 WebServer에 설치된 WebSquare5의 권한은 어떠한가?"
58,71352466a33c9298,normal,WebSquare5를 정상 설치했으나 페이지 로딩 시 <strong><em>javascript.wq?q=/bootloader 400 error</em> </strong> 가 발생할수 있습니다. 이 경우 다음을 확인하십시오.
59,77425275f365c0c0,ordered_list,"# 클라이언트의 잘못된 파라미터 정보 또는 타입 request 시 발생합니다.
## spring, @requestParm 어노테이션 사용 시 빈 파라미터 일 때 ( required = false 처리 필요 )
## http 전송 header 크기 또는 header의 특정 값 (apache의 경우 크기 조정 가능)
## 브라우저 캐시 및 쿠키, 설정상의 문제
## 웹방화벽 문제
# 웹 방화벽에서 해당 페이지 예외 처리 후, 정상 수행되는 것을 확인합니다."
60,b9b38841dbbb88ed,ordered_list,"# 웹 방화벽에서 해당 페이지 예외 처리 후, 정상 수행되는 것을 확인합니다."
61,23036a25c0b0b500,normal,"개발자 도구에서 확인 결과 <strong><em>websquare.html</em> </strong>은 Status 200으로 정상인 경우에도 아무런 반응이 없을 수 있습니다. Window Server에 설치를 마친 후, 서버를 기동하고 Test페이지를 열어본 순간 아무런 반응이 없을 때가 있습니다. OS에 Chrome이 설치된 경우 아래의 테스트를 수행하십시오."
62,97288eaa30b34d08,ordered_list,"# Chrome에서는 정상, IE에서는 반응이 없다면, 
## IE ­ 인터넷 옵션 ­ 신뢰할 수 있는 사이트 ­ 사이트 ­ 추가를 선택합니다. 
## 해당 주소를 신뢰할 수 있는 사이트로 등록합니다. 
## <a class=""link"" href=""http://localhost:8080/websquare/javascript.wq?q=/bootloader"">http://{해당주소}/websquare/javascript.wq?q=/bootloader</a> 를 실행하여 메시지를 확인합니다. 
# Chrome에서도 반응이 없다면, 
## 설치 과정에 문제가 있는지 확인하십시오. (개발자 도구의 Network등)"
63,a35526bf94b1fdab,note,Window Server는 설치 직후 기본적인 보안 관련 제약 사항이 강력하게 설정되어 있습니다. 해당 OS에 해당 브라우져로 실행 했을 때 발생하는 문제입니다.
64,701ca1716642fe13,normal,해당 서버를 실행시키는 <strong><em>startUCMS1.sh</em></strong> 셀 스크립트를 아래와 같이 수정하십시오.
65,02a2445a2d9f9420,normal,<kbd>psrinfo -pv</kbd> 명령어로 확인하십시오.
66,fe7e5850b1a848b7,normal,아래 예제의 경우 CPU 코어 개수는 총 16개입니다
67,0abb62e5be9cc146,normal,"기존에 서비스가 있는 곳에 설치/패치 시, 충돌 날 수 있는 jar 파일은 아래와 같습니다."
68,aa74a7f5b5c37671,normal,아래와 같은 에러 메시지가 발생합니다.
69,92b61564779e144b,ordered_list,"# <strong><em>web.xml</em></strong> 에 <kbd>&lt;display-name&gt;</kbd> 태그가 없으면 정상적으로 .war 폴더를 로딩할 수 없습니다. display-name에 해당 .war 이름을 명시합니다.
# 해당 WEB-INF 폴더에 <strong><em>jboss-web.xml</em></strong> 파일이 없으면 정상적으로 해당 폴더를 로딩할 수 없습니다.
# jboss 모든 버전에서 class-loading 관련 설정이 필요합니다.
# 해당 .war 폴더에 WEB-INF를 구성해도 무방합니다. (WAS 엔지니어와 확인 필요.)"
70,2a67c2d6a553f858,normal,설치 시 확인 해야 할 content-Type은 아래와 같습니다. websquare 기동 시 오류가 발생할 경우 개발자 도구를 통해 아래 내용을 확인하십시오. 잘못된 경우 WebsSrver 또는 WAS의 mime-type을 확인하십시오.
71,2aef66324ad4513f,unordered_list,"* <strong><em>confg.xml</em></strong> - application/xml
* <strong><em>websquare.html</em></strong> - text/html
* <strong><em>javascriptPluginAll.wq</em></strong> - text/javascript
* 화면 xml - application/xml"
72,17435621f879caaa,normal,<strong><em>web.xml</em></strong> 파일에 아래 내용을 추가하십시오.
73,02a95ca6fc5677e1,normal,DB 등에서 조회한 값은 정상 호출하지만 WebSquare XML 파일의 한글이 깨지는 경우가 있습니다. 이 경우 아래 내용을 확인합니다.
74,50025bc0ba7c4e84,ordered_list,"# <strong><em>config.xml </em></strong>등의 한글 주석 등이 깨져있는가?
# XML 파일만 응답 헤더가 <kbd>contentType = application/xml;charSet=ISO_8859_1</kbd>인가? (다른 확장자는 정상.)"
75,43cbe5d983170f9b,normal,이 현상은 서버쪽의 인코딩 설정에 관련된 것일 수 있습니다. JEUS의 <strong>WEBMain.xml</strong>을 확인하십시오. 참고로 아래는 한글이 정상 출력되는 인코딩 예입니다.
76,e1188bf16f95c4de,normal,"웹서버가 iplanet (혹은 웹티어) 인경우, .wq 확장자에 대한 처리 및 mime-type 설정이 약간 복잡합니다. 이 경우 아래 내용을 확인하십시오."
77,28101345c41d9109,normal,설정 파일 위치를 확인합니다.
78,af9f2f524e4f7056,normal,아래 예제의 경우 <kbd>mime.types</kbd> 및 <kbd>XXXX_obj.conf</kbd> 파일을 변경해야합니다. (경우에 따라서<strong><em>magnus.conf</em></strong>를 변경할 때도 있습니다.
79,b11136f58fb5aa20,normal,# mime-type을 설정합니다. (예: <kbd>type=text/wq exts=wq</kbd>)
80,5e977a2e171596c1,normal,"다음은 <strong><em>XXXX_obj.conf</em></strong> 설정 예시입니다. <kbd>ppath="".wq""</kbd> 부분을 참고하십시오."
81,187d1b7dd9db8338,note,"웹로직 연계와 관련된 Object가 있다면, 복사하여 .wq 요청에 관련된 내용만 변경해서 사용할 수 있습니다."
82,76e81addf34edfe7,note,Websphere만의 특성인지는 추가 확인이 필요.
83,43980a32fd1a6fa9,normal,다음은 WebSquare5로 생성되는 XML 코드와 일반적인 HTML 코드 구조를 비교한 것입니다.
84,470be6d2d420f710,normal,"<code>onpageload</code>는 WebSquare Page 파일 생성 시 자동 생성되는 이벤트입니다. Script 탭에서 <code>onpageload</code> <code>onpageunload</code> 이벤트를 정의할 수 있으며, <code>onpageload</code> 이벤트는 페이지 로딩 후 실행됩니다."
85,fc495192e218d6b9,normal,"<code>onbeforepageunload</code> 이벤트는 WebSquare 페이지를 닫을 경우, 페이지가 닫히기 전 해당 페이지의 body 부분에서 발생합니다. <code>onbeforepageunload</code> 이벤트는 <strong>Outline</strong> 뷰의 <strong>Design</strong> 탭에서 Body를 우클릭하여 추가할 수 있습니다."
86,bef2a7a2c275afa1,normal,"아래와 같이 <strong><span class=""r_italic_span"">client.config.xml</span></strong> 파일을 설정하여 <code>initScript</code>를 등록할 수 있습니다. 페이지 로딩 직후 실행되며 <code>scwin.onpageload</code> 스크립트 이전에 실행됩니다."
87,7b84aa26232c6cea,normal,"아래와 같이 <strong><span class=""r_italic_span"">client.config.xml</span></strong> 파일을 설정하여 <code>postScript</code>를 등록할 수 있습니다. <code>postScript</code>는 페이지 로딩 시 <code>scwin.onpageload</code> 스크립트가 실행된 후에 실행됩니다."
88,da5be71dcb6e96ed,normal,Scope 기능 사용 시 스크립트는 아래의 순서로 동작합니다.
89,6ccbc3089cc51846,ordered_list,"# 외부 JS 파일
# 로컬 스크립트
# <kbd>&lt;initScript&gt;</kbd>
# <kbd>onpageload</kbd>
# <kbd>&lt;postScript&gt;</kbd>"
90,9f396cc27288f938,normal,"메인 페이지가 WFrame을 포함하는 경우, 실행 순서는 아래와 같습니다."
91,7041791081a8f340,normal,"메인 화면이 WFrame을 중첩 포함하고 있는 경우, 스크립트 수행 순서는 아래와 같습니다."
92,4bebb2f302817a55,normal,위의 그림의 순서를 표로 나타내면 아래와 같습니다.
93,19bc897c3e4706a2,normal,"참고로 Scope 기능을 사용하지 않는 경우, 스크립트 수행 순서는 아래와 같습니다."
94,9748926d619a292c,ordered_list,"# <strong>외부 JS 파일:</strong>
## PageInherit 컴포넌트의 외부 JS 파일 로딩.
## 메인 페이지의 외부 JS 파일 로딩.
## WFrame 컴포넌트의 외부 JS 파일 로딩.
# <strong>메인 페이지:</strong>
## 메인 페이지의 initScript (<strong><em>config.xml</em></strong> 파일에 정의된 JS 파일.)
## 메인 페이지의 &lt;script&gt; 영역에 정의된 스크립트. 
## 메인 페이지의 <kbd>onpageload</kbd> 이벤트 (화면의 &lt;script&gt; 영역에 정의.)
# <strong>WFrame 컴포넌트:</strong>
## WFrame 컴포넌트의 initScript (<strong><em>config.xml</em></strong> 파일에 정의된 JS 파일.)
## WFrame 컴포넌트의 &lt;script&gt; 영역에 정의된 스크립트. 
## WFrame 컴포넌트의 <kbd>onpageload</kbd> 이벤트 (화면의 &lt;script&gt; 영역에 정의.)
# <strong>postScript:</strong>
## WFrame 컴포넌트의 postScript (<strong><em>config.xml</em></strong> 파일에 정의된 JS 파일.)
## 메인 페이지의 postScript (<strong><em>config.xml</em></strong> 파일에 정의된 JS 파일.)"
95,7bbf002237e2d1db,normal,"웹스퀘어5는 화면 소스를 JavaScript로 빌드할 수 있는 W-Pack을 제공합니다. 스튜디오에서 개발한 화면 파일은 XML 형식으로 생성되며, W-Pack은 이를 JavaScript 파일로 변환합니다."
96,d9ca9acdfbde8d26,definition_list,"파일 크기 감소
압축 및 최소화(Minify) 기능을 제공하여, 기존 XML 형식과 비교하여 파일 크기가 감소되었습니다."
97,dcbddc5e942e5641,definition_list,"보안성 개선
난독화(Obfuscation)를 통해 소스 코드의 보안성을 높였습니다."
98,63fc127eb61090ef,definition_list,"속도 개선
웹 환경에 최적화된 JS 파일은 XML과 비교하여 로딩 시간이 짧고 메모리 사용량이 적어, 웹스퀘어 엔진은 JS 파일을 이용하여 더욱 빨리 화면을 브라우저에 그릴 수 있습니다."
99,4c6ca3b166795856,normal,"XML 화면 파일은 JS 파일로 변환되어 <strong><span class=""r_italic_span"">/WebContent/_wpack_/</span></strong> 폴더 아래에 저장됩니다. 화면 파일 개발에 사용한 공통 리소스도 JS 파일로 변환되어 <strong><span class=""r_italic_span"">/WebContent/_wpack_/cm/</span></strong> 폴더 아래에 저장됩니다."
100,e60205c9152f558b,normal,"WebSquare Studio에서 작성한 화면은 XML 파일로 생성되며, W-Pack에 의해 JS 파일로 변환되며, 브라우저는 XML 파일을 표시하나 화면을 표시할 때 실제로 사용하는 파일은 JS 파일입니다."
101,5f5a68c0c898ca9a,normal,WebSquare5로 개발한 화면의 브라우저 호출 순서는 아래와 같습니다.
102,48f01eaa39908806,ordered_list,"# 브라우저에서 화면을 호출합니다. 
# 서버 쪽 WebSquare5 엔진의 <strong><em><span class=""r_italic_span"">websquare.html</span></em> </strong> 파일이 호출됩니다. 
# WebSquare5 엔진이 구동됩니다. 
# 화면에 해당하는 XML 파일을 URL로 호출합니다. 
# W-Pack에 의해 변환된 JS 파일이 로딩됩니다.
# 해당 화면이 브라우저에 표시됩니다."
103,3247aa1b5b9be6be,normal,브라우저에는 호출한 화면의 XML 파일 명이 표시됩니다.
104,5870e9cf54bd3481,normal,실제 브라우저에 구동되는 파일은 아래와 같이 JS 파일입니다.
105,6b76b5a164d6c822,normal,"컴포넌트 별로 사용자 정의 attribute를 사용하는 경우, w3c validator에서 오류가 검출됩니다. <strong><span class=""r_italic_span"">client.config.xml</span></strong> 설정 파일에 <code>&lt;dataPrefix&gt;</code> 항목을 아래와 같이 설정하면 <code>""data-""</code> prefix가 추가되어 오류가 발생하지 않습니다."
106,00352c6dd4cc37e4,normal,"GridView에서 텍스트 데이터를 출력할 경우 <code>&lt;nobr&gt;</code> 태그로 출력됩니다. <code>&lt;nobr&gt;</code> 태그는 비권장 태그입니다. <strong><span class=""r_italic_span"">client.config.xml</span></strong> 설정 파일에 <code>&lt;gridView&gt;</code> ­ <code>&lt;dataTag&gt;</code> 항목을 아래와 같이 설정하여, <code>&lt;nobr&gt;</code> 태그 대신 <code>&lt;span&gt;</code> 태그로 출력하십시오."
107,c2c0afe82060d540,normal,"<strong><span class=""r_italic_span"">client.config.xml</span></strong> 설정 파일에 <code>&lt;removeXmlNameSpace</code><code>&gt;</code> 항목을 아래와 같이 설정하면, XML 관련 namespace를 제거할 수 있습니다."
108,80317ef362eefc8f,normal,"Scope 기능을 사용할 경우 개발자는 웹페이지 전체를 하나의 Single Page로 쉽게 구현할 수 있습니다. 보통의 경우 IFrame을 프레임 단위로 사용하지만, IFrame은 매번 사용할 때마다 브라우저가 다시 로딩되기 때문에 메모리 부하가 증가하는 단점이 있었습니다. 독립된 단위로 동작하는 WFrame은 기존의 IFrame을 대체할 수 있으며, 개발자는 IFrame 사용을 최소화하여 웹 어플리케이션의 전반적인 성능을 개선할 수 있습니다."
109,7fcdb3e2992c7443,note,"<strong>WFrame 권장 </strong>

외부 솔루션과의 연계 등 브라우저를 다시 로딩하여 메모리를 비워야 하는 것과 같이 특수한 경우에만 IFrame을 사용하십시오. 대부분의 경우, WFrame 사용을 권장합니다."
110,53b90b9da1865f93,normal,<code>openPopup</code><code>()</code> 함수를 이용하여 WFrame 팝업을 생성할 때 <code>dataObjec</code>t를 통해 파라미터를 전달할 수 있습니다. 생성된 팝업의 <code>src</code> 페이지는 <code>$p.getParameter(</code>) 함수를를 통해 전달받은 파라미터 확인 가능합니다.
111,3694c0f59262802b,normal,또한 팝업에 설정된 페이지 정보는 아래 방법으로 확인할 수 있습니다.
112,aa695befa2da5008,normal,<code>addTab()</code> 함수로 추가하는 탭에 <code>dataObject</code>를 통해 파라미터를 전달할 수 있습니다. 생성된 탭에서는 <code>$p.getParameter()</code> 함수를 통해 전달받은 파라미터 확인 가능합니다.
113,90edeab45abafc42,normal,<code>createWindow()</code> 함수를 통해 추가하는 윈도우에 <code>dataObject</code>를 통해 파라미터를 전달할 수 있습니다. 생성된 윈도우에서는 <code>$p.getParameter()</code> 함수를 통해 전달받은 파라미터 확인 가능합니다.
114,7acef3a77caacb46,normal,WFrame에 <code>setSrc()</code> 함수를 이용하여 페이지를 설정할 때 <code>dataObjec</code>t를 통해 파라미터를 전달할 수 있습니다. 생성된 WFrame의 <code>src</code> 페이지는 <code>$p.getParameter(</code>) 함수를를 통해 전달받은 파라미터 확인 가능합니다.
115,7a3fbe6503ba2614,normal,또한 WFrame에 설정된 페이지 정보는 아래 방법으로 확인할 수 있습니다.
116,483ebd156838a002,normal,"Scope은 웹 페이지를 구성하는 모든 단위 화면에 유효 범위(Scope)를 설정하는 기능입니다. 모든 화면은 Scope 단위로 존재하기 때문에, Scope에 포함된 객체 및 스크립트는 Scope 내에서만 유효합니다. 즉, 동일한 컴포넌트 ID 및 스크립트를 여러 개의 화면에서 함께 사용하더라도 웹 페이지는 정상 동작합니다."
117,11068d094b89cdb6,normal,Scope 기능을 사용하기 위해서는 각 화면을 WFrame으로 구성하고 WFrame 내에 표시할 화면(XML 파일)은 <kbd>src</kbd>및 <kbd>setSrc</kbd> API를 통해 정적/동적으로 지정하십시오.
118,f5985e2b881136b5,normal,WFrame으로 구성한 화면은 Scope으로 인식되어 각 WFrame 내에 존재하는 객체 및 스크립트는 해당 WFrame 내에서만 유효합니다.
119,abc1ce54cdf25cfe,normal,각 WFrame을 Scope 객체로 지정하기 위해서는 SPA Variable에서 Scope 변수명을 설정해야 합니다. 기본 값은 <code>scwin</code>입니다. WebSquare5 Studio에서 Page를 생성하여 이벤트를 추가할 경우 해당 함수 앞에 <code>scwin.</code>이 자동 추가되고<code> scwin.</code>로 시작하는 스크립트는 자신이 호출된 WFrame 내에서만 실행됩니다.
120,25d9f54ee241db1d,normal,WFrame의 Scope 기능을 사용하기 위해서는 아래의 설정이 필요합니다.
121,1170c0f1735339e7,normal,"Scope 기능을 사용할 경우 <a class=""reference"" href=""#1d4fbb99f119733d"">스크립트 실행 순서</a>에 따라 스크립트가 동작해야 합니다. 이를 보장하기 위해 <strong><em><span class=""r_italic_span"">config.xml</span></em> </strong> 파일에서 <kbd>&lt;scriptPrecedence&gt;</kbd> 항목을 아래와 같이 설정하십시오."
122,65d81930651ae3be,normal,"Scope 기능을 사용할 경우, 각 화면은 독립적으로 동작하며 객체의 직접 참조는 WFrame 내에서만 가능합니다. <kbd>strictMode</kbd>는 메인 화면에 내부적으로 WFrame을 씌우는 기능입니다. <strong><em>config.xml</em></strong> 파일에 아래 설정을 추가하십시오."
123,0bc914ea30f5355b,normal,<kbd>strictMode</kbd>의 id로 지정된 값에 따라 메인 화면에 포함된 객체의 ID가 변경됩니다.
124,4404ee2e33fa393d,normal,"위의 예제에서 <kbd>&lt;strictMode value = ""<span class=""r_blue_span"">true</span>"" id=""<span class=""r_blue_span"">mf</span>""&gt;</kbd>로 설정할 경우, 메인 화면 내에 포함된 textbox1 및 image1 컴포넌트는, ID 앞에 <kbd>mf_</kbd>가 추가됩니다."
125,2b5abb343ea4d576,caution,"<strong>CSS 디자인 </strong>

<strong>strictMode</strong> 사용은 최상단 메인 페이지를 WFrame으로 씌우는 것을 의미합니다. 
즉, 메인 화면에 속한 컴포넌트의 ID는 ""<strong><span class=""r_blue001_span"">메인 화면에 사용한 WFrame의 ID</span></strong>"" + ""<strong><span class=""r_blue001_span"">_</span></strong>"" + ""<strong><span class=""r_blue001_span"">컴포넌트 ID</span></strong>""로 변경됩니다. 
이는 메인 화면의 CSS 디자인에도 영향을 미칩니다. 
예를 들어 #header 대신 <span class=""r_blue_span""><span class=""r_blue_span""><strong>#메인화면용</strong></span><strong>WFrame의ID_header</strong></span> 형식을 사용해야 합니다.
좀더 자세한 내용은 <a class=""reference"" href=""#ec1621ad639c1361"">CSS</a> ­ <a class=""reference"" href=""#df22d7ec4a8637a4"">class selector 사용</a> 및 <a class=""reference"" href=""#432db39e7d977b48"">jQuery의 id selector 사용</a> 부분을 참고하십시오."
126,55aa57b371894337,normal,"WFrame의 scope 기능은 JavaScript의 ""with"" 문을 사용하여 구현하였습니다. ""with"" 문은 지정한 객체 내에 있는 자원에 빨리 접근할 수 있습니. 단, ""with"" 문에 내의 객체가 해당 자원을 포함하지 않을 경우, 객체 외부에서 동일한 이름의 자원을 찾으려는 시도를 합니다."
127,3ccb4d0973f1fe02,normal,"위의 예에서 <span class=""r_blue_span"">record</span> 객체에 <span class=""r_blue_span"">firstName</span>이나 <span class=""r_blue_span"">lastName</span> 혹은 <span class=""r_blue_span"">email</span> 자원이 없을 경우, 부모를 포함한 상위 화면에서 해당 자원을 찾습니다. 그러나, 이 같은 동작은 코드의 명확도를 낮추며 의도하지 않은 동작으로 이어질 수 있습니다. <strong>strictMode</strong>는 자원 참조를 해당 WFrame 내부로만 제한하여 이 같은 단점을 보완합니다."
128,5447ca87c67c0044,normal,<strong>strictMode</strong>는 최상단 메인 화면을 WFrame으로 씌워서 메인 화면 내 컴포넌트에 Scope를 설정합니다. 그 결과 최상단 메인 화면을 포함한 모든 화면을 WFrame 단위로 관리하여 모든 화면에 대해 Scope 기능을 적용할 수 있습니다.
129,6eb641223fe65233,note,"<strong>다른 유효 범위 참조</strong>

외부의 WFrame에 있는 객체를 참조하기 위해서는 명시적으로 해당 객체를 지정해야 합니다. 
(<a class=""reference"" href=""#970e479e681ded8e"">WFrame 간의 화면 참조</a> 참고.)"
130,9be6930357724aef,normal,"본 설정은 다중 WFrame 구조를 사용하는 경우 필요합니다. 본 설정을 추가해야 Scope 기능 적용을 위해 정의된 <a class=""reference"" href=""#1d4fbb99f119733d"">스크립트 실행 순서</a>를 보장할 수 있습니다."
131,d530175ea48d3310,normal,<strong><em>config.xml</em></strong> 파일에 아래의 설정을 추가하십시오.
132,a6368c3ce7953169,caution,SP1 이전 엔진의 하위 호환성을 유지하기 위해 별도로 설정하십시오.
133,05945cb49fa85c82,normal,"각 화면 파일의 스크립트를 해당 WFrame 내에서만 실행하기 위해서는 스크립트 앞에 변수를 추가해야 합니다. 이 변수를 <strong><em><span class=""r_italic_span"">config.xml</span></em> </strong> 파일에 등록하십시오. 기본 값은 <kbd>scwin</kbd>입니다."
134,34ac4808b8521018,ordered_list,"# Project Explorer에서 <strong>WebSquare Project</strong>를 우클릭한 후 <strong>Properties</strong>를 클릭합니다.
# <strong>WebSquare</strong> - <strong>Engine Configuration</strong>을 선택합니다.
# <kbd>&lt;spa&gt;</kbd>의 <kbd>&lt;variable&gt;</kbd> 옵션을 설정합니다. (여러 개를 등록할 경우, 제일 앞의 변수가 적용됩니다.)
# Project Explorer에서 <strong>WebSquare Project</strong>를 우클릭한 후 <strong>Properties</strong>를 클릭합니다.
# <strong>WebSquare</strong> - <strong>Engine Configuration</strong>을 선택합니다.
# <kbd>&lt;spa&gt;</kbd>의 <kbd>&lt;variable&gt;</kbd> 옵션을 설정합니다. (여러 개를 등록할 경우, 제일 앞의 변수가 적용됩니다.)"
135,a8c1d3ccc41ebc68,normal,"화면 파일(XML)을 <a class=""reference"" href=""#1d4fbb99f119733d"">스크립트 실행 순서</a>에 따라 로딩하기 위해 필요한 설정으로, 각 화면 파일에서 설정합니다."
136,40ddeea845b09865,caution,SP1 Studio 부터 WebSquare Page 선택시 기본 설정으로 선택됩니다.
137,af868e52ebaadcc6,normal,"Scope 기능을 사용하려면 아래와 같이 JavaScirpt의 <kbd>lazy=""false""</kbd> 모드를 설정해야 합니다."
138,488f9075542ac0ef,ordered_list,"# Project Explorer에서 <strong>WebSquare Project</strong>를 우클릭한 후 <strong>Properties</strong>를 클릭합니다.
# <strong>WebSquare</strong> - <strong>Design Editor</strong>를 선택합니다.
# <strong>Use JavaScript Section Lazy Loading flag</strong> 항목을 선택 해제합니다."
139,0d5ccc9a234e9b3d,ordered_list,"# WebSquare 프로젝트 - <strong>New</strong> - <strong>WebSquare Page</strong>를 선택합니다.
# Source 탭에서 아래와 같이 JavaScript의 <kbd>lazy=""false""</kbd> 모드가 설정된 것을 확입합니다."
140,461a71b23acce1fc,normal,"<kbd>mode=""sync""</kbd> 설정은 다중 WFrame 구조를 사용하는 경우 필요합니다. 본 설정을 추가해야 Scope 기능용 <a class=""reference"" href=""#1d4fbb99f119733d"">스크립트 실행 순서</a>를 보장할 수 있습니다."
141,1d1cb076771e83b5,pre,"<kbd>scope=""true'""</kbd> 설정은  WFrame에 포함된 컴포넌트 및 스크립트의 유효 범위를 제한하기 위해 필요합니다. 
(1) 컴포넌트 ID에 WFrame에 대한 정보(유효 범위)를 추가.
(2) WFrame 내에서 정의된 스크립트는 해당 WFrame 내에서만 실행."
142,06cb1dd6b31db497,normal,<strong><em>config.xml</em></strong> 파일에 아래의 설정을 추가하십시오.
143,37ff99543bc2e000,normal,WFrame의 scope 기능은 WFrame의 속성을 통해서도 설정할 수 있습니다. <strong>Property 탭</strong>에서 <strong>scope</strong> 속성을 <strong>true</strong>로 선택하십시오.
144,4b090079bea5af9e,normal,WindowContainer를 위한 설정으로 <kbd>getWindow</kbd> 함수가 <kbd>windowId</kbd>를 기준으로 동작하도록 설정합니다.
145,529ea30a1a78dd89,normal,"<strong>strictMode</strong>를 사용할 경우, 최상단 메인 화면은 WFrame으로 감싸지고 메인 화면에 속한 컴포넌트의 ID는 아래와 같이 변경됩니다."
146,4b88607fd33af86c,caution,"<strong>CSS 디자인 </strong>

<strong>strictMode</strong> 사용은 최상단 메인 페이지를 WFrame으로 씌우는 것을 의미합니다. 
즉, 메인 화면에 속한 컴포넌트의 ID는 ""<strong><span class=""r_blue001_span"">메인 화면에 사용한 WFrame의 ID</span></strong>"" + ""<strong><span class=""r_blue001_span"">_</span></strong>"" + ""<strong><span class=""r_blue001_span"">컴포넌트 ID</span></strong>""로 변경됩니다. 
이는 메인 화면의 CSS 디자인에도 영향을 미칩니다. 
예를 들어 #header 대신 <span class=""r_blue_span""><span class=""r_blue_span""><strong>#메인화면용</strong></span><strong>WFrame의ID_header</strong></span> 형식을 사용해야 합니다.
좀더 자세한 내용은 <a class=""reference"" href=""#ec1621ad639c1361"">CSS</a> ­ <a class=""reference"" href=""#df22d7ec4a8637a4"">class selector 사용</a> 및 <a class=""reference"" href=""#432db39e7d977b48"">jQuery의 id selector 사용</a> 부분을 참고하십시오."
147,19dd2722a3f0330e,normal,"아래 스크립트는 <span class=""r_red_highlight_span""><kbd>id=""image1""</kbd> </span>인 컴포넌트의 <kbd>title</kbd> 속성 값을 찾는 동작을 수행합니다."
148,6ddd3ae3a7171381,normal,"<kbd>strictMode</kbd>를 사용하지 않으면, <span class=""r_red_highlight_span""><kbd>id=""image1""</kbd></span> 컴포넌트가 존재하지 않을 경우 상위 화면에서 <span class=""r_red_highlight_span""><kbd>id=""image1""</kbd></span> 컴포넌트를 찾습니다."
149,37df134b5c1a3827,normal,"아래와 같이 <kbd>strictMode</kbd>를 사용할 경우, 스크립트가 정의된 WFrame 화면 내에는 <span class=""r_red_highlight_span""><kbd>id=""image1""</kbd></span> 컴포넌트가 존재하지 않기 때문에 오류가 반환됩니다."
150,6ec2654b51ed2314,normal,"WFrame의 <kbd>scope=""true</kbd>"" 설정을 사용할 경우, WFrame 내부에 포함된 컴포넌트의 ID는 아래와 같이 변경됩니다. 이를 통해 ID 중복을 원척적으로 차단할 수 있습니다."
151,d49ef1760ae05b29,caution,"<strong>변경된 ID 사용 금지!</strong>

컴포넌트 ID의 변경은 내부적인 동작입니다. 즉, ""<span class=""r_blue_span"">WFrame의ID_</span>"" 문자열을 원래의 컴포넌트 ID 앞에 추가하는 규칙은 스펙에 따라 변경될 수도 있습니다. WFrame의 scope가 적용된 전체 ID 사용을 피하십시오. 엔진 업데이트 시 정상 동작하지 않을 수 있습니다."
152,dcb57e2985c343aa,normal,아래 예제에서 메인 화면은 WFrame 3개를 포함합니다. 또한 각 WFrame과 메인 화면은 동일한 ID를 사용하는 TextBox와 Trigger 컴포넌트를 포함합니다.
153,dccfb411ec58317f,normal,"Scope 기능을 사용할 경우, <a class=""reference"" href=""#7bf007ca3fcc8702"">최상단 메인 화면</a> 및 <a class=""reference"" href=""#ed17917093c74e45"">WFrame 내부</a> 화면에 포함된 컴포넌트의 ID가 변경되어 각 화면에 포함된 동일한 ID는 내부적으로는 서로 다른 ID로 변환됩니다. 그 결과 개발자는 ID 중복 걱정 없이 WFrame을 이용하여 화면을 구성할 수 있습니다."
154,df288ba3c52f83d1,normal,"Scope 기능을 적용할 경우, 각 화면은 Scope 단위로 관리됩니다. 따라서 함수 역시 Scope 객체 내에서 실행되며, 해당 함수는 자신이 어느 Scope에서 실행되는지에 대한 정보가 필요합니다. 그러나 자신이 속한 Scope 정보를 별도의 인자로 받도록 처리할 경우, 코딩이 복잡해 집니다."
155,ce57d58a61d85d88,normal,"이를 해결하기 위해 Scope 객체에 기존의 <kbd>$w</kbd> 계열 함수를 모두 추가했습니다. 즉, 유틸리티 기능을 제공하는 <kbd>$w.XXX</kbd> 부류의 API를 <kbd>scwin.$w.XXX</kbd> 형태로 사용할 수 있습니다. 그러나, 이 역시 코딩이 길어지는 문제가 있습니다. 이를 위해 <kbd>scwin.$w</kbd>를 <kbd>$p</kbd>에 매핑하여, <kbd>scwin.$w</kbd> 대신 <kbd>$p</kbd>를 사용할 수 있도록 했습니다."
156,2a89e5d8cc24f35f,caution,"<kbd>top</kbd> vs. <kbd>main</kbd> 

아래의 그림과 같은 경우 WFrame1-1에서 각 API를 실행하면 서로 다른 결과를 반환합니다. 
<kbd>top</kbd>: main을 반환.
<kbd>main</kbd>: IFrame을 반환."
157,4b6d2026c64d604c,normal,"WFrame 생성 시 <kbd>dataObject</kbd> 속성을 통해 데이터를 전달할 수 있고, 호출된 페이지는 <kbd>$p.getParameter</kbd>로 해당 데이터를 참조할 수 있습니다."
158,ae7487badb0dcb0e,normal,아래의 예와 같이 <kbd>$p.openPopup</kbd>을 통해 팝업을 생성할 때 새로 생성할 팝업의 옵션을 전달하는 방법과 동일합니다.
159,190e61ba2412d74e,normal,"<kbd>dataObject</kbd>는 크게 <kbd>type</kbd>, <kbd>name</kbd>, <kbd>data</kbd> 속성으로 구성되며, 모든 속성이 존재해야 정상 동작합니다."
160,f970ef08d1a5eb04,normal,<kbd>JSON.strinigfy</kbd>를 통해 변환된 값을 <kbd>dataObject</kbd>로 그대로 설정하면 됩니다.
161,34d62699fcac38c5,caution,"단, 각 속성을 반드시 큰 따옴표 ("""")로 감싸야 합니다. 그렇지 않을 경우 <kbd>JSON.parse</kbd> 시에 오류가 발생합니다."
162,617b019e081eb410,normal,<kbd>wframe1.setDataObject(dataObject);</kbd> 호출하여 데이터를 설정한 후 <kbd>$p.getParameter</kbd>를 통해 해당 데이터를 가져올 수 있습니다.
163,0be286a60b0da24a,normal,"TabControl, WFrame, WindowContainer 컴포넌트에서 WFrame을 생성할 때 WFrame의 옵션을 <kbd>dataObject</kbd>를 통해 전달 할 수 있습니다."
164,390c436c5a428a94,definition_list,"각 컴포넌트 별 관련 API
<strong>TabControl</strong>: <code>addTab()</code> 
+ <strong>WindowContainer</strong>: <code>createWindow()</code> 
+ <strong>popUp</strong>: <code>$p.openPopup()</code> 
+ <strong>WFrame</strong>: <code>setSrc()</code>"
165,d52cbf0014441ab6,normal,"<kbd>dataObject</kbd>의 data 객체 전달 시 <kbd>JSON.stringify</kbd> → <kbd>JSON.parse</kbd>를 통해 값을 복사하며, 그 결과 다음 제약 사항이 존재합니다."
166,8b77d529f55f99fb,normal,"객체의 값에 함수를 직접 넣을 경우, 해당 속성 값은 무시됩니다. <kbd>dataObject</kbd> 객체는 <kbd>JSON.stringify</kbd> API로 변환이 가능해야 하는데 <kbd>JSON.stringify</kbd>는 함수를 무시합니다. 함수는 string 형태로 전달한 다음, 전달 받는 페이지서 eval을 통해 실행하십시오."
167,11f087629fd7c6b2,caution,"함수 실행 시 <strong><span class=""r_red_highlight_span"">scope</span></strong>는 <strong><span class=""r_red_highlight_span"">parameter를 받는 페이지</span></strong>입니다. 즉, parameter를 전달한 페이지 내의 함수를 실행하려면 함수명 앞에 <kbd>$p.parent().</kbd>를 붙여야 합니다."
168,77fa5f4a21ccdd36,normal,"객체는 순환 참조를 포함할 수 없으며, 모든 속성은 반드시 유한한 depth를 가져야 합니다. 순환 참조가 있을 경우, 값을 복사할 수 없습니다. 순환 참조가 필요한 경우, 해당 객체명을 string 형태로 넘긴 후, parameter를 받는 쪽에서 별도의 처리를 해야합니다. 예를 들어 <kbd>{""test"" : window}</kbd>와 같은 window 객체를 parameter로 넘겨야 하는 경우, <kbd>{""test"" : ""window""}</kbd>와 같이 string으로 넘긴 후, 추후 eval 등으로 별도로 처리해야 합니다."
169,06b265b9251d435c,note,"<strong>비권장</strong>

parameter로 window 객체를 넘기는 것은 권장하지 않습니다."
170,aeea6246c20932fc,normal,WFrame이 언로딩될 때 엔진은 아래의 자원을 자동으로 제거합니다.
171,cd9123d768e8be11,unordered_list,"* 웹스퀘어 객체
* DOM
* CSS
* SPA Variable에 등록한 변수
* 외부 스크립트 로딩 시 <kbd>scopeVariable</kbd>로 등록한 변수
* <kbd>$p</kbd> API로 생성된 동적 컴포넌트(<kbd>$p.data.create</kbd>, <kbd>$p.dynamicCreate</kbd> 등)"
172,ae7cc8d1d4d6d167,normal,"그러나 이외의 자원은 그대로 제거되지 않고 남아 있습니다. 예를 들어, WFrame 화면 내에서 전역 변수를 선언한 경우, 해당 변수는 페이지가 제거되어도 그대로 남아있습니다. 마찬가지로 특정 화면이 외부 라이브러리를 사용할 경우 해당 화면이 제거되어도 외부 라이브러리는 그대로 남아있습니다. 따라서 페이지의 <kbd>onpageunload</kbd> 이벤트에서 외부 라이브러리를 반드시 수동으로 릴리즈해야 합니다."
173,e5ea22c0a85662a8,normal,"<kbd>onpageload</kbd> 이벤트가 자기 화면 WFrame에 대해 <kbd>setSrc</kbd>를 호출할 경우, WFrame의 <kbd>src</kbd> 속성을 비우십시오. <kbd>setSrc</kbd>를 호출할 경우, 기존 페이지를 먼저 언로딩해야 합니다. 즉, <kbd>src</kbd> 속성이 존재할 경우, 화면 렌더링 직후 해당 화면을 폐기히고 <kbd>onpageload</kbd> 이벤트로 새 화면을 호출하게 되어 자원 낭비를 초래합니다."
174,685974bc0c629832,normal,"SP3 이상 버전은 Scope 기능 적용을 권장합니다. <kbd>scope=""true""</kbd> WFrame을 사용하십시오. <kbd>scope=""true""</kbd> WFrame과 <kbd>scope=""false""</kbd> WFrame의 혼용은 코딩의 복잡성을 증가시킵니다."
175,d747075de9b84738,normal,"외부 솔루션과의 연계 등 브라우저를 다시 로딩하여 메모리를 비워야 하는 것과 같이 특수한 경우에만 IFrame을 사용하십시오. 대부분의 경우, WFrame 사용을 권장합니다."
176,e14c5f459de28541,normal,"각 공통 함수는 자신이 실행된 Scope 내에서만 유효해야 합니다. 즉, WFrame에서 호출된 공통 함수는 해당 WFrame 내에서만 실행되어야 합니다. 그 결과, 공통 함수 개발자는 호출된 공통 함수가 어느 Scope에서 호출되었는지 파악할 수 있는 방법을 제공해야 합니다. 아래 두 가지 방법으로 가능합니다."
177,74a3592b88a3a769,ordered_list,"# Scope 내에 공통 함수 객체를 생성 (권장)
# 공통 함수 호출시 scope를 변수로 전달"
178,a168b41d04091bab,normal,"<strong><em>config.xml</em></strong>의 설정 중 <kbd>&lt;engine&gt;</kbd>/<kbd>&lt;module&gt;</kbd>로 로딩되는 JS에 포함된 공통 함수는 Main에 생성됩니다. 그러나 각 Scope에서 공통 함수를 호출할 경우, 호출된 공통 함수는 해당 Scope 내에서만 유효해야 합니다."
179,438784ba76866b99,normal,이를 위해 SP3 이상 버전은 <strong><em>config.xml </em></strong>파일에 각 scope 마다 서로 다른 공통 함수 객체를 자동으로 생성할 수 있는 설정 항목을 제공합니다.
180,b526b4c0d299858c,normal,"아래의 예제의 경우, 각 Scope마다 각기 다른 <kbd>com</kbd> 객체가 자동 생성됩니다."
181,e2cfea8849704169,normal,"객체 생성 방식은 가장 간단히 scope를 참조할 수 있는 방법으로 아래 설명할 <a class=""reference"" href=""#f05c23a47cc5b8a3"">변수 전달 방식</a>에서 발생할 수 있는 변수 전달 오류를 방지할 수 있어 권장합니다."
182,e3f5787a6dfb84c8,ordered_list,"# 공통 함수를 작성한 파일을 <strong><em>common.js</em></strong> 파일에 작성합니다.
# 공통 함수 객체를 <kbd>com</kbd>이라고 가정합니다.
# <strong><em>config.xml</em></strong> 파일에 아래 설정을 추가하십시오. (Scope에 생성할 공통 함수 객체를 <kbd>clone</kbd> 속성에 지정.)"
183,6d613b0906011f41,normal,"공통 함수 호출시 scope를 알 수 있는 객체(예: <kbd>scwin</kbd>, <kbd>$p</kbd>, 웹스퀘어 컴포넌트)를 함수의 변수로 받을 수 있습니다. 객체 정보에서 Scope 정보를 참조하여 해당 Scope에 생성된 <kbd>$p</kbd>를 사용하십시오."
184,d0bc1db7a13a364b,normal,"예를 들어, 컴포넌트 ID를 변수로 받아 해당 컴포넌트에 대해 <kbd>$w.XXX</kbd> 류의 유틸리티성 API를 실행하는 공통 함수가 존재할 수 있습니다. 이 경우, 공통 함수는 Scope 내에서만 실행되어야 하기 때문에 변수로 받은 컴포넌트에 대해 <kbd>$p.XXX</kbd> (혹은 <kbd>scwin.$w.XXX</kbd>) 형태의 API를 실행해야 합니다."
185,2dd076ff91d1c713,normal,"다음은 컴포넌트의 title 값을 반환하는 공통 함수 예제입니다. 공통 함수는 컴포넌트 ID를 변수로 받아 해당 컴포넌트에 대해 정의된 API를 실행합니다. 본 함수는 해당 Scope 내에서만 실행되어야 하기 때문에, 함수 앞에 <kbd>scwin.</kbd>을 추가하거나 유틸성 API 경우 <kbd>$w </kbd>대신에 <kbd>$p</kbd>(혹은 <kbd>scwin.$w</kbd>)를 사용해야 합니다."
186,3668817e6b043825,normal,위와 같이 정의한 공통 함수를 화면 파일에서 사용할 경우 <kbd>$p</kbd>를 변수로 입력해야 합니다.
187,51736165f3708be1,caution,프로젝트의 Scope 기능 사용 여부 및 함수의 Scope 참조 여부에 따라 공통 함수의 변수가 변경될 수 있습니다. 따라서 변수 전달 방식은 공통 함수의 표준화와 개발의 편의를 위해서 권장하지 않습니다.
188,b1121e649a35873d,normal,"SP3 이상 버전은 외부 JS를 내부 화면 내에 정의된 script와 동일하게 실행할 수 있는 기능을 제공합니다. 즉, 화면이 외부 JS를 포함할 경우, 해당 외부 JS는 화면의 컴포넌트 및 scwin 객체를 직접 참조할 수 있습니다."
189,b30155361d387adc,normal,WebSquare 페이지 내에서 외부 라이브러리를 로딩할 경우 아래 두 가지 속성을 추가하십시오.
190,8e70056001a04da8,normal,"<kbd>scopeExternal=""true""</kbd>인 경우, 연동된 외부 JS는 Scope 내에 접근할 수 있습니다."
191,d4c630b9aa5846a6,caution,"<strong>객체 참조 가능 시점 </strong>
<strong>
</strong>스크립트 로딩 시 즉시 함수가 선언/실행 되기 때문에 로딩 직후에는 렌더링된 객체를 참조하지 못할 수 있습니다. <kbd>onpageload</kbd> 이벤트 이후부터 객체를 참조하십시오."
192,08eb3ce6260d49c4,caution,"<strong>외부 라이브러리 객체 삭제 </strong>
<strong>
</strong>외부 라이브러리에서 생성한 객체는 Page 언로드시에 자동 삭제되지 않습니다. 메모리 문제가 우려되는 경우, IFrame으로 분리하여 사용할 것을 권장합니다."
193,0e8c65f49d6bddac,normal,엔진이 외부 JS 객체를 해당 Scope 내에 생성하고 삭제합니다. 이 때 사용할 객체명을 지정하십시오. 로딩된 객체는 해당 Scope 내에서만 사용 가능하고 Page 언로딩 시에 삭제됩니다.
194,c2533cdd97a89e7a,definition_list,"wframe1.xml 파일 내부에 아래 예제와 같이 외부 JS를 로딩할 경우, 
(1) <kbd>cti</kbd> 변수가 자동으로 생성되고,
+ (2) <strong><em>ctiCommon.js</em></strong><strong> </strong>및 <strong><em>wframe1.xml</em> </strong> 내부 스크립트에서만 해당 변수에 접근할 수 있습니다."
195,ee67bf0a5c466c31,caution,"<strong>변수 재정의 금지</strong>

<kbd>scopeVariable</kbd>로 등록한 변수를 외부 JS 파일 내에 재정의하지 마십시오. 이 변수를 재정의할 경우 해당 변수는 전역에 생성됩니다."
196,5a76f14d275f9a2b,normal,"WFrame을 사용하여 화면을 구성할 경우, 각 화면 내 컴포넌트의 ID는 항상 변합니다. 즉, <kbd>input1</kbd> 객체는 연결되는 WFrame에 따라 <kbd>wframe1_input1</kbd>이 될 수도 있고 <kbd>wframe2_wframe22_input1</kbd>이 될 수도 있습니다. 따라서 id selector 대신 class selector 사용을 권장합니다."
197,8eb5cfda88a653bc,caution,"<strong>class명 중복 주의</strong>

class selector를 사용할 경우 부모 화면에 정의된 스타일 이름과 겹치지 않도록 주의하십시오. 이름이 겹칠 경우 부모 화면의 class를 덮어 쓰게 되어 부모 화면의 스타일이 변경됩니다. 
class명이 겹치지 않도록 화면 ID를 class명 뒤에 붙이는 방법을 권장합니다."
198,0f8341bc37a8b6af,normal,"Scope 기능을 사용할 경우, 각 화면에 존재하는 객체의 ID는 변합니다. 그러나 jQuery와 같은 외부 모듈을 사용할 경우, ID를 통해 WebSquare 객체에 접근해야 할 경우가 있습니다. 이를 위해 SP3 이상 버전은 외부 모듈이 ID를 통해서 WebSquare 객체에 접근할 수 있는 방법을 제공합니다."
199,2520b0ae9d51fd55,normal,"아래와 같이 <kbd>$p.$(""#"" + componentID)</kbd> 형식으로 ID를 통해 객체에 접근하십시오."
200,4ecff28ffb18f701,normal,"<kbd>$</kbd> 대신 <kbd>$p.$</kbd>를 사용하여 객체를 검색할 수 있습니다. 반환된 결과는 jQuery의 검색 결과와 동일하며, jQuery와 동일하게 API를 사용할 수 있습니다."
201,5b45cbb1bbec55b3,normal,"Scope은 웹페이지 전체를 하나의 Single Page로 구현하기 위한 기능입니다. SP3 이전 엔진의 경우, IFrame을 통해 SPA를 구현했습니다. TabControl 및 WindowContainer의 경우 <kbd>spaInitCount</kbd>를 통해 엔진 재활용 가능한 IFrame 개수를 지정하고 <kbd>spaAuto</kbd> 속성을 통해 빈 IFrame을 1개씩만 미리 준비하도록 함으로써 초기 로딩 속도 저하를 방지했습니다. 그러나 SP3 이후 버전에서는 WFrame으로 구성환 화면에서 <kbd>setSrc();</kbd> 함수만 실행하여 SPA를 쉽게 구현할 수 있습니다. 즉, Scope 기능 및 WFrame을 사용하여 별도의 추가 코딩 없이 SPA를 손쉽게 구현할 수 있습니다."
202,0812bfd855255a84,normal,"객체에 접근하기 위해서는, 해당 객체가 존재하는 Scope을 먼저 찾아야 합니다. 이후 해당 Scope 내에 있는 객체에 접근하십시오. Scope는 아래 방법으로 찾을 수 있습니다."
203,f421892149efba6f,ordered_list,"# <kbd>$p.main()</kbd> 혹은 <kbd>$p.top()</kbd>으로 상위 scope에 접근.
# <kbd>$p.getWindow</kbd>를 이용하여 원하는 객체가 포함된 scope에 접근."
204,8fae34846eebb7b0,normal,아래는 디버깅용으로 Scope를 쉽게 찾기 위해 제공하는 API입니다.
205,35d1a5a8b4dc2a94,ordered_list,"# 브라우저에서 개발자 도구를 실행합니다. 
# DOM 탐색기에서 원하는 element를 클릭한다. 
# 콘솔 창에서 <kbd>$p.debug.getScope($0);</kbd> API를 실행합니다. 
# 반환되는 Scope 객체를 확인합니다."
206,b9f4a97fa6a984c3,note,브라우저의 디버깅 도구가 제공하는 특수 전역 객체 <kbd>$0</kbd>을 사용하면 DOM Element를 확인할 수 있습니다. <kbd>$0</kbd>은 현재 선택된 DOM Element를 반환하여 이는 디버깅용 API의 변수로 사용됩니다.
207,82032c9c69e2f2cc,definition_list,"즉시 사용 가능한 완성도 높은 리소스
다양한 공통 개발 리소스를 썸네일 이미지 형태로 제공합니다. 개발자들은 직관적으로 템플릿을 확인하고 코딩 과정 없이 마우스 클릭만으로 해당 리소스를 손쉽게 사용할 수 있습니다. 
+ (1) 페이지 템플릿 (화면 파일 생성 시 선택 가능)
+ (2) 레이아웃 템플릿 (화면 파일 생성 시 선택 가능)
+ (3) 스니핏 (Design System에서 썸네일 이미지를 통해 제공)"
208,bce2b340da02cfc5,normal,"SP5는 아래의 각 개발 단계 별로 위저드와 매니저, 에디터 등을 제공하며, 각 단계에 적합한 공통 리소스를 제공합니다. 개발 프로세스를 준수하여 디자인 일관성을 유지할 수 있고 공통 리소스를 최대한 재사용할 수 있습니다."
209,f717903b0612effb,definition_list,"모듈화된 개발이 가능
SP5에서 개발하는 화면 파일은 컴포넌트 형태로 사용할 수 있습니다. 특정 화면을 UDC나 프로젝트 컴포넌트로 등록하여 사용할 경우, 재사용이 가능합니다. 등록한 UDC를 수정할 경우, 변경 사항이 일괄 반영되어 개발 생산성과 유지보수 효율성을 뛰어납니다. 
+ (1) API 추가
+ (2) API 문서 생성
+ (3) Palette 등록
+ (4) 스크립트 자동 완성 지원"
210,e250d4cbb8299467,definition_list,"웹 환경에 최적화된 코드 생성
웹스퀘어는 W-Pack 기능을 제공하여 화면 파일(XML)을 JavaScript 파일로 변환합니다. 웹스퀘어 엔진은 브라우저에 환경에 최적화된 JavaScript를 이용하여 화면을 더욱 빨리 그릴 수 있습니다. 
+ (1) 파일 크기 감소
+ (2) 로딩 시간 감소
+ (3) 메모리 사용량 감소"
211,8d4dd269e74ec2cf,definition_list,"직관적인 리소스 표시
Design System은 공통 개발에 사용하는 스니핏을 포함한 디자인 관련 리소스를 썸네일 형태로 스튜디오에 표시합니다. 개발자는 손쉽게 디자인을 확인하고 원하는 디자인을 화면에 추가하여 사용할 수 있습니다."
212,d13c698d96462a16,definition_list,"편리한 리소스 관리
공통 개발에 사용하는 각종 샘플 및 템플릿 등의 리소스를 쉽게 사용하고 관리할 수 있습니다. 리소스는 종류 별로 분류되어 서로 다른 폴더에 저장되어 있으며, 개발자는 해당 폴더를 직접 관리할 수 있습니다. 또한 각종 리소스는 화면 개발 과정에서 반영되어 썸네일 이미지 형태로 제공되며, 개발자는 각 개발 단계 별로 가용한 리소스를 편리하게 선택하여 이용할 수 있습니다. 
+ (1) 페이지 템플릿
+ (2) 레이아웃 템플릿
+ (3) 내장 컴포넌트 템플릿
+ (4) 스니핏
+ (5) UDC
+ (6) 레이아웃
+ (7) 디자인 시스템"
213,6a4a98166e4f5eab,definition_list,"편리한 설정 
서버 및 클라이언트 환경을 모두 스튜디오 상에서 설정할 수 있는 GUI를 제공합니다. 설정 항목에 대한 지식 없이도 에디터가 제공하는 설명을 참고하여 직접 편집할 수 있습니다. 
+ (1) <span class=""r_italic_span"">client.config.xml</span>
+ (2) <span class=""r_italic_span"">server.config.xml</span>"
214,3bdd19a59f1e9124,definition_list,"최신 에디터 제공 
ES6, ES2020 등 최신 문법을 지원하는 Monaco Editor기반의 웹 JavaScript 에디터를 제공합니다. 화면 파일을 UDC 등의 컴포넌트 등으로 등록해서 사용할 경우, 새로 추가한 컴포넌트의 API에 대한 자동 완성 기능을 지원합니다."
215,7b30d107befb8069,pre,"SP5에서 개발하는 화면 파일은 컴포넌트 형태로 사용될 수 있고, 기존 SP4 페이지 파일을 모든 기능을 지원합니다. 페이지를 UDC로 등록하여 공통 컴포넌트로 사용할 경우, UDC의 API에 대한 주석을 기반으로 UDC 설명 문서를 작성할 수 있으며, Script 에디터에서 UDC의 API에 대한 자동 완성 기능을 사용할 수 있습니다."
216,1d09371210421779,normal,"모든 페이지는 컴포넌트로 등록 가능하며, 컴포넌트로 등록된 페이지는 간단한 클릭만으로 다른 화면 개발에서 사용할 수 있습니다."
217,a265e2f11c1700e1,normal,"프로젝트에서 사용하는 다양한 리소스를 폴더 단위로 관리할 수 있습니다. 프로젝트의 <span class=""r_bold01_span"">Configure WebSquare Project</span> 혹은 <strong>Properties</strong> 메뉴를 선택한 후 <strong>WebSquare</strong> ­ <strong>Resource Folder</strong> 항목을 선택하여 흩어진 리소스 파일 위치를 한눈에 확인하고 관리할 수 있습니다."
218,674273ff172e17b6,normal,"Design System은 개발자와 퍼플리셔 간의 유기적인 협업을 위한 기능으로, 디자인 관련 리소스를 썸네일 이미지로 표시합니다. 개발자는 직관적으로 디자인을 확인할 수 있고 클릭만으로 원하는 디자인 리소스를 화면 파일에 복사할 수 있습니다."
219,c487c67dd4a81c56,normal,"웹스퀘어 프로젝트를 생성하면, 클라이언트 환경 및 서버 환경을 설정할 수 있는 XML 파일이 <strong>/WebSquare Configure/</strong> 폴더 아래에 생성됩니다."
220,30bb95d54ff4848e,definition_list,"<span class=""r_italic_span""><span class=""r_italic_span"">client.config.xml</span> (클라이언트 환경)</span>
브라우저 상의 UI 화면 출력과 관련된 내용을 설정할 수 있습니다."
221,ca50a0549a396e90,definition_list,"<span class=""r_italic_span"">server.config.xml </span>(서버 환경)
WebSquare5 Engine의 동작과 관련된 내용을 설정할 수 있습니다.
+ (1) WebSquare 엔진 모듈 처리 설정
+ (2) Excel, CSV 업로드/다운로드 설정
+ (3) Framework 연계관련 adaptor 설정
+ (4) 다국어 처리 설정
+ (5) WebSquare Hybrid 관련 설정"
222,04cc5047c32150ab,normal,"웹스퀘어5는 화면 소스를 JavaScript로 빌드할 수 있는 W-Pack을 제공합니다. 스튜디오에서 개발한 화면 파일은 XML 형식으로 생성되며, W-Pack은 웹스퀘어 화면 파일(XML)을 JavaScript 파일로 번들링합니다. 웹스퀘어 엔진은 브라우저 환경에 최적화된 JavaScript 파일을 이용하여 화면을 그릴 수 있습니다."
223,9d9648dab1af6482,normal,W-Pack이 제공하는 이점은 다음과 같습니다.
224,39a54407f87ba489,unordered_list,"* 압축 및 최소화를 통한 파일 크기 감소
* 난독화를 통환 코드 보안성 개선
* XML과 비교하여 로딩 시간 및 메모리 사용량 개선
* 페이지 로딩 속도 개선"
225,f75b6c764f817945,definition_list,"<code>sortType</code>

<code>""numberFirst""</code> (SP5 기본 값) : GridView 컬럼 혹은 바인딩된 DataList 컬럼의 <code>dataType</code>이 <code>""number""</code> 또는 <code>""bigDecimal""</code>인 경우 number 기준으로 정렬을 수행.
+ <code>""dataType""</code> (SP4 기본 값): GridView와 바인딩된 DataList 컬럼의 <code>dataType</code>을 기준으로 정렬을 수행. GridView 컬럼의 dataType을 사용하지 않음. 
+ <code>""number""</code> : 항상 number 기준으로 정렬
+ <code>""text""</code> : 항상 text 기준으로 정렬 
+ <code>""bigDecimal""</code> : number 설정과 동일"
226,c0812ffaadc1ddd1,normal,SP5에서 <code>addTab()</code> 함수는 아래와 같이 <code>Promise.then</code> 비동기 방식으로 동작합니다.
227,4688d80a3c125b4b,normal,Workspace에 있는 프로젝트와 파일을 확인할 수 있습니다. File ­ Switch Workspace 메뉴를 선택하여 Workspace를 확인하고 변경할 수 있습니다.
228,ebcc87139a08c18d,normal,"WebSquare5가 제공하는 컴포넌트와 UDC, TTC, Snippet을 한 눈에 확인할 수 있습니다. 검색창에 컴포넌트 이름을 입력하여 컴포넌트를 검색할 수 있습니다."
229,e001da0a2bcabf18,pre,WYSIWYG 방식의 컴포넌트 디자인 공간으로 Palette 뷰에서 선택한 컴포넌트를 그릴 수 있습니다. 일반적으로 컴포넌트를 디자인하는 순서는 아래와 같습니다.
230,c08f796c08d357da,ordered_list,"# Palette 뷰에서 컴포넌트를 선택합니다.
# Design 뷰의 원하는 위치에 선택한 컴포넌트를 그립니다.
# 해당 컴포넌트의 속성, 구성, 스타일을 Property, Component, Style 뷰에서 편집합니다."
231,2ed6a315feab6a78,normal,"우측 하단<strong> Outline </strong>뷰의 <strong>Design </strong>탭은 현재 화면 구성을 트리 형식으로 표시하며, 각 컴포넌트를 선택한 후 <strong>F2</strong> 버튼을 클릭하면 해당 컴포넌트의 ID를 복사할 수 있습니다."
232,ce424965bb3fe532,normal,"개발한 화면을 페이지 컴포넌트로 등록하여 사용할 경우, <strong>Info</strong> 탭에서 관련 정보를 등록해야 합니다. 상단의 <strong>General</strong>, <strong>Component</strong>, <strong>Property</strong>, <strong>APIs</strong>, <strong>Event</strong> 탭을 활용하여 해당 화면 및 페이지 컴포넌트의 일반적인 정보를 등록하고, 페이지 컴포넌트의 속성, 함수, 이벤트를 추가할 수 있습니다. 좀 더 자세한 정보는 <a class=""reference text"" href=""#0825289df4df8d45"">WRM 컴포넌트 구성</a> ­ <a class=""reference text"" href=""#46268b2f4f2f7287"">생성</a>을 참조하십시오."
233,ba2f5e12dd92a1b4,normal,"<strong>Script</strong> 탭은 ES6, ES2020 등 최신 JavaScript 문법을 지원하는 에디터를 제공합니다. 개발자는 직접 이벤트 및 함수를 사용 하여 복잡한 기능을 구현할 수 있습니다."
234,92bb80ac185e5309,normal,마우스 오버 시 아래와 같이 툴팁을 제공합니다.
235,3d6ea2c7bf90b137,normal,"아래와 같은 컨텍스트 메뉴를 사용하여 찾기, 복사, 포맷팅 등의 기능을 사용할 수 있습니다."
236,564b94b8dba6dab2,normal,"Script 뷰에서 스크립트 작성 시, Ctrl + Space를 누르면 아래와 같이 자동 완성 기능이 제공됩니다."
237,95c97c1c7a1ec200,note,"Workspace 뷰 분리<span class=""mark index"">Design 뷰 분리</span>
[Window] - [New Editor]를 선택하면 Script 뷰과 Source 뷰만 따로 분리할 수 있습니다. 
Design 뷰과 Script 혹은 Source 뷰을 동일한 화면에 표시하여 더욱 편리하게 웹 페이지를 디자인할 수 있습니다. Script 혹은 Source 뷰에서 수정한 내용은 <kbd>CTRL+F5</kbd>를 통해 Design 뷰에 반영할 수 있습니다."
238,1feff76bf226ea8e,normal,"<strong>Design 뷰</strong>에서 컴포넌트를 선택하면 해당 컴포넌트의 속성이 <strong>Property 뷰</strong>에 표시됩니다. <strong>Property 뷰</strong>에서 각 속성을 선택하면, 해당 속성에 대한 정보가 툴팁으로 표시됩니다."
239,9e19fe583bff3a89,normal,Property 뷰의 각 속성에 마우스 커서를 올리면 아래와 같이 좌측에 속성에 대한 설명이 툴팁으로 표시됩니다.
240,32cb234bf390efb5,normal,<strong>Window</strong> ­ <strong>Preferences</strong> ­ <strong>WebSquare </strong>선택 후 Show Property Tooltip 항목을 선택하거나 선택 해제하여 속성 설명 툴팁을 표시하거나 숨길 수 있습니다.
241,4a02e6f4f0d9b5a3,normal,속성은 카테고리 별로 분류되어 표시됩니다.
242,d889c1c4d83b8cf3,normal,"기본값은 회색으로, 사용자가 직접 입력한 값은 검정색으로 굵게 표시됩니다."
243,247db78ff1d7e02e,normal,<strong>Key</strong>를 클릭하면 오름차순 정렬 ­ 내림차순 정렬 ­ 카테고리 표시 순으로 속성을 표시할 수 있습니다.
244,2a78b2f593ffcc5c,normal,<strong>Value</strong>를 클릭하면 사용자가 정의한 값이 상단에 정렬됩니다.
245,4de7ba44e057d3da,normal,"<strong>Design</strong> 탭에서 컴포넌트를 선택한 후 <strong>Property</strong> 뷰의 <strong>Event </strong>탭을 클릭하면 해당 컴포넌트가 지원하는 이벤트 목록이 표시됩니다. 각 이벤트의 <strong>script</strong> 버튼을 클릭하며, 해당 이벤트의 코드가 <strong>Script</strong> 탭에 자동 생성됩니다."
246,9d7ef1455c7c68a0,normal,"<strong>script</strong> 옆의 <strong>Meta</strong> 버튼을 클릭할 경우, 해당 이벤트의 메타 정보(이름, 설명, 규칙 등)을 입력할 수 있는 창이 표시됩니다. 이벤트의 메타 정보는 <strong>W-Docs</strong>를 사용하여 화면 설계서를 생성할 Excel 파일에 포함됩니다."
247,2b1c07049e771af4,normal,<strong>Design</strong> 뷰에서 선택한 컴포넌트의 인-라인 스타일이 아래와 같이<strong> Property</strong> 뷰 하단에 표시됩니다. 상단의 버튼을 클릭하면 스타일을 숨길 수 있습니다.
248,9e4223d095fc35dd,normal,보통의 경우 <strong>Outline 뷰</strong>의 <strong>Design </strong>탭은 현재 화면의 구성 형태를 아래와 같이 <strong>[</strong><strong>컴포넌트명#ID.클래스명]</strong> 형식으로 표시합니다.
249,efe2821714a9b1a7,normal,"우측 상단의 <strong>Change Representation</strong> 버튼(<img src=""/r/image/get/34f47d869d74e364"" width=""32"" height=""34"" />)을 클릭하면 아래와 같이 클래스명을 제외하고 컴포넌트명만 확인할 수 있습니다."
250,efdc9171e438c623,normal,"<strong>Outline 뷰</strong>의 <strong>Script </strong>탭은 현재 페이지에 포함된 스크립트 목록을 표시하며, 각 스크립트를 클릭하면 <strong>Script</strong> 뷰의 해당 코드 위치로 이동할 수 있습니다."
251,80e5246fe8e30c8d,normal,<strong>Outline 뷰</strong>의 <strong>Head</strong><strong> </strong>탭에서 <strong>DataCollection </strong>항목을 우클릭하여 원하는 DataCollection을 추가할 수 있습니다.
252,f7e8bb50adf9658c,normal,<strong>Outline 뷰</strong>의 <strong>Head</strong><strong> </strong>탭에서 <strong>Submission </strong>항목을 우클릭하여 원하는 Submission을 추가할 수 있습니다.
253,c40047fa868706a7,normal,스튜디오 상단의 도움말 아이콘을 확인하면 별도의 웹 브라우저에서 웹스퀘어 도움말을 확인할 수 있습니다.
254,d956f11e29450c28,normal,"혹은, F1버튼을 클릭하여 아래와 같이 <strong>Help</strong> 탭에서 도움말을 확인할 수 있습니다."
255,9071020f0c89c792,normal,"Help 탭 우측 상단의 브라우저 형태의 <strong>Show in external window</strong> 아이콘을 클릭하여, 별도의 브라우저에서 도움말 컨텐츠를 확인 할 수도 있습니다."
256,6225592186f504ca,normal,우측 상단의 <strong>Open Perspective </strong>버튼을 클릭하면 화면 Perspective를 설정할 수 있습니다.
257,bc1adf49fa5498d5,normal,WebSquare5는 Static 및 Absolute 그리기 모드를 제공합니다.
258,df222dd217ebcf6d,ordered_list,"# 툴바의 <strong>Change Draw Mode</strong> 아이콘을 클릭하여 ""Static"" 모드를 선택합니다.
# Palette 뷰에서 (컴포넌트를 검색하여) 추가할 컴포넌트를 선택합니다.
# 선택한 컴포넌트를 추가할 위치를 선택합니다. 
# Component 뷰에서 컴포넌트가 추가되었는지 확인합니다."
259,549ed97ee7a86256,note,"<strong>Static 모드 권장</strong>

대부분의 경우 Static 모드 사용을 권장합니다."
260,0dbfec7d3cf85571,ordered_list,"# 툴바의 <strong>그리기 모드 변경</strong> 아이콘을 클릭하여 ""Absolute"" 모드를 선택합니다.
# <strong>Palette 뷰</strong>에서 (컴포넌트를 검색하여) 추가할 컴포넌트를 선택합니다.
# <strong>Design 뷰</strong>에서 직접 마우스 드래그하여 컴포넌트의 위치와 크기를 결정합니다. (더블 클릭할 경우 해당 위치에 기본 크기로 컴포넌트가 추가됩니다.)
# <strong>Component 뷰</strong>에서 컴포넌트가 추가되었는지 확인합니다."
261,37619d0284033a83,normal,"사용자는 드래그 &amp; 드롭을 통해 컴포넌트를 쉽게 선택, 이동, 리사이징할 수 있습니다. 선택한 컴포넌트는 아래와 같이 테두리에 선과 점이 표시됩니다."
262,7efb0533e7e59970,normal,컴포넌트를 클릭 후 원하는 크기로 드래깅하여 크기를 변경할 수 있습니다. 크기 정보도 같이 표시됩니다.
263,dce27faa116398b8,normal,여러 컴포넌트를 한번에 선택하여 이동하는 것도 가능합니다.
264,9ecbe647e2c6e90f,normal,특정 컴포넌트를 드래깅하여 다른 컴포넌트의 앞/뒤로 이동할 수 있습니다.
265,bfafcbf8f6785fea,normal,원하는 컴포넌트를 이동 기준 컴포넌트의 뒷 부분에 그림자가 표시되도록 드래깅합니다.
266,7ea3abdaf56c1add,definition_list,"아래 예제에서는:
(1) <span class=""r_blue001_span"">New</span> 컴포넌트를 222 컴포넌트(이동 기준 컴포넌트)로 드래깅한 후,
+ (2) <span class=""r_blue001_span"">222</span> 컴포넌트 <strong><span class=""r_red_highlight_span"">뒤</span></strong>에 그림자가 표시되는 지점에서 드롭합니다.
+ (3) <span class=""r_blue001_span"">New</span> 컴포넌트는 222 컴포넌트 뒤로 이동됩니다."
267,2e6e6e47baef242b,normal,원하는 컴포넌트를 이동 기준 컴포넌트의 앞 부분에 그림자가 표시되도록 드래깅합니다.
268,6c30f8ac0559701f,definition_list,"아래 예제에서는:
(1) New 컴포넌트를 222 컴포넌트(이동 기준 컴포넌트)로 드래깅한 후,
+ (2) 222 컴포넌트 <strong><span class=""r_red_highlight_span"">앞</span></strong>에 그림자가 표시되는 지점에서 드롭합니다.
+ (3) New 컴포넌트는 222 컴포넌트 앞으로 이동됩니다."
269,ab5e36807489e58b,normal,Absolute 모드에서는 컴포넌트를 직접 드래깅하여 원하는 위치로 이동할 수 있습니다.
270,c0bbb835b8477f9b,normal,여러 컴포넌트를 한번에 선택하여 이동하는 것도 가능합니다.
271,cbe19fd019b0a00e,normal,"Group과 같이 하위에 컴포넌트를 포함할 수 있는 경우, 하위 이동도 가능합니다. 아래 그림은 TextBox를 Group 내부로 드래깅 하여 Group 하위로 이동하는 예시입니다."
272,bac0dcd7330b56a5,normal,아래 그림은 이동 후의 모습입니다. Group 하위로 이동된 것을 <strong>Design 뷰</strong> 및 <strong>Component 뷰</strong>에서 확인할 수 있습니다.
273,f1e93ba1f193f40e,normal,컴포넌트를 클릭하거나 컴포넌트 상에 마우스를 가져다 대면 아래와 같이 툴팁이 표시됩니다.
274,24561d99ab14a5b9,normal,툴팁 표시/숨김 아이콘을 클릭하거나 <kbd> T</kbd> 키를 눌러 툴팁을 표시하거나 숨길 수 있습니다.
275,f6fd6b673608cbee,normal,컴포넌트에 이벤트 및 이벤트 함수가 정의된 경우 아래와 같이 좌측 상단에 붉은 점이 표시됩니다.
276,e60b4d2e7d098859,normal,마우스 커서를 올리면 툴팁이 표시되고 해당 이벤트 정보를 확인할 수 있습니다.
277,c31a26388a08be42,normal,"컴포넌트가 <kbd>ref</kbd> 속성을 통해 바인딩된 경우, 아래와 같이 좌측 상단에 초록색 점이 표시됩니다. 이벤트가 존재할 경우, 빨간색 점과 함께 표시됩니다."
278,5d65f0c0f4b5351e,normal,마우스 커서를 올리면 툴팁이 표시되고 <kbd>ref</kbd> 속성을 통한 바인딩 정보를 확인할 수 있습니다.
279,6f788b58c9d5a486,normal,"<a class=""reference"" href=""#0e8180f41af7062c"">Design</a> 뷰에서 특정 컴포넌트를 선택한 후 스페이스바를 누르면 아래와 같은 퀵 툴바가 나타납니다. 사용자는 방향키를 사용하여 퀵 툴바의 각 아이콘을 선택할 수 있습니다."
280,3f4302d0aa8944dc,normal,"GridView의 경우, 컬럼을 선택한 후 스페이스바를 누르면 아래와 같은 퀵 툴바가 나타납니다. 위의 일반 컴포넌트 퀵 툴바와 달리 GridView 컬럼의 <kbd>inputType</kbd> 속성을 변경할 수 있습니다."
281,2bacd1dc6b5811da,normal,퀵 툭바 상의 각 아이콘에 대한 설명은 아래와 같습니다.
282,58a7c79863a14505,normal,컴포넌트를 우클릭하면 아래와 같이 컨텍스트 메뉴가 표시됩니다.
283,c640ef7719462d19,callout_list,"모든 컴포넌트에 공통적으로 적용되는 메뉴입니다. 
현재 선택한 컴포넌트에 적용 가능한 메뉴만 표시됩니다."
284,8afba9f911145017,normal,다음은 GridView를 우클릭할 때 표시되는 컨텍스트 메뉴입니다.
285,f590c201eab95446,normal,"컴포넌트 우클릭 후 <strong>이벤트</strong> - <span class=""r_italic_span"">이벤트 종류</span>를 선택하여 <a class=""reference"" href=""#cdde1280cabe1618"">이벤트 추가</a>가 가능합니다. 단, 이미 추가된 이벤트는 아래와 같이 ""<strong><span class=""r_red_highlight_span""> * </span></strong>"" 기호와 함께 이벤트 목록 상단에 표시됩니다."
286,0f8bcab2ef0ddfbe,ordered_list,"# <strong>Window</strong> ­ <strong>Preferences</strong> ­ <strong>WebSquare</strong> ­ <strong>Context Menu Setting</strong>을 선택합니다. 
# 마우스 우클릭 시 표시되는 컨텍스트 메뉴의 보임/숨김을 지정할 수 있습니다."
287,ded264afcdc28e80,normal,Design 뷰에서 <kbd>CTRL+C</kbd>와 <kbd>CTRL+V</kbd>를 사용하여 컴포넌트의 복사&amp;붙여넣기가 가능합니다. 단축키는 아래와 같습니다.
288,954e3fde20ef63ba,normal,"GridView나 TableLayout과 같은 표 형식 컴포넌트의 경우, 아래의 아이콘을 사용하여 표 편집을 쉽게할 수 있습니다."
289,362fbbc39b499e04,definition_list,"(1) Insert Column into Left <kbd>CTRL + Shift + L</kbd>
왼쪽에 열 삽입
(2) Insert Column into Right <kbd>CTRL + Shift + R</kbd>
오른쪽에 열 삽입
(3) Add Row <kbd>CTRL + Shift + R</kbd>
행 추가
(4) Delete Column <kbd>CTRL + Alt + C</kbd>
열 삭제
(5) Delete Row <kbd>CTRL + Alt + R</kbd>
행 삭제
(6) Merge Cell <kbd>CTRL + M</kbd>
셀 병합
(7) Divide Cell <kbd>CTRL + Shift + M</kbd>
병합 해제
(8) Move Column Left
왼쪽으로 열 이동
(9) Move Column Right
오른쪽으로 열 이동"
290,a86606ae2171aa1e,normal,"Studio의 Palette에서는 추가할 컴포넌트를 검색할 수 있습니다. Design 뷰에서 선택한 컴포넌트의 속성및 이벤트를 Property 뷰에서 검색할 수 있으며, Outline 뷰에서는 현재 페이지를 구성하는 각종 요소들을 검색할 수 있습니다."
291,cdb34397265ff6eb,pre,Design 뷰에서 컴포넌트를 그릴 때 Palette에서 컴포넌트를 검색할 수 있습니다. 컴포넌트 명이나 설명을 키워드로 입력하여 검색하십시오.
292,0ad94a8a99434255,pre,"Property, Event, Style, Meta 탭에서 Key, Value, Description 항목에 대한 키워드를 통해 각 속성 및 이벤트, 스타일 등을 검색할 수 있습니다."
293,9555e5ac423d8e26,pre,"Design, Script, Head 탭에서 키워드를 입력하여 해당 요소를 검색할 수 있습니다."
294,e350e9bf913eb448,normal,WebSquare Search 기능을 이용하여 WebSquare 페이지 파일을 효율적으로 검색할 수 있습니다.
295,21e84dd838ed2666,normal,<strong>Search</strong> ­ <strong>WebSquare</strong> 메뉴를 선택하십시오.
296,2dea5d1a0e2ccc0e,normal,"혹은, 아래와 같이 툴바의 아이콘을 클릭하여 <strong>WebSquare Search</strong>를 선택하십시오."
297,1725ef2a7ea20b30,normal,"다음은 <strong>SelectBox</strong>를 검색하되, SelectBox의 <kbd>chooseOptionLabel</kbd> 속성 값이 ""<strong><span class=""r_italic_span"">city</span></strong>""를 포함한 WebSquare 페이지 파일을 찾는 예제입니다."
298,808a3938b6ef892d,normal,"아래와 같이 Search 뷰에 검색 결과가 표시되고, 파일을 클릭하여 해당 부분을 확인할 수 있습니다."
299,5fcb7fbee78fd6ad,normal,눈금자는 아래와 같이 <strong>Design 뷰</strong> 외곽에 표시됩니다.
300,111763ca3f2e988f,normal,<strong>눈금자 표시 변경 </strong>아이콘을 사용하여 눈금자를 표시하거나 숨길 수 있습니다.
301,195d06df4d9e202d,normal,눈금선은 <strong>Design 뷰 </strong>바탕에 격자 무늬로 표시됩니다.
302,9d7968ce679e778a,normal,<strong>눈금선 표시 변경</strong> 아이콘을 선택하여 눈금선을 표시하거나 숨길 수 있습니다
303,6b156aad813fe3e1,normal,"눈금자 위의 원하는 지점에서 클릭할 경우, 아래와 같이 안내선을 생성할 수 있습니다. 이미 생성한 안내선을 다시 클릭하면 안내선을 삭제할 수 있습니다."
304,e0836315360773aa,normal,<strong>안내선 표시/숨김</strong> 아이콘을 클릭하여 안내선을 숨기거나 표시할 수 있습니다.
305,8eb8f41ba24ccb93,normal,WebSquare Studio는 뷰어 기능을 제공합니다. 상단의 <strong>WebSquare 뷰어로 확인</strong> 아이콘을 클릭하십시오.
306,70b45d999a08cc1d,normal,아래와 같이 현재 작업 중인 페이지가 WebSquare Viewer에 렌더링된 모습을 확인할 수 있습니다.
307,36d971d8f59bd351,normal,페이지가 렌더링된 모습을 브라우저에서 직접 확인할 수도 있습니다. 아래와 같이 <strong>브라우저 확인 ­ 설정</strong> 아이콘을 클릭하여 브라우저를 설정하십시오.
308,8b6dcf39f0f78246,definition_list,"모든 브라우저로 확인
<strong>[Windows]</strong> - <strong>[Preferences]</strong> - <strong>[External Programs]</strong>에 추가한 모든 브라우저에서 개발자가 작업한 파일을 표시합니다.
기본 브라우저로 확인
개발자가 PC에 설정한 기본 브라우저에서 개발자가 작업한 파일을 표시합니다.
설정
기본 브라우저를 설정할 수 있습니다."
309,4987066bed912bd9,note,"<strong>미리 보기 주소 비교</strong>

<strong>SP4 </strong>
 <span class=""r_italic_span"">/websquare/websquare.html?w2Config=<span class=""r_red_highlight_span"">/.settings/config.xml&amp;w2xPath=/tabs_added.xml</span></span>

<strong>SP5 </strong>
 <span class=""r_italic_span"">/websquare/websquare.html?w2xPath=<span class=""r_red_highlight_span"">/tabs_added.xml</span></span>"
310,6aa3a75f42814ef4,normal,"<a class=""reference"" href=""#d2b91a5b0fdc497d"">Static Mode (클릭 &amp; 클릭)</a> 모드에서 컴포넌트를 그릴 경우, 스타일 정보 없이 컴포넌트 그리기가 가능합니다.<strong> Inline Style </strong>버튼을 클릭한 후 <strong>none</strong>을 선택하십시오."
311,b9f7d1b06061472b,normal,"<strong>Design 뷰</strong>에서 컴포넌트를 그린 후, 아래와 같이 <strong>Component 뷰</strong>에서 해당 컴포넌트를 선택해도 <strong>Style 뷰</strong>에는 아무 정보도 표시되지 않습니다."
312,72080bc386a3ff2c,normal,"WebSquare5 Studio는 SVN 플러그인과 Git 플러그인을 포함합니다. 아래와 같이 <strong>Window</strong> ­ <strong>Show View</strong>를 선택 후, SVN 혹은 Git을 검색해서 사용할 수 있습니다."
313,3a1d30c37874ba44,pre,새로 생성되는 컴포넌트에 기존 ID와 중복되지 않는 ID를 부여하는 기능입니다. 초기 상태에서 이 기능은 비활성화 되어 있습니다. 아래와 같은 방법으로 본 기능을 사용할 수 있습니다.
314,80e50d5196a2ae72,caution,"<strong>컴포넌트 복사 </strong>

복사를 통해 컴포넌트를 새로 생성할 경우 <strong>컴포넌트 복사 ID 자동 생성</strong> 기능을 사용하십시오. 
동일한 ID의 컴포넌트가 여러 개 존재할 경우 미리보기를 할 수 없습니다."
315,dccad3f931433b9b,normal,툴바의 <strong>확대/축소</strong> 아이콘을 사용하여 <strong>Design 뷰</strong> 화면만 확대 및 축소가 가능합니다.
316,358f5a2c473607e8,normal,"컴포넌트가 겹쳐져 있거나 화면이 복잡하게 구성된 경우, 청사진 기능을 사용하십시오. 아래와 같이 컴포넌트의 가시성이 높이집니다."
317,37384d74a137aa31,normal,사용자는 <strong>Palette 뷰</strong>에서 컴포넌트를 선택한 후 Flexible Mode 혹은 Static Mode에서 해당 컴포넌트를 <strong>Design 뷰</strong>에 에 추가할 수 있습니다.
318,9db15fb012eebb60,ordered_list,"# 툴바의 Change Draw Mode 아이콘을 클릭합니다.
# Palette 탭에서 (컴포넌트를 검색하여) 추가할 컴포넌트를 선택합니다.
# 컴포넌트를 추가할 위치와 Float 속성을 정의합니다.
# Component 뷰에서 컴포넌트가 추가되었는지 확인합니다."
319,2ea0c3046430984c,ordered_list,"# Palette 뷰에서 (컴포넌트를 검색하여) 추가할 컴포넌트를 선택합니다.
# Design 탭에서 드래그하여 컴포넌트의 위치와 크기를 결정합니다. (더블 클릭할 경우 해당 위치에 기본 크기로 컴포넌트가 추가됩니다.)
# Component 뷰에서 컴포넌트가 추가되었는지 확인합니다."
320,8f6242ad1fea9bbf,normal,"모든 컴포넌트는 <kbd>id</kbd>, <kbd>style</kbd>, <kbd>class</kbd> 속성을 포함합니다. 개발자는 CSS 문법을 사용하여 각 컴포넌트 스타일을 확장할 수 있습니다."
321,f55bd68642eae281,normal,CSS는 아래 설명하는 3가지 방법으로 적용 가능합니다.
322,5585c8f30400e11a,ordered_list,"# Design 탭에서 스타일을 설정할 컴포넌트를 클릭합니다.
# Style 뷰를 클릭합니다.

# 스타일 트리나 에디터에서 스타일을 설정합니다.
# 설정한 스타일이 적용되는지 Design 탭에서 확인합니다."
323,742241c31f65eadf,ordered_list,"# Style 뷰를 선택합니다.
# 우측 상단의 <strong>Add Internal Style</strong> 아이콘을 클릭합니다.
# <strong>Source</strong> 탭이 열리고 아래의 코드가 생성되는지 확인합니다."
324,7f036d914c45688c,ordered_list,"# CDATA[ ] 대괄호 내에 스타일을 정의합니다.
# Class 뷰를 클릭합니다.
# 정의한 스타일 Class 뷰에 목록으로 표시되는지 확인합니다.
# 해당 스타일을 적용할 컴포넌트의 <kbd>class</kbd> 항목을 설정합니다."
325,aaa80ded90595418,ordered_list,"# Style 뷰를 선택합니다.
# 우측 상단의 Import External Style 아이콘을 클릭합니다.
# CSS 파일을 선택합니다.
# Class 뷰을 클릭합니다.
+ (혹은 위의 2 ~ 4 단계 대신, <strong>Project Explorer에 표시되는 CSS파일을 Design 뷰으로 드래그-앤-드롭합니다.</strong>)
# Class 뷰에서 CSS가 추가되었는지 확인합니다.
# 외부 CSS를 적용할 컴포넌트를 Design 뷰에서 클릭합니다.
# Style 뷰의 Class 뷰을 연 뒤, 위에서 추가한 외부 CSS를 클릭합니다.
+ (이미 적용된 CSS를 더블클릭하면 해제됩니다.)
# CSS 파일에 정의된 스타일 클래스가 표시되는지 확인합니다.
# 적용하려는 스타일 클래스를 뎌블-클릭합니다.
# 해당 클래스가 반영되는지 Design 뷰에서 확인합니다.
+ (반영된 CSS는 Class 뷰에서 굵게 표시됩니다.)
# 해당 스타일을 적용할 컴포넌트의 <kbd>class</kbd> 항목을 설정합니다."
326,63f897c5e2756270,note,"<strong>외부 CSS 파일 수정</strong>

외부 CSS 파일은 아래와 같이 직접 열어서 수정해야 합니다.

1. Style 뷰의 Class 뷰을 클릭합니다.
2. 수정하려는 Class를 우클릭한 후 [Open File]을 선택합니다.
3. 해당 Class가 포함된 CSS 파일이 Source 뷰에 표시되고, 해당 Class가 포커싱됩니다.
4. 해당 Class의 스타일을 수정하고 저장합니다."
327,9574cb310fbafbbf,normal,아래와 같은 Block-level 컴포넌트의 경우 width 속성을 삭제할 경우 전체 화면 폭을 채울 수 있고 height 속성을 삭제할 경우 자식 높이에 따라 해당 컴포넌트의 높이를 결정할 수 있습니다.
328,43d03237394c7523,unordered_list,"* Group
* TextBox
* GridView"
329,b0c3583c7ff6e68d,normal,<code>float </code>속성은 컴포넌트의 좌우 배치를 결정합니다.
330,fba2cb2a1e4152d0,normal,<code>overflow </code>속성은 요소 내 컴포넌트가 넘칠 경우 처리하는 방식을 결정합니다.
331,7a90593337bb7117,normal,"여러 컴포넌트를 Group으로 감싼 후, Group에 스타일을 일괄 적용하여 속도 및 편의성을 높일 수 있습니다."
332,738614e4ac569813,normal,"<a class=""reference"" href=""#0e8180f41af7062c"">Design</a> 뷰에서 그린 컴포넌트의 속성은 <a class=""reference"" href=""#b03e73ffbdb11957"">Property</a> 뷰에서 정의할 수 있습니다."
333,ed82ecf946d4e660,ordered_list,"# <a class=""reference"" href=""#0e8180f41af7062c"">Design</a> 뷰에서 속성을 지정할 컴포넌트를 클릭합니다. (혹은 <a class=""reference"" href=""#fd6f69e394626310"">Component</a> 탭에서 해당 컴포넌트를 선택하십시오.)
# <a class=""reference"" href=""#b03e73ffbdb11957"">Property</a> 탭에서 각 속성을 정의하십시오. (컴포넌트 별 속성은 <a class=""link"" href=""https://docs.inswave.com/websquare/websquare.html?w2xPath=/support/api/ws5_sp4/api.xml"">API 가이드</a>를 참고하십시오.)"
334,eac5f7db60916c54,normal,"Design 뷰에서 컴포넌트를 우클릭한 후, 이벤트를 추가할 수 있습니다. 추가할 이벤트를 선택하면, 이벤트 핸들러 작성 코드가 Script 탭에 자동 생성됩니다. Script 탭에서 직접 이벤트 핸들러를 구현하십시오."
335,a7c78ed8f6b1d1ac,ordered_list,"# 컴포넌트를 우클릭합니다.
# <strong>[Add Event]</strong>를 클릭한 후 원하는 이벤트를 선택합니다. (각 컴포넌트에 별로 등록 가능한 이벤트는 <a class=""link"" href=""https://docs.inswave.com/websquare/websquare.html?w2xPath=/support/api/ws5_sp4/api.xml"">API 가이드</a>를 참고하십시오.)"
336,9f9018d018e0860f,ordered_list,# Script 탭이 열리고 해당 이벤트에 대한 함수가 아래와 같이 생성되는지 확인합니다.
337,fed12c6184f741f7,ordered_list,# 아래와 같이 이벤트 함수를 정의합니다.
338,437abfa7ec262e3c,ordered_list,"# <a class=""reference"" href=""#e41845b368902122"">Script</a> 탭 좌측의 목록에 추가한 이벤트가 표시되는지 확인합니다.
# <a class=""reference"" href=""#b03e73ffbdb11957"">Property</a> 뷰에서 <strong>Show Event Only</strong> 아이콘을 클릭하고 이벤트가 추가되었는지 확인합니다."
339,afff132fe59a94c7,note,"<strong>스크립트 확인</strong>

Script 탭에서 작성하는 모든 내용은 <code>&lt;head&gt;</code>의 <code>&lt;script type=""javascript""&gt;&lt;![CDATA[ ]&gt;&lt;/script&gt;</code> 내부에 포함되며, Script 탭은 <code>&lt;script&gt;</code> 노드에 작성된 모든 JavaScript 코드를 목록으로 표시합니다."
340,b12e44f542e48155,ordered_list,"# Deisgn 탭이나 Component 뷰에서 컴포넌트를 우클릭합니다.
# <strong>[Add Event]</strong>를 클릭한 후 원하는 이벤트를 선택합니다. (각 컴포넌트에 별로 등록 가능한 이벤트는 <a class=""link"" href=""https://docs.inswave.com/websquare/websquare.html?w2xPath=/support/api/ws5_sp4/api.xml"">API 가이드</a>를 참고하십시오.)
# 추가할 이벤트의 Value 칼럼을 클릭합니다.
# 이미 존재하는 함수명을 입력합니다. 
# <strong>Script</strong> 버튼을 클릭합니다.
# <a class=""reference"" href=""#e41845b368902122"">Script</a> 탭에 해당 함수가 생성되는지 확인합니다."
341,77308e7a84a31f71,normal,"<code>$p.getEventTarget() </code>혹은 <code>WebSquare.util.getEventTarget() </code>함수를 사용하여 이벤트가 호출된 컴포넌트의 정보를 확인할 수 있습니다. 아래 예제와 같이 이벤트가 발생한 컴포넌트의 이름, ID, 전체 ID를 확인할 수 있습니다."
342,e7c6b4970192a720,normal,"디버깅 메뉴 중 <strong><span class=""r_italic_span"">""현재 화면 이벤트 출력 실행""</span></strong> 및 <strong><span class=""r_italic_span"">""현재 화면 이벤트 출력 중단""</span></strong> 메뉴를 사용하면, 현재 화면에서 발생하는 이벤트 관련 로그들을 생성하거나 로그 생성을 중단할 수 있습니다. 또한, 이벤트와 바인딩된 컴포넌트, 스코프, 이벤트 이름, 이벤트 함수도 확인할 수 있습니다."
343,1ec8f1b2ecb38678,normal,"자주 사용하는 디자인 요소의 경우 스니핏으로 등록한 후 사용할 수 있습니다. 매번 직접 그려할 필요가 없기 때문에 화면 개발 시간을 줄일 수 있으며, 분산된 개발 환경에서도 동일한 지정된 디자인 요소를 사용하기 때문에 디자인 일관성을 유지할 수 있습니다."
344,821b335ead456a6e,ordered_list,"# 스니핏으로 추가할 요소를 디자인합니다. (해당 디자인 요소가 여러 컴포넌트로 구성된 경우 해당 컴포넌트들을 그룹으로 묶습니다.)
# 디자인 요소를 우클릭 하여 <strong><span class=""r_italic_span"">Add Snippet</span></strong> 메뉴를 선택합니다."
345,ff10700155b1c79a,ordered_list,# 아래와 같이 스니핏을 저장할 디렉토리를 지정하고 스니핏 정보를 입력합니다.
346,0a1bf4b20a369064,ordered_list,# 다음과 같이 스니핏이 추가된 것을 확인할 수 있습니다.
347,b5e66436520eaf30,ordered_list,# 스니핏 을 저장할 폴더는 Snippet 뷰에서 추가하거나 삭제할 수 있습니다.
348,e598b8da7a28ce1a,normal,<strong>Palette</strong> 탭에서 <strong>Go to Snippet View</strong> 아이콘을 클릭하면 스니핏 뷰를 열 수 있습니다.
349,25a7c717a7d5a6e6,normal,Studio 우측 하단에 아래와 같이 Snippets 뷰가 표시됩니다. 원하는 스니핏을 클릭하면 화면에 추가해서 사용할 수 있습니다.
350,35cda2b7aea5a31e,normal,<code>$p.dynamicCreate()</code> 함수를 이용하여 컴포넌트를 동적으로 생성할 수 있습니다.
351,83c0f94aa5b92ab3,normal,Script 탭에서 아래와 같은 객체를 정의할 수 있습니다.
352,feab9738c094a910,normal,"변수, 함수, 객체 등을 직접 정의할 수 있습니다."
353,c84c08827a29d23c,caution,"WebSquare 객체는 전역 공간에 정의됨. 
Browser 객체 혹은 사용자 정의 객체의 이름과 중복되지 않아야 함."
354,0fa680737810cc4f,normal,완성한 페이지는 브라우저에서 직접 확인할 수 있습니다.
355,aed122e3f4a777d1,normal,"SP5 스튜디오를 시작한 후, 웹스퀘어 프로젝트를 아래의 방법으로 생성하십시오."
356,a49f20746b6d59b3,ordered_list,"# Project Explorer로 이동합니다. 
# <strong>Create a project...</strong>를 선택합니다."
357,82c0f63ee6056db4,ordered_list,"# <strong>WebSquare</strong> -<strong> WebSquare Project</strong>를 선택합니다.
# <strong>Next</strong>를 클릭합니다."
358,77a3bf0353b67109,ordered_list,"# 혹은 Project Explorer를 우클릭한 후, <strong>New</strong> -<strong> WebSquare Project</strong>를 선택합니다."
359,1317e1729b352eb7,ordered_list,"# 프로젝트 이름을 입력합니다. 
# <span class=""r_bold01_span"">Next</span>를 클릭합니다."
360,cfe86298c8d468ef,ordered_list,"# Context Root를 지정합니다. 기본 값은 루트(<strong>"" / ""</strong>)입니다."
361,3198875adbc5e999,note,"<strong>Context Root</strong>

Context Root는 <strong><span class=""r_italic_span"">Config.xml</span></strong> 및 <strong><span class=""r_italic_span"">WebSquare.xml </span></strong>설정 파일에 영향을 줍니다."
362,fd2616aec27e450a,ordered_list,"# <strong>동의합니다</strong> 항목을 선택하고, <strong>Next</strong>를 클릭합니다. (권장)"
363,7d08bcfdd48f662c,normal,"WRM 컴포넌트 사용에 동의한 경우, <strong><span class=""r_italic_span"">WebContent</span></strong> 폴더 아래에 공통 리소스를 포함한 <strong><span class=""r_italic_span"">cm</span></strong> 폴더가 생성됩니다."
364,e544017e8cc9297a,normal,"단, WRM 컴포넌트 사용에 동의하지 않을 경우, <strong><span class=""r_italic_span"">WebContent</span></strong> 폴더 아래에 추가 리소스를 포함하는 <strong><span class=""r_italic_span"">cm</span></strong> 폴더가 생성되지 않습니다."
365,fd380223829a6cd7,normal,다음은 WRM 컴포넌트 사용에 동의하지 않고 without_UDC라는 프로젝트를 생성한 경우입니다.
366,ade2a5278e5da7a3,note,"<strong>WRM 컴포넌트 사용 동의 </strong>

WebSquare5 SP5는 공통 업무용 UDC(User Developed Component)를 WRM 컴포넌트로 제공합니다. WRM 컴포넌트 사용에 동의할 경우, WebSquare5 SP5가 제공하는 WRM 컴포넌트를 사용할 수 있습니다. 
단, 사용자가 WRM 컴포넌트를 수정할 경우, (주)인스웨이브시스템즈는 정상 작동을 보장하지 않습니다."
367,5d2724935fee42c7,ordered_list,# <strong>Finish</strong>를 클릭합니다.
368,eccc84823c71f238,caution,"서버 환경 설정 파일 편집 시 동기화할 websquare.xml 파일의 위치를 지정할 수 있습니다. 단, <strong>Use Other Web Application Server</strong> 옵션이 선택된 경우에만 활성화됩니다."
369,28ed3f72aad99616,normal,다음은 웹스퀘어 프로젝트를 생성한 모습입니다. 폴더를 통해 공통 모듈을 포함한 SP5에 추가된 기능을 직관적으로 확인할 수 있습니다.
370,a45a5a6737f05d4a,normal,프로젝트를 우클릭한 후 <strong>Configure WebSquare Project</strong> 혹은 <strong>Properties</strong>를 클릭합니다.
371,358e451294ef9cd9,normal,좌측의 <strong>WebSquare</strong> - <strong>Resource</strong>를 클릭하면 웹스퀘어 화면 개발시 사용하는 각종 리소스를 저장할 위치를 지정할 수 있습니다.
372,caefee255c373d79,normal,폴더를 통해 공통 모듈을 포함한 SP5에 추가된 기능을 직관적으로 확인할 수 있습니다.
373,4d854b20bf550726,normal,"Design System의 경우, 프로젝트 별로 리소스를 선택할 수 있습니다."
374,c49580f839b434da,normal,"최초 프로젝트 생성시 WRM 컴포넌트 사용에 동의하지 않은 경우, <strong>Project Common</strong> 설정을 통해 WRM 컴포넌트를 사용할 수 있습니다."
375,f657be835efd2574,normal,"화면 파일은 웹스퀘어가 제공하는 80여개의 기본 컴포넌트와 UDC와 같은 공통 개발 컴포넌트의 속성, 함수, 이벤트 등을 설정하고, 웹스퀘어가 제공하는 공통 디자인 리소스(페이지 템플릿, 레이아웃 템플릿, 스니핏)를 이용하여 개발할 수 있습니다. 상세한 스튜디오 사용법은 <a class=""reference text"" href=""#4c4960bc7e1f2bf6"">화면 그리기</a>를 참조하십시오."
376,90ed48e06670b59a,definition_list,"화면 개발용 리소스
(1) 80여개의 기본 컴포넌트
+ (2) UDC
+ (3) 페이지 템플릿
+ (4) 레이아웃 템플릿
+ (5) 스니핏"
377,1f1af78ab9b69d77,ordered_list,"# <strong><span class=""r_italic_span"">WebContent</span></strong> 폴더 아래에 새로운 페이지 컴포넌트를 생성해야 합니다. <strong><span class=""r_italic_span"">WebContent</span></strong>를 우클릭한 후, <strong>New</strong> ­ <strong>WebSquare Page Component</strong>를 선택합니다."
378,9244d4cd5f7d1208,ordered_list,"# 파일명을 입력하고, <strong>Next</strong> 혹은 <strong>Finish</strong>를 클릭합니다."
379,ebde87c2e9ffd16b,ordered_list,"# <strong>Next</strong>를 클릭할 경우 아래와 같이 템플릿을 선택하는 창이 나타납니다. 
# 템플릿을 사용할 경우, 템플릿을 선택 후, <strong>Finish</strong>를 클릭하십시오."
380,103a656f26a5bd4c,ordered_list,# 위에서 선택한 템플릿이 Design 탭에 표시되는지 확인합니다.
381,b47522e05df8355e,normal,효율적인 프로젝트 관리를 위해 웹스퀘어5는 Page를 템플릿 기반으로 화면을 관리하고 생성할 수 있는 기능을 제공합니다. 템플릿으로 등록된 화면 파일들은 썸네일 이미지 형태로 제공되어 개발자들은 손쉽게 템플릿을 선택하고 원하는 화면을 쉽게 개발할 수 있습니다.
382,dbb3678e35f757a9,normal,"웹스퀘어 페이지 컴포넌트를 최초 생성할 경우, 아래와 같이 템플릿 선택창이 표시됩니다. <strong>Use template</strong> 항목을 선택하면 <strong>Page</strong> 탭에서 웹스퀘어5가 제공하는 페이지 컴포넌트를 사용할 수 있습니다."
383,131f8f5938c048da,normal,"<strong><span class=""r_italic_span"">/WebContent/cm/template/page/</span></strong> 폴더에 저장된 페이지 리소스가 썸네일 이미지 형태로 표시되어 제공됩니다."
384,bf158c002b48de75,normal,"웹스퀘어 페이지 컴포넌트를 최초 생성할 경우, 아래와 같이 템플릿 선택창이 표시됩니다. <strong>Use template</strong> 항목을 선택하면 <strong>Layout</strong> 탭에서 웹스퀘어5가 제공하는 페이지 컴포넌트를 사용할 수 있습니다."
385,9041ca2d843f7795,normal,"<strong><span class=""r_italic_span"">/WebContent/cm/template/layout/</span></strong> 폴더에 저장된 리소스가 썸네일 이미지 형태로 표시되어 제공됩니다."
386,d32c0cfd4118e07f,normal,"Design System은 프로젝트 전반에 걸쳐 사용하는 디자인 관련 리소스를 썸네일 이미지로 제공합니다. 개발자는 디자인을 직관적으로 확인할 수 있고, 단순 마우스 클릭을 통해 원하는 디자인을 화면에 추가하여 사용할 수 있습니다."
387,7ee2683c6369417a,normal,"현재 Design System은 <strong><span class=""r_italic_span"">/WebContent/cm/template/snippets/</span></strong> 폴더에 저장된 리소스를 썸네일 이미지로 제공하며, 향후 CSS, 컴포넌트, 레이아웃, 템플릿 등의 디자인 리소스도 썸네일 이미지로 제공할 예정입니다."
388,604da4b3b6610c1e,ordered_list,# UDC로 사용할 화면 파일을 작성합니다.
389,2f7f2e9f46c8940f,ordered_list,"# 하단의 <strong>Info</strong> 탭을 클릭합니다.
# <strong>General</strong> 탭에서 해당 화면 파일의 일반적인 정보를 입력합니다.
# 팔레트에 등록하기 위해 <strong>Register Palette</strong> 항목을 <strong>지원</strong>으로 선택하십시오."
390,e26eefce1f133784,ordered_list,"# <strong>Component</strong> 탭을 클릭한 후, UDC 컴포넌트 정보를 입력합니다."
391,8f472bf577984607,ordered_list,"# <strong>Property</strong> 탭을 클릭합니다.
# 행을 추가한 후 UDC에 추가할 속성을 입력하십시오."
392,4c186f89bceb90d5,ordered_list,# <code>$p.getOptions()</code> 함수를 사용하여 Script 탭에서 속성 값을 구현하십시오. (API 혹은 이벤트를 추가한 후 <strong>method 생성</strong> 혹은 <strong>event 생성</strong> 버튼을 클릭할 경우 추가한 속성에 대한 주석이 Script 탭에 자동 생성됩니다.)
393,49ad4630474a885d,note,"<a class=""reference text"" href=""#900c99febfe9846a"">속성 정의 및 구현</a> 참고."
394,6a2dce1fb875756a,ordered_list,"# <strong>APIs</strong> 탭을 클릭합니다.
# 행 추가 버튼을 클릭하여 행을 추가합니다.
# 생성할 함수명과 설명을 입력한 후, <strong>method 생성</strong> 버튼을 클릭합니다."
395,24163dc638329fce,ordered_list,# <strong>Script</strong> 탭으로 이동하여 아래와 같이 추가한 API에 대한 주석과 코드가 생성된 것을 확인합니다.
396,477dd6bccb4cf41c,ordered_list,# 해당 API를 구현합니다.
397,c305de8f0c2ca950,note,"<a class=""reference text"" href=""#543ac3685207544f"">함수 정의 및 구현</a> 참고."
398,c1184cae4a45340f,ordered_list,"# <strong>Event</strong> 탭을 클릭합니다.
# 행 추가 버튼을 클릭하여 행을 추가합니다.
# 생성할 이벤트 명과 설명을 입력한 후, <strong>event 생성</strong> 버튼을 클릭합니다."
399,d6bd1df88d7130a1,ordered_list,# <strong>Script</strong> 탭으로 이동하여 아래와 같이 추가한 이벤트에 대한 주석과 코드가 생성된 것을 확인합니다.
400,e272c98e2a3841ff,ordered_list,# 이벤트 발생 시점을 정의합니다.
401,2f7318f25fa91514,note,"<a class=""reference text"" href=""#3182db5c7ecfc3cc"">이벤트 정의 및 구현</a> 참고."
402,756eb9138e73aa07,ordered_list,"# 화면 파일을 <span class=""r_italic_span""><strong>/cm/udc/</strong></span> 폴더로 이동합니다."
403,bbe133c3da65497f,ordered_list,# <strong>Palette </strong>탭으로 이동한 후 <strong>Refresh Palette</strong> 버튼을 클릭합니다.
404,3992d320f5191dba,ordered_list,# <strong>Palette </strong>탭의 <strong>UDC</strong> 항목에 추가한 화면 파일이 UDC로 표시되는지 확인합니다.
405,2bc760f3cfb42adc,normal,UDC를 생성한 프로젝트를 우클릭한 후 <strong>Update Component API and Doc</strong> 메뉴를 클릭합니다.
406,a79d57927e47f9c5,normal,"UDC의 속성, 함수, 이벤트를 설명하는 API 가이드 문서가 ""<strong><span class=""r_italic_span"">프로젝트/WebSquare Docs/udc_이름/udc_이름.html</span></strong>"" 형식으로 생성됩니다."
407,489dc91a93aff1b4,normal,"생성된 문서 중 <strong><span class=""r_italic_span"">websquare_docs.html</span></strong> 파일을 클릭하면 아래와 같이 전체 가이드를 확인할 수 있습니다."
408,4f6f130a9222e180,normal,UDC가 Palette에 등록되면 UDC 함수에 대한 자동 완성 기능을 Script 탭에서 사용할 수 있습니다.
409,4eef054bc7f581ba,ordered_list,# 페이지 컴포넌트를 새로 생성합니다.
410,18bd9552f66d82a1,ordered_list,# <strong>Palette</strong> 탭의 UDC 항목에 추가한 UDC 컴포넌트가 표시되는지 확인합니다.
411,96e3e045d8e59fc6,ordered_list,# 해당 UDC 컴포넌트를 클릭하여 화면 파일에 추가합니다.
412,4b0f06d6255be758,ordered_list,# UDC 생성 시 추가한 속성이 <strong>Property</strong> 탭에 표시되는지 확인합니다.
413,5749548a4521d868,ordered_list,# UDC 생성 시 추가한 이벤트가 <strong>Event</strong> 탭에 표시되는지 확인합니다.
414,9d5aa574c1988b8b,ordered_list,# <strong>script</strong> 버튼을 클릭하면 Script 탭에 이벤트 추가용 코드가 아래와 같이 자동 생성됩니다.
415,92a2878b4277e281,ordered_list,"# 추가한 UDC의 ID를 지정한 후, UDC 생성 시 추가한 함수 및 이벤트를 활용하여 화면을 개발합니다."
416,4c2830a8fac71fb4,normal,<code>$p.dynamicCreate()</code> 함수를 사용하여 UDC를 동적으로 추가할 수 있습니다.
417,935e35550169d3cc,normal,"UDC를 Generator의 child로 등록한 후, Generator의 <code>insertChild()</code> 함수를 사용하여 UDC 여러 개를 한번에 생성할 수 있습니다."
418,9fa6d3b9cc6abdb0,normal,"XML 화면 파일은 JS 파일로 변환되어 <strong><span class=""r_italic_span"">/WebContent/_wpack_/</span></strong> 폴더 아래에 저장됩니다. 화면 파일 개발에 사용한 공통 리소스도 JS 파일로 변환되어 <strong><span class=""r_italic_span"">/WebContent/_wpack_/cm/</span></strong> 폴더 아래에 저장됩니다."
419,d05ab83e9cf7bca9,normal,<strong>Project</strong> ­ <strong>Build Automatically</strong> 옵션을 설정하면 XML로 생성되는 화면 파일을 JS로 자동 변환할 수 있습니다.
420,f79f80659bbcd09d,normal,웹스퀘어 프로젝트를 다시 JS 파일로 빌드하려면 <strong>Project</strong> ­ <strong>Rebuild WebSquare Project</strong> 메뉴를 사용하십시오.
421,f430fee529bad572,normal,W-Pack의 로그는 <strong>Console</strong> 탭에서 확인할 수 있습니다.
422,1ad09e4007d98c73,normal,"W-Pack은 CI 서버 연동 및 서버에서의 일괄 변환을 지원하기 위해 Stand-alone 모듈을 지원합니다. W-Pack Stand-alone 모듈은 스튜디오 내장된 W-Pack과 동일하게 동작하며 Mac, Linux, Window (32bit, 64bit)운영 체제를 지원합니다."
423,8537830426dcfc5f,normal,W-Pack Stand-alone 모듈은 아래 순서로 실행하십시오.
424,bc000189f5490ec8,ordered_list,# cmd 나 terminal과 같은 CLI 도구에서 W-pack을 실행합니다.
425,ca6e6403a464fe8b,ordered_list,# 활성화된 명령창에 아래를 참조하여 명령어를 작성합니다.
426,c4046de4b6fc4ebf,normal,"다음은<span class=""r_italic_span"">C:\Program Files\project\</span> 웹스퀘어 프로젝트 경로 전체를 JS로 빌드하는 경우의 예시입니다."
427,3cf960dcf1b2f9c0,normal,위의 예제에 따른 JS 변환 설정은 아래와 같습니다.
428,b8679cd3f35ce0ef,normal,다음은 파일 여러 개를 JS로 빌드하는 경우의 예시입니다.
429,d60a2236b9d0b239,normal,위의 예제에 따른 JS 변환 설정은 아래와 같습니다.
430,73c539a0cd3ef3f4,caution,"<strong>제약 사항</strong>

(1) 타겟이 다중 파일인 경우, (a) 파일 단위 경로는 공백 없는 <code>,</code>(콤마)로 구분하고 (b) <code>src</code> 및<code> dest</code>의 인자는 반드시 파일 단위 경로를 모두 입력.
(2) <code>baseDir</code>, <code>src</code>, <code>ignore </code>경로가 실재 존재하지 않을 경우, 비정상적 수행을 막기 위해 동작이 중단됨. 
(3) 명령어와 인자는 반드시 하나의 공백으로 구분하여 입력."
431,b01bd03282499b23,normal,아래와 같이 <kbd>$p.log</kbd> API를 이용하여 기본 로그를 출력할 수 있습니다.
432,1027d0df015e16a4,normal,<kbd>$p.log()</kbd>함수를 이용한 로그는 다음과 같은 형태로 생성됩니다.
433,b2dcb06e06015190,normal,위의 로그는 아래와 같이 해석할 수 있습니다.
434,d500ce7663226cac,normal,브라우저에서 console 객체를 지원해야 확인 가능합니다. 아래와 같이 <kbd>console.log</kbd> 메소드를 이용하십시오.
435,84cbde5a1c515359,note,"<strong>IE 지원</strong>

IE8 이상에서 지원됩니다."
436,17917a0e7fbe9640,pre,브라우저 실행 후 [F12]를 누르거나 브라우저 메뉴를 통해 개발자 도구를 실행할 수 있습니다. 아래의 방법으로 브라우저에서 로그를 확인할 수 있습니다.
437,915ac23c055c78d7,ordered_list,"# 아래 경로에 있는<strong><span class=""r_italic_span""> config.xml</span></strong> 파일을 엽니다. 
** 파일 경로:<strong><span class=""r_italic_span""> /WebContent/websquare/config.xml</span></strong>
# 아래와 같이 설정하십시오. 
** <code>&lt;debug value=""true"" remoteConsole=""false"" console=""true""/&gt;</code>
# 브라우저에서 F12 단축키를 누릅니다. 
# 화면을 실행한 후 Console 탭을 선택합니다."
438,1148350e052115b6,normal,"클라이언트 환경 설정을 통해 개발자 도구 Console 창에서 출력할 로그 타입을 지정할 수 있습니다. 스튜디오에서 <span class=""r_italic_span"">client.config.xml</span> 파일을 아래와 같이 설정하십시오."
439,fc8e2a9c40d0ea63,pre,"WebSquare5로 작성한 화면의 스크립트는 WebSquare5 엔진 위에서 실행됩니다. 
화면 로그는 브라우저 경고 창으로 표현되지 않고 별도로 관리됩니다. 
아래의 방법으로 로그 메시지를 확인하십시오."
440,8faef77f26383740,ordered_list,"# WebSquare5로 작성한 화면을 브라우저에 실행합니다.
# 브라우저 상에서 [Ctrl+마우스 우클릭]합니다.
# <strong>[로그보기]</strong>를 선택합니다."
441,929ffe25d2febd57,caution,브라우저 상의 URL 재로딩 및 IFrame의 재로딩은 브라우저에서 제공하는 기능을 이용하십시오.
442,a840c72da9cae91a,normal,<code>WebSquare.logger</code>의 <code>enableContextMenu()</code> 및 <code>disableContextMenu()</code> 함수를 사용하여 디버깅용 컨텍스트 메뉴 사용을 허용하거나 차단할 수 있습니다.
443,2db3a31fc91bc3dc,normal,"위의 함수들은 <strong><span class=""r_italic_span"">config.xml</span></strong> 설정 파일의 <code>&lt;debugMenu&gt;</code> 항목의 설정 값에 상관 없이 사용할 있습니다. 즉, <code>&lt;debugMenu value=<span class=""r_red_highlight_span"">""use""</span>/&gt;</code> 혹은 <code>&lt;debugMenu value=<span class=""r_red_highlight_span"">""block""</span>/&gt;</code>으로 설정된 경우 모두 사용 가능합니다."
444,1472c2f614301180,pre,현재 컴포넌트와 바인딩된 DataCollection을 확인할 수 있습니다. 아래의 방법으로 실제 메모리에 할당된 데이터를 확인하십시오.
445,0015e61b5dc5ad21,ordered_list,"# WebSquare5로 작성한 화면을 브라우저에 실행합니다.
# 브라우저 상에서 [Ctrl+마우스 우클릭]합니다.
# <strong>[dataCollection 보기]</strong>를 선택합니다."
446,157d2584d91940e8,ordered_list,"# WebSquare5로 작성한 화면을 브라우저에 실행합니다.
# 브라우저 상에서 [Ctrl+마우스 우클릭]합니다.
# <strong>[소스보기]</strong>를 선택합니다."
447,b81ced086546feb7,normal,"디버깅 메뉴 중 <strong><span class=""r_italic_span"">""현재 화면 이벤트 출력 실행""</span></strong> 및 <strong><span class=""r_italic_span"">""현재 화면 이벤트 출력 중단""</span></strong> 메뉴를 사용하면, 현재 화면에서 발생하는 이벤트 관련 로그들을 생성하거나 로그 생성을 중단할 수 있습니다. 이벤트와 바인딩된 컴포넌트, 스코프, 이벤트 이름, 이벤트 함수를 확인할 수 있습니다."
448,35bfa8719d005453,pre,다음은 Chrome 브라우저에서 F12를 눌러 개발자 도구를 실행한 모습입니다. <strong>Source </strong>탭에서 관련 파일을 확인할 수 있습니다.
449,4bc7734ee30acbf6,pre,"웹스퀘어5로 개발한 화면의 JS 파일은 <span class=""r_italic_span"">_wpack_</span> 폴더 아래에 위치합니다. 화면에 해당하는 JS 파일을 선택한 후, 브레이크 포인트를 설정하여 개발자 도구에서 직접 디버깅을 수행할 수 있습니다."
450,d6a31c18cb661d75,normal,"<code>enterKeyPanelToggle=""true""</code> 속성 설정을 추가하면, Enter 키를 눌러 패널을 열고 닫을 수 있습니다."
451,d045a9ac9f21bfff,normal,"<code>independentPanel=""true""</code> 속성 설정을 추가하면, 여러 패널들을 열린 상태로 유지할 수 있습니다. 즉, 한 패널을 연 후에 다른 패널을 열어도 처음 연 패널(들)이 닫히지 않고 열린 상태로 유지됩니다."
452,fedd7a33492e6c04,normal,AutoComplete 컴포넌트를 더블 클릭하여 선택 항목을 직접 입력하거나 DataList 혹은 LinkedDataList와 바인딩할 수 있습니다.
453,fb81148502a064cc,normal,"DataList와 바인딩하여 선택 항목을 표시할 경우, 바인딩된 DataList의 특정 컬럼 값을 기준으로 일부 선택 항목을 숨길 수 있습니다."
454,b13d5d497b32f91f,normal,"DataList와 바인딩하여 선택 항목을 표시할 경우, 바인딩된 DataList의 특정 컬럼 값을 기준으로 일부 선택 항목을 숨길 수 있습니다."
455,1d872048690f932b,normal,<code>enableColum</code> 및 <code>enableColumnFalseValue</code> 속성을 사용하여 선택 목록의 특정 항목을 비활성화할 수 있습니다.
456,22f5f86786b2ca8c,unordered_list,"* <code>enableColumn</code> : 비활성화 여부를 위해 참고할 DataList의 컬럼.
* <code>enableColumnFalseValue</code> : 비활성화하기 위한 조건. (비활성화를 위해 참고하는 컬럼의 데이터 값.)"
457,a4e5321a621af069,normal,아래 예제는 두 항목이 비활성화되어 표시된 경우입니다.
458,cee06f5a6cef4e58,normal,<code>setEnableColumn()</code> 함수를 사용하여 선택 목록의 특정 항목을 비활성화할 수 있습니다.
459,339c6368f38850e8,normal,<code>displayMode</code> 및 <code>delimiter</code> 속성을 사용하여 선택 항목 표시 방법을 설정할 수 있습니다.
460,4266f70dd591dc0b,normal,"<code>displayModeSync=""true""</code> 속성 설정을 적용하면, 편집 모드에서도 <code>displayMode</code> 속성 설정값에 따라 <code>value</code> 및/혹은 <code>label</code> 값을 표시할 수 있습니다. 즉, <code>displayMode=""value delim label""</code> 속성 설정이 적용된 경우, 선택 목록 창에서 편집 모드로 들어가면 입력값이 <code>""value delim label""</code> 형태로 표시됩니다. 단, <code>searchTarget=""both""</code>인 경우에만 유효합니다."
461,7a421975937ab0a7,normal,"아래와 같이 <code>displayModeSync=""false""</code> 속성 설정이 적용된 경우, 편집 모드에서는 <code>label</code> 값이 표시됩니다."
462,126a28b901ec4da2,normal,"아래와 같이 <code>displayModeSync=""true""</code> 속성 설정이 적용된 경우, 편집 모드에서 입력값이 <code>""value delim label""</code> 형태로 표시됩니다."
463,c5bac324a981a425,normal,<code>setDisplayMode()</code> 및 <code>setDelimiter()</code> 함수를 사용하면 <code>displayMode</code> 및 <code>delimiter</code> 속성을 동적으로 변경할 수 있습니다.
464,b7fd9b29e8540752,normal,선택 목록 및 브라우저 상에서의 마우스 휠 스크롤링을 제어할 수 있습니다.
465,4b8f2525478e7a8f,normal,AutoComplete는 사용자의 입력을 키워드를 기반으로 선택 목록 상의 항목을 검색하여 그 결과를 표시합니다. 아래의 속성을 사용하여 검색 기능 관련 기능을 정의할 수 있습니다.
466,dbccf34025690c54,normal,"<kbd>mandatory=""true""</kbd>인 경우, <kbd>validate();</kbd> 함수는 검증을 수행하여 결과를 true/false로 반환합니다."
467,629f8cdc0265e087,normal,AutoComplete에서 Tab 키를 입력할 경우 포커스를 이동할 대상 컴포넌트를 <code>nextTabID</code> 속성으로 정의할 수 있습니다.
468,cc4db7f4cf713a7d,normal,"<code>autoFocus=""true""</code> 설정을 적용할 경우, 사용자가 선택 목록의 값과 일치하는 값이 입력할 경우 <code>nextTabID</code> 컴포넌트로 포커스를 이동합니다."
469,30edab04bd6f0ec4,note,"<strong>InputBox의 <code>autoFocus</code> vs. AutoComplete의 <code>autoFocus</code></strong>

InputBox의 <code>autoFocus</code>: 
사용자가 입력한 값이 <code><span class=""r_blue001_span"">maxByteLength</span></code>에 도달할 경우, <code>nextTabID</code> 컴포넌트로 이동. 

vs.

AutoComplete의 <code>autoFocus</code>: 
사용자가 입력한 값이 <span class=""r_blue001_span"">선택 목록의 값과 정확하게 일치할</span>할 경우, <code>nextTabID</code>로 지정된 컴포넌트로 이동"
470,0667fcba73faedff,normal,"AutoComplete에서 Enter 키를 입력하여 <code>nextTabID</code> 속성으로 지정한 컴포넌트로 이동할 수 있습니다. 단, 이 기능을 이용하려면 <code>nextTabByEnter=""true""</code> 설정을 추가하십시오."
471,aed6187bd38cacb7,normal,"keycode와 콤마(,)를 사용하여 특정 키의 동작을 막을 수 있습니다. 동작을 막으려는 키(들)의 keycode를 <code>preventKeyList</code> 속성값으로 정의하십시오. 사용 예는 아래와 같습니다."
472,64e6b2b162229ec4,normal,<code>onchange</code> 이벤트는 사용자가 선택 항목을 변경할 때 발생하며 이전 선택 항목과 새로 선택된 항목을 반환합니다.
473,0f8fc7d187d4feec,normal,<code>oneditkeyup</code> 이벤트는 사용자가 키를 누른 후 누른 키를 다시 놓을 때 발생합니다. 반환 인자는 아래와 같습니다.
474,af3095fec8467e91,unordered_list,"* <code>info.oldValue</code> : 이전 값
* <code>info.newValue</code> : 새로 입력된 값 
* <code>info.keyCode</code> : 새로 입력된 키의 코드 값"
475,bef3520ba5ac32ea,normal,<code>oneditenter</code> 이벤트는 사용자가 편집 모드에 진입한 후 Enter 키를 누를 때 발생합니다.
476,eebe056a349f99af,normal,"<code>onselected</code> 이벤트는 사용자가 목록에서 항목을 선택할 경우 발생합니다. 단, <code>onitemclick</code> 이벤트 이후에 발생합니다."
477,4c3cee623284122b,normal,"AutoComplete와 SelectBox는 기본적으로 동일한 기능을 제공합니다. 선택 항목을 콤보 박스에 표시하며 사용자는 한 개의 항목만 선택할 수 있습니다. 단, AutoComplete의 경우, 검색 기능을 제공합니다. 즉, 사용자가 키워드를 입력하면, 입력된 키워드를 기반으로 선택 항목을 검색하여 목록에 표시합니다."
478,bf0c14d2d7003b9a,normal,<code>weekStartsOn</code> 속성을 통해 달력의 시작 요일을 지정할 수 있습니다.
479,64698a2de53ddde0,unordered_list,"* ""0"" : 일요일
* ""1"" : 월요일
* ""2"" : 화요일
* ""3"" : 수요일
* ""4"" : 목요일
* ""5"" : 금요일
* ""6"" : 토요일"
480,2c867fa75d1e7035,normal,"사용자가 클릭할 경우 오늘 날짜를 표시하는 <span class=""r_bold01_span"">Today</span> 버튼의 표시 위치는 <code>topLayout</code> 속성을 통해 결정할 수 있습니다."
481,cdc341302e58d7d3,normal,달력의 날짜 표시 형식은 <kbd>calendarValueType</kbd> 속성을 사용하여 설정할 수 있습니다.
482,778dacfc5ef09f2c,normal,특정 날짜를 기준으로 이전/이후 날짜를 비활성화하여 사용자 선택을 막을 수 있습니다.
483,899088da352aadf1,normal,<kbd>highlightSelectedWeek</kbd> 속성을 사용하여 선택한 날자가 속한 주를 다른 색으로 표시할 수 있습니다.
484,d6309d5f62ab75e4,normal,<code>visibleWeekNum</code> 속성을 통해 달력에 표시할 주(Week)의 수를 설정할 수 있습니다.
485,2b15e7272c76037b,normal,<code>displayDayType</code> 속성을 사용하여 달력의 요일 부분을 텍스트 혹은 이미지 형태로 표시할지 선택 선택할 수 있습니다.
486,2d7768f8db040439,normal,"<code>displayDayType=""<span class=""r_blue001_span"">text</span>""</code>인 경우, 요일이 텍스트로 표시되어, 복사가 가능합니다."
487,e5c47f7b1ad6ea2c,normal,<code>setHoliday()</code> 함수를 사용하여 아래와 같이 특정 날짜를 휴일로 지정할 수 있습니다.
488,973fae69c63aff9d,definition_list,"<code>setHoliday(dateStr , toRemove)</code>
<code>dateStr</code> : 휴일로 지정할 날짜. 
+ <code>toRemove </code>: 기존 휴일 설정을 취소할지 여부. (<code>""true""</code> : 취소. <code>""false""</code> (기본 값) : 취소하지 않음.)"
489,f1142f6e31f5e58e,normal,"<code>setHolidayRef()</code> 함수를 사용하여 DataList의 특정 컬럼을 참조하여 해당 값을 휴일로 지정할 수 있습니다. 단, DataList의 컬럼 ID 앞에 ""<code>data:</code>""를 붙여아 합니다."
490,bd984bf583ffdad6,normal,<code>removeHoliday()</code> 함수를 사용하여 <code>setHoliday()</code> 및 <code>setHolidayRef()</code> 함수를 사용하여 지정한 휴일 설정을 모두 취소할 수 있습니다.
491,c052907c8b7f8956,normal,<code>onmonthselect</code> 이벤트는 달력에서 월을 변경할 때 발생하며 아래의 <code>info</code> 오브젝트를 반환합니다.
492,143ccfda5cc7d886,unordered_list,"* <code>info.oldValue</code> : 이전 선택된 월.
* <code>info.newValue</code> : 새로 선택한 월."
493,4f884fdaf7b03530,normal,<code>onyearselect</code> 이벤트는 달력에서 연도를 변경할 때 발생하며 아래의 <code>info</code> 오브젝트를 반환합니다.
494,f69b6d7bea30fca4,unordered_list,"* <code>info.oldValue</code> : 이전 선택된 연도.
* <code>info.newValue</code> : 새로 선택한 연도."
495,3ef5c41449020edd,normal,CheckBox 컴포넌트를 더블 클릭하여 선택 항목을 직접 입력하거나 DataList 혹은 LinkedDataList와 바인딩할 수 있습니다.
496,4f9600f1fcc82500,normal,"DataList와 바인딩하여 선택 항목을 표시할 경우, 바인딩된 DataList의 특정 컬럼 값을 기준으로 일부 선택 항목을 숨길 수 있습니다."
497,88d4310ecdfeb426,normal,<code>enableColum</code> 및 <code>enableColumnFalseValue</code> 속성을 사용하여 선택 목록의 특정 항목을 비활성화할 수 있습니다.
498,b271bc2e7e118bb6,unordered_list,"* <code>enableColumn</code> : 비활성화 여부를 위해 참고할 DataList의 컬럼.
* <code>enableColumnFalseValue</code> : 비활성화하기 위한 조건. (비활성화를 위해 참고하는 컬럼의 데이터 값.)"
499,3dbddcb34b5c3825,normal,아래 예제는 세 개의 항목이 비활성화되어 표시된 경우입니다.
500,0387697016747055,normal,<code>setEnableColumn()</code> 함수를 사용하여 선택 목록의 특정 항목을 비활성화할 수 있습니다.
501,25d0d34156db1152,normal,CheckBox의 각 선택 항목에<code> label</code> 값 혹은 사용자 지정 값을 툴팁으로 표시할 수 있습니다.
502,9a98bf225bf6dd6e,normal,CheckComboBox 컴포넌트를 더블 클릭하여 선택 항목을 직접 입력하거나 DataList 혹은 LinkedDataList와 바인딩할 수 있습니다.
503,a01864ac02ac1afe,normal,"DataList와 바인딩하여 선택 항목을 표시할 경우, 바인딩된 DataList의 특정 컬럼 값을 기준으로 일부 선택 항목을 숨길 수 있습니다."
504,18941eb348a61e21,normal,<code>enableColum</code> 및 <code>enableColumnFalseValue</code> 속성을 사용하여 선택 목록의 특정 항목을 비활성화할 수 있습니다.
505,99301fa988698470,unordered_list,"* <code>enableColumn</code> : 비활성화 여부를 위해 참고할 DataList의 컬럼.
* <code>enableColumnFalseValue</code> : 비활성화하기 위한 조건. (비활성화를 위해 참고하는 컬럼의 데이터 값.)"
506,386c7ed28f9516c4,normal,아래 예제는 한 개의 항목이 비활성화되어 표시된 경우입니다.
507,f1ded0e9075b001f,normal,<code>setEnableColumn()</code> 함수를 사용하여 선택 목록의 특정 항목을 비활성화할 수 있습니다.
508,2fb3fd32ed1aa2be,normal,"<code>navBtn=""true""</code> 설정을 사용할 경우 선택 목록 하단에 <strong>선택완료</strong> 및 <strong>선택해제</strong> 버튼을 표시할 수 있습니다."
509,ffbe9af3eb19f389,normal,<code>setDisplayMode()</code> 및 <code>setDelimiter()</code> 함수를 사용하면 <code>displayMode</code> 및 <code>delimiter</code> 속성을 동적으로 변경할 수 있습니다.
510,3622d7bcd159dc3c,normal,<code>visibleColNum</code> 속성을 사용하여 선택 항목을 표시할 열의 개수를 지정할 수 있습니다.
511,6db57bcf765c497f,normal,<code>visibleColMax</code> 속성을 사용하여 선택 목록을 펼쳤을 때 보여줄 열의 최대 개수를 지정할 수 있습니다.
512,7ad20fa0f520b1d0,normal,"<code>showCheckTop</code> 속성과 <code>checkboxClickSync</code> 속성을 모두 <code>""true""</code>로 설정하면 선택한 항목을 선택 목록 상단에 표시할 수 있습니다."
513,625dffe1bcb4213a,normal,"<code>useDrag=""true""</code> 설정을 사용하면 마우스 드래깅을 통해 여러 항목을 한꺼번에 선택할 수 있습니다. 또한, <code>rangeSeparator</code> 속성을 지정하여 속성을 사용하여 연속적으로 선택된 값을 <strong><span class=""r_italic_span"">""x-y""</span></strong> 형태로 간단하게 표시할 수 있습니다."
514,9b2c8ab180451688,normal,"<code>useEdit=""true""</code> 설정을 사용하면 사용자가 직접 항목을 입력하여 항목을 선택할 수 있습니다."
515,f706decf3cff6bfc,normal,"<code>validateOnInput</code> 속성을 <code>""true""</code>로 설정할 경우, 사용자가 값을 입력(<code>useEdit=“true”</code>)할 때마다 해당 값의 유효성을 검증할 수 있습니다."
516,efc202e557865de2,normal,<kbd>dataType</kbd> 및 <kbd>displayFormat</kbd> 속성을 사용하여 시간 및 날짜 입력 방식을 지정할 수 있습니다.
517,5d7cc88c569423ad,unordered_list,"* 시간: <kbd>dataType=""<span class=""r_red_highlight_span""><strong>time</strong></span>""</kbd> <kbd>displayFormat=""<span class=""r_red_highlight_span""><strong>HH:mm:ss</strong></span>""</kbd>
* 날짜: <kbd>dataType=""<span class=""r_blue001_span""><span class=""r_blue_span""><strong>date</strong></span></span>""</kbd> <kbd>displayFormat=""<span class=""r_blue001_span""><span class=""r_blue_span""><strong>MM-dd-yyyy</strong></span></span>""</kbd>"
518,1a7b5fcbc65077cf,normal,<kbd>dataType</kbd> 및 <kbd>displayFormat</kbd> 속성을 사용하여 반올림 및 무조건 올림을 설정할 수 있습니다.
519,0dd6b6f865c175e6,unordered_list,"* 반올림: <kbd>dataType=""<strong>number</strong>""</kbd> <kbd>displayFormat=""<span class=""r_red_highlight_span""><strong>##.##</strong></span>""</kbd>
* 무조건 올림: <kbd>dataType=""<span class=""r_blue001_span""><span class=""r_blue_span""><strong>number</strong></span></span>""</kbd> <kbd>displayFormat=""<span class=""r_blue001_span""><span class=""r_blue_span""><strong>##.##[ceil]</strong></span></span>""</kbd>"
520,971dca6fb171cfeb,normal,"<kbd>dataType=""number""</kbd>인 경우 <strong><em><span class=""r_italic_span"">config.xml</span></em></strong> 파일을 이용하여 아래와 같이 <kbd>displayFormat</kbd>을 일괄 적용할 수 있습니다."
521,a874e4a6b9b5f735,normal,"<code>applyFormat</code> 속성을 사용하여 포맷 적용 시점을 결정할 수 있습니다. <code>applyFormat=""display""</code>일 경우 포커스가 인풋 박스를 빠져 나가면 포맷이 적용되고, <code>applyFormat=""all""</code>일 경우 입력과 동시에 포맷이 적용됩니다."
522,97a05d85a3a067d2,normal,<kbd>dataType</kbd> 및 <kbd>displayFormatter</kbd> 속성을 사용하여 대문자 변환을 수행할 수 있습니다. <kbd>displayFormatter</kbd> 속성으로 함수 명을 지정하고 아래와 같이 해당 함수를 별도로 정의해야 합니다.
523,79efe0fce32f2a99,definition_list,"관련 속성 
<kbd>dataType=""float""</kbd>
+ <kbd>allowChar</kbd>
+ <kbd>maxlength</kbd>"
524,3af854e1f3bfab38,definition_list,"<kbd>maxlength</kbd> 설정 예
<kbd>maxlength=""0.1""</kbd>: 정수부는 입력할 수 없고, 소수부는 1자리까지 입력 가능. 
+ <kbd>maxlength="".11""</kbd>: 정수부는 자리수 제한 없고, 소수부는 11자리까지 입력가능."
525,4df2734125cd1580,normal,"<kbd>dataType=""text""</kbd> 혹은 <kbd>""number""</kbd>인 경우, <kbd>maskFormat</kbd> 속성을 사용하여 마스킹 기능을 사용할 수 있습니다."
526,05aa4a90926dd911,normal,"<code>dataType</code>이 <code>""euro""</code>, <code>""rupee""</code> 혹은 <code>""tenge""</code>와 같은 화폐 단위일 경우, + 및 - 기호를 입력할 수 있습니다. 또한, <code>euroMask</code>, <code>rupeeMask</code>, <code>tengeMask</code> 속성을 사용하여 금액 입력 포맷을 설정할 수 있습니다."
527,7b304df8c3673801,normal,"<code>ltrim</code>, <code>trim</code>, <code>rtrim</code> 속성을 설정하여 포커스가 InputBox를 벗어날 때 좌우 공백을 제거할 수 있습니다."
528,53af7b382f3a018d,unordered_list,"* <code>ltrim=""true""</code> : 좌측에 존재하는 공백을 제거. 
** 예시: <span class=""r_blue001_span""><span class=""r_italic_span"">""____1234____"" </span></span>→ <span class=""r_blue001_span""><span class=""r_italic_span"">""1234____""</span></span>
* <code>trim=""true""</code> : 좌우 양쪽의 공백을 모두 제거.
** 예시: <span class=""r_blue001_span""><span class=""r_italic_span"">""____1234____"" </span></span>→ <span class=""r_blue001_span""><span class=""r_italic_span"">""1234""</span></span>
* <code>rtrim=""true</code>"" : 우측에 존재하는 공백을 제거.
** 예시: <span class=""r_blue001_span""><span class=""r_italic_span"">""____1234____"" </span></span>→ <span class=""r_blue001_span""><span class=""r_italic_span"">""____1234""</span></span>"
529,0716e6791680a16b,normal,"<kbd>setValue();</kbd>와 <kbd>getValue();</kbd> 함수를 통해 컴포넌트에 동적으로 값을 설정하거나 현재 값을 반환할 수 있습니다. InputBox 뿐만 아니라 Secret, Output, TextArea, TextBox, AutoComplete, Radio, Select, CheckBox, Calendar, InputCalendar 등의 컴포넌트에서 사용 가능합니다."
530,e8349418c3c01ad1,normal,"<code>maxLength</code> 속성을 통해 dataType에 상관 없이(<code>""euro""</code>, <code>""rupee""</code> 혹은 <code>""tenge""</code>와 같은 화폐 단위도 가능) 입력 가능한 최대 길이를 설정할 수 있습니다."
531,e91897722f45adf0,unordered_list,"* 검증 항목으로 설정한 속성에 대해 <kbd>validate();</kbd> 함수는 검증을 수행하여 결과를 true/false로 반환합니다.
** 입력 검증 결과가 false이고 <kbd>displaymessage=""true""</kbd>로 설정된 경우, 
*** 함수 내부에 정의된 메시지가 표시됩니다.
*** <kbd>invalidMessage=""<span class=""r_blue_span"">검증 실패 안내 메시지</span>""</kbd>까지 설정된 경우, <kbd>invalidMessage</kbd> 속성으로 설정한 <span class=""r_blue_span"">""검증 실패 안내 메시지""</span>가 표시됩니다.
* 검증을 수행하고 결과를 표시할 함수를 구현한 뒤, 해당 함수를 <kbd>invalidMessageFunc</kbd> 속성으로 설정할 경우, 해당 함수를 통해 검증을 수행하고 메시지를 표시할 수 있습니다."
532,8748b14995c804c3,note,"<strong>상세 설명</strong>

<a class=""reference"" href=""#ad52e06a2e4c3683"">입력 검증</a> 참조."
533,ee1deaa3b479c263,normal,<code>oneditfull</code> 이벤트는 <code>maxByteLength</code> 속성으로 지정한 길이 만큼의 값이 입력될 경우 발생합니다.
534,38b55d2ae4fdf000,normal,날짜값 종류(<strong><kbd>calendarValueType</kbd></strong>) 별로 날짜 표시방식(<strong><kbd>displayFormat</kbd></strong>) 속성을 설정하는 대신 아래와 같이 <strong><em><em>config.xml</em></em></strong> 파일에서 일괄 설정할 수 있습니다.
535,e9b69d39cc72dce0,normal,특정 날짜를 기준으로 이전/이후 날짜를 비활성화하여 사용자 선택을 막을 수 있습니다.
536,b5340df464fb2f39,normal,<code>disableBeforeDate()</code> 및 <code>disableAfterDate()</code> 함수를 사용하여 지정한 날짜 이전/이후의 날짜들을 비활성화하여 달력에서 선택할 수 없도록 설정할 수 있습니다.
537,a7d51e9b753c80a3,normal,<code>disableDate()</code> 함수를 사용하면 공휴일을 포함한 날짜(들)을 비활성화하여 달력에서 선택할 수 없도록 설정할 수 있습니다.
538,711c97f5da20a157,normal,날짜 입력순서를 제어할 수 있습니다.
539,b74600f6c153d268,unordered_list,"* 한국
+ 20141225 =&gt; <kbd>ioFormat=""yyyyMMdd""</kbd>"
540,95d14858ea323414,unordered_list,"* 미국
+ 12242014 =&gt; <kbd>ioFormat=""MMddyyyy""</kbd>"
541,058fb8fe72136546,normal,아래와 같이 <strong><kbd>setIoFormat(options);</kbd> </strong>함수를 이용하여 (1) 날짜 입력 형식 (2) 입력란의 날짜 출력 형식 (3) 달력의 날짜 출력 형식을 지정할 수 있습니다.
542,76cea6bfe56a8df9,normal,사용자의 날짜 선택과 별도로 달력 아이콘 클릭시 표시되는 날짜를 현재 날짜를 사용할 수 있습니다. <kbd>fixedDate</kbd> 및 <kbd>keepFixeDate</kbd> 두 개의 속성을 사용하여 아래의 방법으로 현재 날짜를 표시하십시오.
543,a7a6b3c8cf1b5ca5,normal,"<code>setValue(""날짜"") </code>함수를 사용하여 날짜를 설정할 수 있습니다. 단, 날짜는 <code>ioFormat</code> 속성으로 지정한 형식을 사용하여 지정해야 합니다. 아래 예제와 같이 구분자를 포함하거나 포함하지 않은 ioFormat 형식을 모두 사용할 수 있습니다."
544,848895afb2cb7fbb,normal,<code>getCurrentServerDate()</code> 함수를 통해 현재 시각 및 날짜를 확인한 후 <code>setValue()</code> 함수를 통해 설정할 수 있습니다.
545,5a7d092a18fb4ac9,unordered_list,"* 검증 항목으로 설정한 속성에 대해 <kbd>validate();</kbd> 함수는 검증을 수행하여 결과를 true/false로 반환합니다.
* 입력 검증 결과가 false이고 <kbd>displaymessage=""true""</kbd>로 설정된 경우, 
** 함수 내부에 정의된 메시지가 표시됩니다.
** <kbd>invalidMessageFunc=""<span class=""r_blue_span"">함수</span>""</kbd>까지 설정된 경우, 해당 <span class=""r_blue_span"">함수</span>가 실행되어 검증 실패에 대한 메시지를 표시."
546,4c68ee214899b0be,normal,"<kbd><strong>dateValidCheck=<span class=""r_red_highlight_span"">""true""</span></strong></kbd> 설정을 추가할 경우, 입력된 날짜의 유효성을 검증할 수 있습니다. 날짜가 유효하지 않을 경우, <kbd><strong>invalidMessageFunc</strong></kbd> 속성으로 정의된 함수가 호출됩니다."
547,f0a491b63070148a,normal,"<code>dateValidSetCustom=""true""</code> 속성을 설정할 경우, <code>invalidMessageFunc</code> 함수를 실행하여 유효하지 않은 날짜값 입력에 대한 오류 메시지를 표시하고 이후 <code>setValueCancel()</code> 함수를 실행하여 이전 유효한 값을 유지할 수 있습니다."
548,745c6a452662874b,normal,"<code>invalidMessageFunc</code> 속성으로 지정된 함수에서 PopUp을 띄우고 해당 PopUp이 닫힐 경우 <code>onpageunload</code> 이벤트에서 <code>setValueCancel()</code> 함수를 호출할 수 있습니다. 즉, 유효하지 않은 날짜를 입력할 경우, 별도의 PopUp 창을 표시(<code>dateValidSetCustom=""true""</code>)하여 오류 메시지를 출력하고, 해당 PopUp 창이 닫힐 경우 이전 값으로 복원하는 동작이 가능합니다."
549,8a1952f5709308e1,normal,"달력 아이콘을 클릭하여 달력을 표시할 경우, 달력 상에 Today 버튼이 함께 표시됩니다. Today 버튼을 클릭하면 현재 날짜를 선택할 수 있습니다. 이 Today 버튼은 <code>showToday=""false""</code> 설정을 통해 화면에 표시하지 않을 수 있습니다."
550,030f84e3f50c72c2,normal,<code>pickerType </code>속성을 통해 달력에서 연도 및 월을 선택하는 방식을 설정할 수 있습니다.
551,2e47ebbb82f5e8f7,normal,"<code>pickerType=""dynamic""</code>인 경우 달력 헤더 부분의 연도 및 월 표시 순서를 <code>dynamicHeaderOrder</code> 속성을 통해 설정할 수 있습니다."
552,b2e46bbba3abf737,definition_list,"<code>dynamicHeaderOrder</code>: 
<code>pickerType=""dynamic""</code>인 경우 헤더 부분의 label 순서를 결정. 
+ <code>""month""</code> (기본 값) : 월 ­ 연도 순서로 출력. 
+ <code>""year""</code> : 연도 ­ 월 순서로 출력."
553,85e2397495744142,normal,"<code>dayMoveFixed=""true""</code> 속성 설정을 적용하면, 특정 일(Day)를 선택한 후, 달력 상단의 화살표를 사용하여 월이나 연도를 이동해도 현재 선택한 일을 유지할 수 있습니다."
554,74aa958b5a33ca4f,normal,<code>visibleWeekNum</code> 속성을 통해 달력에 표시할 주(Week)의 수를 설정할 수 있습니다.
555,82878d30db111b71,normal,<code>displayDayType</code> 속성을 사용하여 달력의 요일 부분을 텍스트 혹은 이미지 형태로 표시할지 선택 선택할 수 있습니다.
556,234dda8f591afa40,normal,"<code>displayDayType=""<span class=""r_blue001_span"">text</span>""</code>인 경우, 요일이 텍스트로 표시되어, 복사가 가능합니다."
557,e5d9b9e0d5bbcf0d,normal,<code>setHoliday()</code> 함수를 사용하여 아래와 같이 특정 날짜를 휴일로 지정할 수 있습니다.
558,6952c2d3232a0bd0,definition_list,"<code>setHoliday(dateStr , toRemove)</code>
<code>dateStr</code> : 휴일로 지정할 날짜. 
+ <code>toRemove </code>: 기존 휴일 설정을 취소할지 여부. (<code>""true""</code> : 취소. <code>""false""</code> (기본 값) : 취소하지 않음.)"
559,e8443f2f27ba3a3d,normal,"<code>setHolidayRef()</code> 함수를 사용하여 DataList의 특정 컬럼을 참조하여 해당 값을 휴일로 지정할 수 있습니다. 단, DataList의 컬럼 ID 앞에 ""<code>data:</code>""를 붙여아 합니다."
560,adac24a982c36ca7,normal,<code>removeHoliday()</code> 함수를 사용하여 <code>setHoliday()</code> 및 <code>setHolidayRef()</code> 함수를 사용하여 지정한 휴일 설정을 모두 취소할 수 있습니다.
561,cdc11476d3759e15,normal,<code>onrowclick</code> 이벤트는 선택 목록에서 항목을 선택할 때 발생합니다.
562,c2b93246a40d5880,definition_list,"주요 속성
<kbd>filter</kbd>: 업로드 가능한 파일 확장자를 지정. (형식: [파일 형식 이름] : [확장자 명], 사용 예: <kbd>AutoCad:*.dxf;*.dws</kbd>)
+ <kbd>maxcount</kbd>: 업로드 가능한 최대 파일 갯수
+ <kbd>maxsize</kbd>: 업로드 가능한 최대 파일 크기 (단위: Kb)"
563,f522d12f278997c7,normal,MultiUpload 컴포넌트를 통해 업로드하는 파일 용량은 크게 두가지 방법으로 제한할 수 있습니다.
564,9a6b19d53b48077f,ordered_list,"# <kbd>maxSize</kbd> 속성을 지정.
# <kbd>subSize</kbd>속성을 지정하여 <strong><span class=""r_italic_span"">config.xml</span></strong> 및 <strong><span class=""r_italic_span"">websquare.xml</span></strong> 파일에 클라이언트 및 서버 쪽에서 제한할 용량을 각각 지정."
565,50cb95656f7f8c00,caution,"<kbd>subSize</kbd> 속성이 <kbd>maxSize</kbd> 속성보다 우선. 
<strong><span class=""r_italic_span"">config.xml</span></strong> 및 <strong><span class=""r_italic_span"">websquare.xml</span></strong> 파일은 동일한 subSize 값을 사용할 것을 권장."
566,92e381a4fcd69481,normal,여러 파일을 업로드 할 때 <code>setParamJSON() </code>함수를 사용하여 각 파일 별로 서로 다른 파라미터를 설정할 수 있습니다. 아래의 예시를 참고하십시오.
567,e33a0b26aa69ccdf,ordered_list,"# <code>getFileNames()</code> 혹은 <code>geFileInfos()</code>를 사용하여 파일의 이름을 반환합니다. 
# 파일 이름을 사용하여 각 파일 별 파라미터 정보를 JSON 형태 생성합니다. 
# <code>setParamJSON()</code>을 호출하여 파라미터 정보를 전달합니다."
568,50aee7995730604c,normal,여러 파일을 업로드 할 때 <code>maxcount </code>속성을 사용하여 최대 업로드 가능한 파일 수를 설정할 수 있습니다.
569,1dcd73b74d6acaaa,normal,<code>getFileCount() </code>함수를 사용하여 업로드할 파일의 개수를 확인할 수 있습니다.
570,daa0bf884d289fc7,normal,Radio 컴포넌트를 더블 클릭하여 선택 항목을 직접 입력하거나 DataList 혹은 LinkedDataList와 바인딩할 수 있습니다.
571,d432931f4a388ee6,normal,"DataList와 바인딩하여 선택 항목을 표시할 경우, 바인딩된 DataList의 특정 컬럼 값을 기준으로 일부 선택 항목을 숨길 수 있습니다."
572,cc6bd4dc08e2edb1,normal,<code>enableColum</code> 및 <code>enableColumnFalseValue</code> 속성을 사용하여 선택 목록의 특정 항목을 비활성화할 수 있습니다.
573,a8a960ee2be6d33d,unordered_list,"* <code>enableColumn</code> : 비활성화 여부를 위해 참고할 DataList의 컬럼.
* <code>enableColumnFalseValue</code> : 비활성화하기 위한 조건. (비활성화를 위해 참고하는 컬럼의 데이터 값.)"
574,ae027278a5efba93,normal,아래 예제는 세 개의 항목이 비활성화되어 표시된 경우입니다.
575,f49479ae5c90f867,normal,<code>setEnableColumn()</code> 함수를 사용하여 선택 목록의 특정 항목을 비활성화할 수 있습니다.
576,f47ea4a9b9cd5ed9,unordered_list,"* 검증 항목으로 설정한 속성에 대해 <kbd>validate();</kbd> 함수는 검증을 수행하여 결과를 <code>true</code>/<code>false</code>로 반환합니다.
** 입력 검증 결과가 <code>false</code>이고 <kbd>displaymessage=""true""</kbd>로 설정된 경우, 
*** 함수 내부에 정의된 메시지가 표시됩니다.
*** <kbd>invalidMessage=""<span class=""r_blue_span"">검증 실패 안내 메시지</span>""</kbd>까지 설정된 경우, <kbd>invalidMessage</kbd> 속성으로 설정한 ""<span class=""r_blue_span"">검증 실패 안내 메시지</span>""가 표시됩니다.
* 검증을 수행하고 결과를 표시할 함수를 구현한 뒤, 해당 함수를 <kbd>invalidMessageFunc</kbd> 속성으로 설정할 경우, 해당 함수를 통해 검증을 수행하고 메시지를 표시할 수 있습니다."
577,42e5384cbef4bbdc,normal,CheckBox의 각 선택 항목에<code> label</code> 값 혹은 사용자 지정 값을 툴팁으로 표시할 수 있습니다.
578,01077a2b97bea9ee,ordered_list,"# DataList를 생성합니다.
# DataList에 아래와 같이 네 개의 컬럼을 지정하십시오. (단, 컬럼 이름은 변경 가능합니다.
## titleColumn: 스케줄 제목을 저장할 컬럼. 
## idColumn: 스케줄 ID를 저장할 컬럼. 
## startColumn: 스케줄 시작 일시를 저장할 컬럼. 
## endColumn: 스케줄 종료 일시를 저장할 컬럼. 
# ScheduleCalendar의 각 속성을 아래와 같이 지정하십시오."
579,fc292b337e425c8b,normal,<code>addSchedule()</code> 함수를 이용하여 동적으로 스케줄을 추가할 수 있습니다.
580,751bede514602b1a,normal,"<code>editable=""true""</code> 설정을 적용할 경우, 칼렌더 상에서 마우스 드래그-앤-드롭을 통해 일정의 시작일 및 종료일을 변경할 수 있습니다."
581,428832eef755116e,normal,"<code>selectable=""true""</code> 설정을 적용할 경우, 칼렌더 상에서 특정 날짜를 클릭하거나 여러 날짜를 드래깅하여 스케줄 정보를 입력할 수 있습니다."
582,a3c0b08f081885e0,normal,스케줄이 끝나는 시간을 기준으로 스케줄의 마지막 날짜를 캘린더에 표시할지 여부를 설정할 수 있습니다. 관련 속성은 <kbd>nextDayThreshold</kbd>입니다.
583,01764623fa22e2d0,definition_list,"<code>nextDayThreshold=""09:00:00""</code>
(1) 스케줄의 끝나는 시간이 (09시 이후인) 10시일 경우에는, 마지막 날짜에 스케줄이 표시됨.
+ (2) 스케줄의 끝나는 시간이 (09시 이전인) 07시일 경우에는, 마지막 날짜에 스케줄이 표시되지 않음."
584,15b4e3697ae037e4,normal,<kbd>timeFormat</kbd> 속성을 이용하여 시간 표시 형식을 설정할 수 있습니다.
585,513879ed7dcab99f,normal,<code>addSchedule()</code> 함수를 사용하여 스케줄을 생성(<code>onaddschedule</code>)하거나 혹은 사용자가 마우스 드래깅으로 스케줄을 이동(<code>onmoveschedule</code>)할 경우 이벤트를 추가할 수 있습니다.
586,f8a2a74f8f4191f6,ordered_list,"# Design 뷰에서 ScheduleCalendar를 우클릭합니다.
# <strong>Event </strong>­ <strong>onaddschedule</strong> 혹은<strong> onmoveschedule</strong>을 선택합니다.
# Script 탭에서 해당 이벤트 추가할 동작을 정의합니다."
587,59b8c45b4796d64a,unordered_list,"* 검증 항목으로 설정한 속성에 대해 <kbd>validate();</kbd> 함수는 검증을 수행하여 결과를 true/false로 반환합니다.
** 입력 검증 결과가 false이고 <kbd>displaymessage=""true""</kbd>로 설정된 경우, 
*** 함수 내부에 정의된 메시지가 표시됩니다.
*** <kbd>invalidMessage=""<span class=""r_blue_span"">검증 실패 안내 메시지</span>""</kbd>까지 설정된 경우, <kbd>invalidMessage</kbd> 속성으로 설정한 ""<span class=""r_blue_span"">검증 실패 안내 메시지</span>""가 표시됩니다.
* 검증을 수행하고 결과를 표시할 함수를 구현한 뒤, 해당 함수를 <kbd>invalidMessageFunc</kbd> 속성으로 설정할 경우, 해당 함수를 통해 검증을 수행하고 메시지를 표시할 수 있습니다."
588,02b6356708fca7d3,normal,SelectBox 컴포넌트를 더블 클릭하여 선택 항목을 직접 입력하거나 DataList 혹은 LinkedDataList와 바인딩할 수 있습니다.
589,7718cce482a5616f,normal,"SelectBox와 바인딩된 데이터가 아래와 같이 <code>""col3""</code>에 계층 정보를 포함할 경우 <code>depthColumn=""col3""</code> 속성 설정을 통해 선택 항목들을 계층 구조로 표시할 수 있습니다."
590,5208ba48c2366083,normal,<code>depthColumnHeight 및 depthColumnWidth </code>속성 설정을 통해 계층 구조의 선택 항목들을 표시할 높이 및 너비를 설정할 수 있습니다.
591,de28f5cce0ecdd7f,normal,"<code>depthColumn</code> 속성을 사용할 경우, 계층 구조의 선택 항목을 SelectBox에 표시할 수 있습니다. 이 때, <code>depthColumnShowPath=""true""</code> 속성 설정을 사용하면 선택된 항목의 부모 목록을 모두 표시할 수 있습니다. 부모가 여러 개인 경우, <code>depthColumnPathDelimiter</code> 속성을 사용하여 구분자를 지정할 수 있습니다."
592,978e001cab19c427,normal,"DataList와 바인딩하여 선택 항목을 표시할 경우, 바인딩된 DataList의 특정 컬럼 값을 기준으로 일부 선택 항목을 숨길 수 있습니다."
593,818bfd77c083ee17,normal,<code>enableColum</code> 및 <code>enableColumnFalseValue</code> 속성을 사용하여 선택 목록의 특정 항목을 비활성화할 수 있습니다.
594,a6e07b257464f98b,unordered_list,"* <code>enableColumn</code> : 비활성화 여부를 위해 참고할 DataList의 컬럼.
* <code>enableColumnFalseValue</code> : 비활성화하기 위한 조건. (비활성화를 위해 참고하는 컬럼의 데이터 값.)"
595,77d2ca7ff0f20eef,normal,아래 예제는 두 항목이 비활성화되어 표시된 경우입니다.
596,09855e3323f29b22,normal,<code>setEnableColumn()</code> 함수를 사용하여 선택 목록의 특정 항목을 비활성화할 수 있습니다.
597,b5f10a3b82c061ab,normal,<code>setDisplayMode()</code> 및 <code>setDelimiter()</code> 함수를 사용하면 <code>displayMode</code> 및 <code>delimiter</code> 속성을 동적으로 변경할 수 있습니다.
598,816c16361bfff39f,normal,선택 목록 및 브라우저 상에서의 마우스 휠 스크롤링을 제어할 수 있습니다.
599,7fa21f3d3c333bf8,unordered_list,"* 검증 항목으로 설정한 속성에 대해 <kbd>validate();</kbd> 함수는 검증을 수행하여 결과를 true/false로 반환합니다.
** 입력 검증 결과가 false이고 <kbd>displaymessage=""true""</kbd>로 설정된 경우, 
*** 함수 내부에 정의된 메시지가 표시됩니다.
*** <kbd>invalidMessage=""<span class=""r_blue_span"">검증 실패 안내 메시지</span>""</kbd>까지 설정된 경우, <kbd>invalidMessage</kbd> 속성으로 설정한 ""<span class=""r_blue_span"">검증 실패 안내 메시지</span>""가 표시됩니다.
* 검증을 수행하고 결과를 표시할 함수를 구현한 뒤, 해당 함수를 <kbd>invalidMessageFunc</kbd> 속성으로 설정할 경우, 해당 함수를 통해 검증을 수행하고 메시지를 표시할 수 있습니다."
600,54688dd8398b704b,normal,"<code>labelWidthAuto=""true""</code> 설정을 사용할 경우, 선택 항목 중 가장 긴 label 값에 따라 SelectBox의 너비를 자동으로 조정할 수 있습니다."
601,d776de98632d37ad,normal,"keycode와 콤마(,)를 사용하여 특정 키의 동작을 막을 수 있습니다. 동작을 막으려는 키(들)의 keycode를 <code>preventKeyList</code> 속성값으로 정의하십시오. 사용 예는 아래와 같습니다."
602,7654725f848f2ec8,note,"GridView의 <code>inputType=""autoComplete""</code> 컬럼에서는 사용할 수 없음."
603,cd62d0259cbefc38,normal,"<code>tooltipDisplay</code> 속성을 <code>""true""</code>로 설정할 경우 SelectBox에서 선택된 항목에 대한 툴팁을 표시할 수 있습니다."
604,85369b4155269290,normal,"<code>itemTooltipDisplay</code> 속성을 <code>""true""</code>로 설정할 경우, SelectBox에서 선택 항목 목록 상에서 각 선택 항목에 대한 툴팁을 표시할 수 있습니다."
605,5cd2d19dcb6c6ae7,normal,"<code>itemTooltipFormatter</code> 속성값으로 툴팁을 변환할 함수 이름을 지정한 후, 해당 함수를 직접 구현하여 툴팁 텍스트를 변환할 수 있습니다. 아래는 <code>itemTooltipFormatter=""scwin.selectBoxTooltip""</code>인 경우 해당 함수를 직접 구현한 예시입니다. 사용자 지정함수는 선택 항목의 <code>label</code>과 <code>index</code>를 파라미터로 받습니다."
606,3ca9947ecf7317bb,normal,"<code>setValue() </code>함수로 설정하는 값이 선택 항목 목록에 없는 경우, <code>valueNotInList</code> 및 <code>emptyItem</code> 속성을 사용하여 해당 값을 처리하는 방법을 설정할 수 있습니다."
607,a49ded5890549edd,definition_list,"(1) <code>valueNotInList=""default"" emptyItem=""true""</code>
선택 항목 목록에 없는 값은 무시.
(2) <code>valueNotInList=""default"" emptyItem=""false""</code>
빈값을 표시.
(3) <code>valueNotInList=""keepValue""</code>
선택 항목 목록에 없는 값을 유지. 
+ <code>getValue()</code> 함수를 통해 해당 값을 확인할 수 있으며, 새로 설정된 값의 인덱스는 <strong><span class=""r_italic_span"">""-1""</span></strong>임."
608,9e6f135776b0a36e,normal,<code>onselected</code> 이벤트는 마우스 클릭 혹은 Enter 키를 통해 항목을 선택할 경우 발생합니다.
609,d4bd4a240e902aee,normal,"AutoComplete와 SelectBox는 기본적으로 동일한 기능을 제공합니다. 선택 항목을 콤보 박스에 표시하며 사용자는 한 개의 항목만 선택할 수 있습니다. 단, AutoComplete의 경우, 검색 기능을 제공합니다. 즉, 사용자가 키워드를 입력하면, 입력된 키워드를 기반으로 선택 항목을 검색하여 목록에 표시합니다."
610,f027df31ff77d51b,normal,"<code>autoFocus=""true""</code> 설정을 적용할 경우, 사용자가 날짜 입력 후 자동으로 포커스를 이동할 수 있습니다. <code>dateType=""date""</code>인 경우, <code>dateIncrementType</code> 설정에 따라 정해진 길이만큼의 날짜값이 입력되면 <code>nextTabID</code>로 지정된 컴포넌트로 포커스가 이동됩니다."
611,0164933dbff3e0c9,definition_list,"관련 속성
<code>dateType=""<span class=""r_red_highlight_span"">date</span>""</code>
+ <code>dateIncrementType</code>
+ <code>autoFocus=""<span class=""r_red_highlight_span"">true</span>""</code>
+ <code>nextTabID</code>"
612,a48a2146e08dc391,normal,"<code>dateType=""<span class=""r_blue001_span"">date</span>""</code> 혹은 <code>dateType=""<span class=""r_blue001_span"">time</span>""</code>인 경우, Spinner는 날짜 혹은 시간을 표시합니다. 이 때 <code>dateIncrementType</code> 속성 설정을 통해 Spinner 상의 날짜 혹은 시간이 증가하는 단위를 설정할 수 있습니다."
613,d653718151808e86,normal,<code>dataIncrementType</code> 속성(값 증가 단위)의 옵션 값은 아래와 같습니다.
614,03b67568b118e341,unordered_list,"* <code>dataType=""<span class=""r_blue001_span"">date</span>""</code>인 경우:
** <code>dataIncrementType=""minute"" </code>(""분"" 단위 증가)
** <code>dataIncrementType=""hour""</code><code> </code>(""시간"" 단위 증가)
** <code>dataIncrementType=""day""</code><code> </code>(""일"" 단위 증가)
** <code>dataIncrementType=""month""</code><code> </code>(""월"" 단위 증가)
** <code>dataIncrementType=""year""</code><code> </code>(""연"" 단위 증가)"
615,c7b442a53cf22f7a,unordered_list,"* <code>dataType=""<span class=""r_blue001_span"">time</span>""</code>인 경우:
** <code>dataIncrementType=""second""</code><code> </code>(""초"" 단위 증가)
** <code>dataIncrementType=""minute""</code><code> </code>(""분"" 단위 증가)
** <code>dataIncrementType=""hour""</code><code> </code>(""시간"" 단위 증가)"
616,4e65cf5c797e76a1,normal,<code>initValue</code> 속성을 사용하여 Spinner 컴포넌트의 초기값을 지정할 수 있습니다.
617,55bf3cd14820701e,normal,"<code>dataType=""date</code>""인 경우 <code>useAlert=""true""</code> 설정을 추가하면, 잘못된 날짜를 입력할 경우 경고창을 출력할 수 있습니다."
618,f34c4d9c7342a855,normal,<code>title</code> 속성을 이용하여 HTML의 <code>&lt;title&gt;</code> 태그 값을 정의할 수 있습니다.
619,7ffbbbf60ecde704,normal,"<code>showPlaceHolderOnReadOnly=""true""</code> 속성 설정을 추가하면, 읽기 전용 모드(<code>readOnly=""true""</code>) 혹은 비활성화 상태(<code>disabled=""true""</code>)에서도 <code>placerholder</code> 속성으로 지정된 텍스트를 표시할 수 있습니다."
620,85ec05137fe49f4b,normal,"TextBox 컴포넌트는 <code>tagname</code> 속성을 <code>""h1"" ""h3"" ""address"" ""code""</code> 등과 같은 HTML 태그로 지정해서 사용할 수 있습니다."
621,436ba21b5291ac75,normal,"<code>tooltipDisplay=""true""</code> 설정을 사용하여 툴팁을 표시할 수 있습니다. <code>tooltipShowAlways=""true"" </code>설정을 추가할 경우 데이터 길이에 상관 없이 (즉, 데이터가 화면에 모두 표시되는 경우에도) 항상 툴팁을 표시할 수 있습니다."
622,8da6ed4ae7ab87ac,normal,WebSquare의 서버 모듈에서 참고하는 설정(<strong><em>${WEBSQUARE_HOME}/config/websquare.xml</em></strong>)에 정의된 uploading tag를 참조하여 업로드 합니다.
623,0a593b1b9bbb9887,note,"파일 업로드 위치는 websquare.xml에 설정합니다. 
(기본값: WebSquare/upload/baseDir/@value + folderName/@value)
별도의 서브릿을 사용할 경우 <strong>action</strong> 속성에 해당 URL을 정의하십시오."
624,d99961dcab9c5c7d,normal,"Upload 컴포넌트를 통해 업로드할 수 있는 파일 크기는 <kbd>subSize</kbd>속성을 지정하여 <strong><span class=""r_italic_span"">websquare.xml</span></strong> 파일에 서버 쪽에 업로드할 용량을 제한할 수 있습니다."
625,3d48f5e9a985bdf3,normal,"최대 업로드 사이즈를 초과하여 서버 쪽에서 에러를 리턴할 경우<strong><span class=""r_italic_span"">websquare.xml</span></strong> 파일에 있는 해당 노드의 값을 반환합니다."
626,1f93d42724698fb0,normal,"Upload 컴포넌트의 화살표를 클릭하면, 파일 탐색창이 열리고 업로드할 파일을 선택할 수 있습니다."
627,eb1808ef0e48b41a,normal,"<code>clickOPenFileDialog=""true""</code> 속성 설정을 적용하면, Upload 컴포넌트의 화살표 뿐만 아니라 파일 입력 부분을 클릭해도 파일 탐색창을 표시됩니다."
628,10fdabf344976604,normal,<code>openFileDialog()</code> 함수를 이용하여 직접 파일 탐색창을 열 수도 있습니다.
629,b265dec2ca122f40,normal,아래의 주요 속성을 사용하여 GridView의 여러 가지 유용한 기능을 편리하게 사용할 수 있습니다.
630,0a791ca68404c895,normal,"GridView에 데이터를 표시하기 위해서는 DataList와의 바인딩이 필요합니다. DataList를 생성한 후, GridView와 바인딩하십시오. 좀 더 자세한 정보는 <a class=""reference text"" href=""#e8b94a03286e4f9f"">DataCollection</a>과 <a class=""reference text"" href=""#15c9ec50633b935d"">Submission</a> 부분을 참고하십시오."
631,755f6a0975ea43b0,normal,아래와 같이 GridView 최외곽을 선택하면 GridView 전체에 대한 속성을 지정할 수 있습니다.
632,e7ba89437e55a5df,normal,"<span class=""r_italic_span"">gridView.column</span>에서 지정한 다양한 <kbd>inputType</kbd>을 통해 Body를 표현할 수 있습니다."
633,9edd42b161780ef2,note,GridView의 경우 dataCollection 객체에서 <kbd>dataType</kbd> 속성을 설정할 수 있습니다.
634,6c9cbd6057e7dc79,normal,"Header 셀도 Body와 마찬가지로 <strong><kbd>inputType</kbd></strong> 지정을 통해 다양한 형식을 지정할 수 있습니다. 단, Body가 더 다양한 종류를 지원합니다."
635,84d366ce15a68a84,normal,Header 셀을 선택한 후 <code>inputType</code>을 지정하십시오. 헤더에서 사용할 수 있는 <kbd>inputType</kbd> 및 <kbd>dataType</kbd>의 종류는 다음과 같습니다. (기본 값은 <kbd>text</kbd>입니다.)
636,5514d31a7391ce98,normal,"Body 셀의 속성과 동일하나, Header 셀에 사용 가능한 속성은 제한적입니다. 아래 표를 참고하십시오."
637,db5ef4a05b038024,caution,"아래의 경우 <strong><code><kbd>sortable</kbd></code></strong> 속성과 필터링 기능을 함께 사용하지 마십시오. (단, <strong><code><kbd>multiSort()</kbd></code></strong> API와 필터링 기능은 함께 사용할 수 있습니다.)

* <kbd>inputType=""text"" dataType=""own""</kbd>
* <kbd>inputType=""select</kbd>"
638,ba074ce014df439c,normal,동일한 열의 연속된 행을 <kbd>&lt;Ctrl&gt;</kbd>을 누른 채 선택하여 병합(<kbd>rowSpan</kbd>)할 수 있습니다. 같은 행의 연속된 열도 병합(<kbd>colSpan</kbd>)할 수 있습니다.
639,f6bd4406402298b2,normal,"<strong><kbd>textAlign</kbd> </strong>속성으로 텍스트를 좌, 우, 중앙으로 정렬할 수 있습니다. 기본 값은 중앙(<strong><kbd>center</kbd></strong>)입니다."
640,412a137dc8c78b56,normal,Header 셀에 출력할 텍스트는 아래 방법으로 설정가능합니다.
641,0fa0b5057f3ca4ee,unordered_list,"* 셀을 더블 클릭한 후, '값 수정' 대화 창에 텍스트를 입력합니다.
* 혹은, <strong><code><kbd>setHeaderValue( headerId , value )</kbd></code></strong> API를 통해서 동적으로 변경할 수도 있습니다."
642,338bd77552353c23,normal,"GridView에 <code>subTotal</code>을 추가하여, 특정 컬럼에 속한 일부 데이터의 통계값을 계산할 수 있습니다."
643,457d47b57d2181ac,ordered_list,"# GridView 우클릭 후, <strong>Add SubTotal</strong> 메뉴를 선택합니다."
644,c5dd616b98d7c97a,ordered_list,"# Outline 뷰의 Design 탭에서 추가한 <code>subTotal</code>을 선택한 후, <code>targetColumnID</code> 속성 값으로 <code>subTotal</code> 통계값의 기준이 될 컬럼을 지정합니다."
645,29edb9cccacac22a,ordered_list,"# <code>subTotal</code>을 표시할 컬럼의 <code>inputType</code>을 <code>""expression""</code>으로 지정합니다.
# <code>subTotal</code>을 표시할 컬럼의 <code>expression</code> 속성 값을 정의합니다. <code>subTotal</code> 컬럼이 지원하는 통계 계산식을 사용하십시오."
646,41281a805d2c61aa,ordered_list,"# 다음은 city 컬럼(<code>""col1""</code>)을 기준으로 sales 컬럼(<code>""col4""</code>)의 소계(<code>sum(""col4"")</code>)를 계산하여 <code>subTotal</code>에 표시한 모습입니다."
647,b2f3fc63a4b9faff,normal,<code>subTotal</code> 컬럼의 <code>expression</code> 속성에 사용할 수 있는 계산식은 다음과 같습니다.
648,65202b950706f5c0,note,"<strong>주의</strong>

GridView의 <code>subTotal</code> 및 <code>total</code> 컬럼이 지원하는 사용하는 계산식과 일반 컬럼이 지원하는 계산식은 서로 차이가 있습니다. (<a class=""reference text"" href=""#eb5cb845937922a5"">inputType=""expression""</a> 참고.)"
649,8c92bdcaf185b7f8,normal,"<kbd><strong>setSubtotalVisible(<span class=""r_red_highlight_span"">true</span>);</strong></kbd> 함수를 이용하여 subTotal을 <strong><span class=""r_red_highlight_span"">표시</span></strong>할 수 있습니다."
650,609ecca378f6c136,normal,"<kbd><strong>setSubtotalVisible(<span class=""r_blue_span"">false</span>);</strong></kbd> 함수를 이용하여 subTotal을 <span class=""r_blue_span""><strong>숨길</strong></span> 수 있습니다."
651,51647efd02b4e616,normal,"<code>subtotalStyleFormatter</code> 속성으로 <code>subtotal</code> 데이터에 적용할 CSS 클래스를 판단하는 함수를 지정할 수 있습니다. 즉, 해당 함를 통해 <code>subtotal</code> 데이터에 따라 서로 다른 CSS를 적용할 수 있습니다."
652,e45f308c06e509ab,normal,"<code>subtotalStyleFormatter=""scwin.styleFormatter""</code>인 경우, 아래와 같이 <code>scwin.styleFormatter()</code> 함수를 정의하여, <code>subtotal</code> 데이터에 따라 서로 다른 CSS 클래스를 적용할 수 있습니다. 아래 예시의 경우, <code>subtotal</code> 데이터가 5000보다 크면 <code><span class=""r_red_highlight_span"">w2subtotalbig</span></code> 클래스가 추가되고, <code>subtotal</code> 데이터가 500이하이면<code> <span class=""r_blue_span"">w2subtotalsmall</span></code> 클래스가 적용됩니다."
653,12c11de28c6829e3,normal,<code>subtotalStyleFormatter</code> 속성 값으로 지정한 함수는 subtotal 컬럼의 ID(<code>subtotalColumnId</code>)를 세번째 인자로 받습니다. 이 세번째 인자를 사용하여 각 <code>subtotal</code> 컬럼마다 서로 다른 CSS 스타일을 적용할 수 있습니다.
654,5535c32b0987754e,normal,"GridView에 <code>footer</code>를 추가하여, 특정 컬럼 데이터의 통계값을 계산할 수 있습니다."
655,68355908d07b8a19,ordered_list,"# GridView 우클릭 후, <strong>Insert Footer</strong> 메뉴를 선택합니다."
656,647f9dbadbce6531,ordered_list,"# <code>footer</code>를 표시할 컬럼의 <code>inputType</code>을 <code>""expression""</code>으로 지정합니다.
# <code>footer</code>를 표시할 컬럼의 <code>expression</code> 속성 값을 정의합니다. <code>footer</code> 컬럼이 지원하는 통계 계산식을 사용하십시오."
657,1a933afd6567475b,ordered_list,"# 다음은 sales 컬럼(<code>""col4""</code>)의 합계(<code>sum(""col4"")</code>)를 <code>footer</code>에 표시한 모습입니다."
658,a33194cea3ed00fd,normal,<kbd>footerSummaryAuto</kbd> 속성을 사용하면 아래와 같이 푸터 요약을 자동 생성할 수 있습니다.
659,30e528bc78ef69f9,normal,"footer 컬럼의 <code>inputType</code>을 <code>""expression""</code>으로 지정한 후 <code>expression=SUM(""column"") </code>혹은 <code>expression=AVG(""column"")</code> 설정을 추가하여 해당 컬럼의 합계 혹은 평균을 계산할 수 있습니다."
660,b0294d36f4ee9e51,normal,"합계나 평균을 구하는 컬럼의 데이터가 소숫점 숫자일 경우, JavaScript의 부동 소수점 오류를 처리하기 위해 아래와 같은 설정이 필요합니다."
661,37fd22083747cdb1,ordered_list,"# 바디의 컬럼 (<strong><span class=""r_italic_span"">gridView.column</span></strong>) ­ <code>dataType=""<span class=""r_red_highlight_span"">bigDecimal</span>""</code>
# 푸터의 컬럼 (<strong><span class=""r_italic_span"">gridView.column</span></strong>) ­ <code>dataType=""<span class=""r_red_highlight_span"">bigDecimal</span>""</code>
# <strong><span class=""r_italic_span"">config.xml</span></strong> 파일에 설정 추가 (하단 참조)"
662,7670c4dbaf214ff0,normal,"단, 위의 처리는 모두 2020년 11월 전에 릴리즈된 엔진에 해당합니다. 2020년 11월 이후 출시된 에진의 경우 GridView의 SUM 및 AVG 연산에 대해 JavaScript의 부동 소수점 오류를 자동 처리합니다"
663,286bfdf41ddd919b,normal,"<code>getFooterData()</code> 함수를 사용하면, footer 컬럼의 ID 혹은 인덱스를 지정하여 해당 footer 값을 확인할 수 있습니다."
664,3e52119855fff7aa,normal,각 컬럼의 <kbd>inputType</kbd>을 서로 다르게 지정할 수 있습니다.
665,2de965864ee2f590,normal,"<strong><code><kbd>inputType</kbd></code></strong>에 따라 Body 칼럼에 지정할 수 있는 속성이 달라집니다. 좀 더 자세한 정보는 <a class=""link"" href=""https://docs.inswave.com/websquare/websquare.html?w2xPath=/support/api/ws5_sp4/api.xml"">API 가이드</a>에서 확인하십시오."
666,8e01c33a7e171393,normal,열의 <kbd>inputType</kbd>의 종류는 다음과 같습니다. 기본 값은 <kbd>text</kbd>입니다.
667,196280769688539a,note,"<strong><kbd>lazy=""<span class=""r_blue_span"">false</span>""</kbd>를 설정하는 이유 </strong>

<kbd>typeGetter</kbd>로 지정한 함수는 GridView가 렌더링될 때 로딩해야 해당 함수에 의해 GridView의 <kbd>inputType</kbd>을 동적으로 변경할 수 있습니다."
668,e13792a6fa0caef6,normal,<code>typeGetter</code>로 지정할 함수의 인자와 반환값은 아래와 같습니다.
669,e744d5c4760bb44f,normal,"GridView의 컬럼이 <code>inputType=""custom""</code>인 경우, <code>setCellInputTypeCustom=""true""</code> 설정과 <code>setCellInputType()</code> 함수를 사용하여 해당 컬럼에 속한 특정 셀의 <code>inputType</code>을 동적으로 변경할 수 있습니다."
670,e1d407b881f82d4d,normal,"<code>viewType=""icon""</code> 및 <code>viewTypeIconImage=""true""</code> 설정을 사용할 경우, GridView의 autoComplete 상자에 화살표 이미지가 표시됩니다. 이 경우, <code>directOpen=""true""</code> 설정을 추가하면 화살표 이미지 클릭만으로 아이템 목록을 바로 펼칠 수 있습니다."
671,6987f3697add986d,normal,"<code>directOpen=""false""</code>인 경우, 화살표 이미지를 클릭하면 해당 셀만 선택합니다. 화살표 이미지를 더블 클릭해야 아이템 목록이 펼쳐집니다."
672,827ea5da69a0b873,normal,"<code>setDisplayMode()</code> 및 <code>setDelimiter()</code> 함수를 사용하면 그리드뷰 컬럼(<code>gridView.column</code>)의 <code>displayMode</code> 및 <code>delimiter</code> 속성을 동적으로 변경할 수 있습니다. 단, 아래의 <code>inputType</code> 컬럼에 한해 지원합니다."
673,5dee96e55014422a,unordered_list,"* <code>inputType=""autoComplete""</code>
* <code>inputType=""checkcombobox""</code>
* <code>inputtype=""select""</code>"
674,4669725865c63109,normal,"<kbd>dataType=""date""</kbd> <kbd>inputType=""calendar""</kbd> 컬럼의 경우, <kbd>setColumnIoFormat(options);</kbd> 함수를 이용하여 (1) 날짜 입력 형식 (2) 입력란의 날짜 출력 형식 (3) 달력의 날짜 출력 형식을 지정할 수 있습니다."
675,d7518bfcc382d0f4,normal,"<code>inputType=""checkbox""</code> 컬럼의 경우, 다른 칼럼의 값을 조합하여 CheckBox 라벨 값으로 사용할 수 있습니다. <code>checkboxLabelColumn</code> 속성으로 조합할 GridView 바디 컬럼의 ID를 지정하십시오."
676,09ad6436f50c1118,normal,"헤더가<code> inputType=""checkbox""</code>의 경우, 헤더의 체크박스를 통해 전체 셀을 선택할 때 <code>disabled</code>이거나 <code>readOnly</code> 상태의 셀을 셀 상태 판단에 포함할지 여부를 결정할 수 있습니다."
677,23bd593ae48745d2,normal,"아래의 예제에서 두 행은 선택 상태가 아니고 이 두 행의 상태를 셀 상태 판단에 포함(<code>""include""</code>)됩니다. 그 결과, 두 셀을 포함하면, 모든 셀이 선택된 것으로 볼 수 없기 때문에 부분 선택 기호가 표시되었습니다."
678,afa0385d21fe6207,normal,"아래의 예제에서 두 행은 선택 상태가 아니고 이 두 행의 상태는 셀 상태 판단에서 제외(<code>""exclude""</code>)됩니다. 그 결과 두 셀을 제외한 모든 셀이 선택된 것으로 볼 수 있기 때문에 전체 선택 기호가 표시되었습니다."
679,7fc7c20bd7449d1d,normal,"GridView의 <code>inputType=""checkbox""</code> 컬럼에서 일부 행들을 선택한 후, 헤더의 체크박스를 선택할 경우, 전체 행들의 체크박스를 모두 선택할 것인지 혹은 모두 선택 해제할 것인지를 결정할 수 있습니다. 모두 선택할 경우 <code>particalCheckNextClick</code> 속성을 <code>""check""</code>로, 모두 선택 해제할 경우 <code>""uncheck""</code>로 선택해야 합니다."
680,ca527799793a3aea,normal,"<kbd>inputType=""checkbox""</kbd> 혹은 <kbd>inputType=""radio""</kbd> 칼럼의 경우 아래 함수를 이용하여 체크한 행의 데이터를 확인할 수 있습니다."
681,b2d5a93f9c58c269,unordered_list,"* <kbd>getCheckedIndex();</kbd>
* <kbd>getCheckedData();</kbd>
* <kbd>getCheckedJSON();</kbd>
* <kbd>getCheckedXML();</kbd>"
682,600ecd1eb2bfe403,normal,"<kbd>inputType=""checkbox""</kbd> 컬럼을 추가한 후, 해당 컬럼에서 체크된 행들을 삭제/제거(delete/remove)할 수 있습니다."
683,5e3a6ac06ca33d77,definition_list,"관련 API 
<kbd>inputType=“checkbox”</kbd> (gridView.column)
+ <kbd>rowStatusVisible=“true”</kbd> (gridView)
+ <kbd>getCheckedIndex(“colID”);</kbd> (gridView)
+ <kbd>ignoreStatus=“true”</kbd> (dataList)
+ <kbd>deleteRows(Arr);</kbd> (dataList)
+ <kbd>removeRows(Arr);</kbd> (dataList)"
684,68b609882db00c78,normal,"GridView의 각 행을 메뉴 형식으로 접고 펼수 있는 드릴다운 형태의 컬럼을 설정할 수 있습니다. 단, 메뉴단계에 대한 데이터를 담고 있는 컬럼이 존재해야 하며, 해당 컬럼을 <code>depthColumn</code> 속성으로 지정해야 합니다. 이 외에도 관련된 속성은 아래와 같습니다."
685,709efc798f82a642,normal,"<code>drilldownToggle=""enter""</code> 설정을 추가하면, <code>inputType=""drilldown""</code> 컬럼의 목록을 Enter 키를 통해 열고 닫을 수 있습니다."
686,405e0a1f38a5f89f,normal,"단, 모바일 환경에서는 <code>drilldownToggle=""enter""</code> 설정 외에 <code>hammerEnabled=""true""</code> 설정을 추가하십시오. 이 경우, <code>inputType=“drilldown”</code> 컬럼에서 목록 기호가 있는 셀을 터치하여 목록을 열고 닫을 수 있습니다."
687,68d087dffb3dd033,normal,"일반 컬럼, <code>subTotal</code>, 혹은 <code>footer</code> 컬럼의 경우 <code>inputType</code>을 <code>""expression""</code>으로 지정한 후, 직접 계산식을 정의하여 사용할 수 있습니다."
688,1208fc679720b779,normal,"<code>inputType=""radio""</code> 컬럼의 경우, 다른 칼럼의 값을 조합하여 Radio 라벨 값으로 사용할 수 있습니다. <code>radioLabelColumn</code> 속성으로 조합할 GridView 바디 컬럼의 ID를 지정하십시오."
689,de3fff232bef4b35,normal,"<code>inputType=""spinner""</code> 컬럼의 <code>viewType=""icon""</code> 설정을 추가하면 해당 컬럼의 셀에 화살표 아이콘을 표시할 수 있습니다."
690,7b56f8a181ea4d42,normal,"<code>gridView.column</code>의 <code>inputType</code>이 아래 중 하나이고, DataList와 바인딩하여 선택 항목을 표시할 경우, <code>setColumnVisibleColumn()</code> 함수를 사용하여 일부 선택 항목을 숨길 수 있습니다."
691,3e53c2e016e8ed01,unordered_list,"* <code>inputType=""autoComplete""</code>
* <code>inputType=""checkbox""</code>
* <code>inputType=""checkcombobox""</code>
* <code>inputType=""radio""</code>
* <code>inputType=""select""</code>"
692,eac960007838296c,normal,"숨길 항목은 GridView 컬럼과 바인딩된 DataList의 특정 컬럼의 값을 기준으로 결정할 수 있습니다. 아래와 같이 <code>setColumnVisibleColumn()</code> 함수의 파라미터로 GridView 컬럼과, DataList의 컬럼, 그리고 숨김 처리 조건으로 사용할 DataList 컬럼의 값을 명시하십시오."
693,3d4b4f2470de8f49,normal,"<code>gridView.column</code>의 <code>inputType</code>이 아래 중 하나이고, DataList와 바인딩하여 선택 항목을 표시할 경우, <code>setColumnEnableColumn()</code> 함수를 사용하여 일부 선택 항목을 비활성화할 수 있습니다."
694,2829f1633ba0226d,unordered_list,"* <code>inputType=""autoComplete""</code>
* <code>inputType=""checkbox""</code>
* <code>inputType=""checkcombobox""</code>
* <code>inputType=""radio""</code>
* <code>inputType=""select""</code>"
695,7a9b0fba25f33397,normal,"비활성화할 항목은 GridView 컬럼과 바인딩된 DataList의 특정 컬럼의 값을 기준으로 결정할 수 있습니다. 아래와 같이 <code>setEnableColumn()</code> 함수의 파라미터로 GridView 컬럼과, DataList의 컬럼, 그리고 비활성화 조건으로 사용할 DataList 컬럼의 값을 명시하십시오."
696,ec4559e3369983a8,normal,GridView의 각 컬럼을 선택한 후 해당 컬럼의 속성을 설정할 수 있습니다.
697,74da897a4177e0d2,normal,<kbd>setDataType</kbd> 및 <kbd>getDataType</kbd> 함수를 사용하여 GridView 컬럼의 <kbd>dataType</kbd>을 변경할 수 있습니다.
698,753a199c189155d2,normal,"<strong><kbd>hidden</kbd></strong> 속성을 이용하여 열을 숨길 수 있습니다. 또한, <strong><code><kbd>setColumnVisible(colIndex, colVisible)</kbd></code></strong> API를 사용하여 열 숨기기 기능을 동적으로 사용할 수 있습니다."
699,0ae27fd5739b17a1,normal,"또한, <strong><code><kbd>setColumnVisible(colIndex, colVisible)</kbd></code></strong> API를 사용하여 열 숨기기 기능을 동적으로 사용할 수 있습니다."
700,77e1fd4966b8491b,normal,"<strong><kbd>textAlign</kbd> </strong>속성으로 텍스트를 좌, 우, 중앙으로 정렬할 수 있습니다. 기본 값은 중앙(<strong><kbd>center</kbd></strong>)입니다."
701,2876da6718614a68,normal,"<strong><span class=""r_italic_span"">gridView.colum</span></strong>의 <kbd>displayFormat</kbd> 속성을 사용하여 해당 컬럼의 데이터 표시 형식을 설정할 수 있습니다."
702,5dcce91a3b3d9d3e,normal,"<strong><span class=""r_italic_span"">gridView.colum</span></strong>의 <kbd>displayFormatter</kbd> 속성으로 함수명을 지정한 후 해당 함수를 별도로 정의하여, 해당 컬럼의 데이터 표시 형식을 설정할 수 있습니다."
703,ece5bf21b83f465b,normal,"<strong><span class=""r_italic_span"">gridView.colum</span></strong>의 <kbd>customFormatter</kbd> 속성으로 함수명을 지정한 후 해당 함수를 별도로 정의하여, 해당 컬럼의 데이터 표시 형식을 설정할 수 있습니다."
704,5c49eb795d2680b2,normal,"단, 해당 컬럼의 <kbd>inputType</kbd>이 아래와 같은 경우에만 유효합니다."
705,664f062a64d72426,unordered_list,"* <kbd>""text""</kbd>
* <kbd>""link""</kbd>
* <kbd>""textImage""</kbd>
* <kbd>""textarea""</kbd>
* <kbd>""select""</kbd>
* <kbd>""expression""</kbd>
* <kbd>""spinner""</kbd>"
706,0b11aa212695cb79,normal,<kbd>setCellDisplayFormatter</kbd> 및 <kbd>setCellCustomFormatter</kbd> 함수를 사용하여 각 셀의 <kbd>displayFormatter</kbd> 및 <kbd>customerFormatter</kbd> 속성을 동적으로 변경할 수 있습니다.
707,9dd48b90fb69c9a0,normal,"<code>dataList.column</code>의 <code>importFormatter</code> 속성으로 사용자 정의 함수를 지정한 후, 해당 함수를 통해 컬럼의 데이터를 변경할 수 있습니다."
708,04df0b966c1904f1,normal,"GridView를 우클릭한 후 <strong>Event</strong> ­ <span class=""r_italic_span"">추가할 이벤트</span>를 선택 후, 해당 로직을 추가하여 이벤트를 추가할 있습니다."
709,7701d2d58c62498b,normal,"<code>sortable=""true""</code> 속성 설정이 적용된 헤더를 클릭하거나 더블 클릭하여 정렬을 수행할 경우 <code>onsort</code> 이벤트가 발생합니다."
710,0b9a272f9814d144,normal,"GridView 셀을 클릭할 경우 <code>oncellclick</code> 이벤트가 발생하며 클릭된 셀의 행 인덱스, 열 인덱스, 컬럼 ID를 인자로 전달합니다."
711,9d921eef6f4ea9a1,normal,"GridView 셀을 더블-클릭할 경우 <code>oncelldblclick</code> 이벤트가 발생하며 클릭된 셀의 행 인덱스, 열 인덱스, 컬럼 ID를 인자로 전달합니다."
712,f38ae1d6a4676471,normal,"<code>onscrollstart </code>이벤트는 세로 스크롤이 그리드뷰 상단에 닿을 때 발생합니다. <code>alwaysTriggerScrollStart=""true""</code> 설정을 적용하면 세로 스크롤이 상단에 닿을 때마다 <code>onscrollstart</code> 이벤트가 발생합니다."
713,ab411024f5ecec2c,normal,"<code>oncontextopen</code> 이벤트는 GridView의 컨텍스트 메뉴가 표시될 때 발생하며, 반환하는 값은 아래와 같습니다."
714,451e72ce7c4a325a,unordered_list,"* <code>rowIndex</code> : 클릭된 셀의 행 인덱스. (헤더인 경우 <strong><span class=""r_italic_span"">-1</span></strong>을 반환.)
* <code>colIndex</code> : 클릭된 셀의 열 인덱스.
* <code>focusedCell</code> : 포커스된 셀의 좌표를 담은 1차원 배열.
* <code>info.isHeader</code> : 클릭된 셀이 헤더인지 여부.
* <code>info.headerId</code> : 클릭된 셀이 헤더일 경우, 헤더의 ID."
715,ceb817962cd5a55e,normal,<kbd>fixedColumnScrollHidden</kbd> 속성 설정을 통해 고정된 영역에는 스크롤을 표시하지 않을 수 있습니다.
716,a783207212f98347,normal,"<code>rowNumVisible=<span class=""r_red_highlight_span"">""true""</span></code> 속성 설정을 통해 GridView 각 행의 번호를 표시하는 컬럼을 사용할 경우, 아래 속성들을 설정하여 행 번호 표시 컬럼의 헤더 값과 폭, 배경색 또한 지정할 수 있습니다."
717,d031864bf31ff6cb,unordered_list,"* <code>rowNumHeaderValue</code> (헤더 값)
* <code>rowNumWidth</code> (폭)
* <code>rowNumBackgroundColor</code> (배경색)"
718,e834e6cf7d5d5e9f,normal,"<code>rowNumVisible=<span class=""r_red_highlight_span"">""true""</span></code> 속성 설정을 통해 GridView 각 행의 번호를 표시하는 컬럼을 사용할 경우, 아래 속성들을 설정하여 행 번호 표시 컬럼의 헤더 값과 폭, 배경색 또한 지정할 수 있습니다."
719,0845d4602eb28afc,unordered_list,"* <code>rowNumHeaderValue</code> (헤더 값)
* <code>rowNumWidth</code> (폭)
* <code>rowNumBackgroundColor</code> (배경색)"
720,bbe5d963a80d313d,normal,"GridView의 헤더를 드래깅하여 해당 컬럼을 이동할 수 있습니다. 드래깅 시 헤더의 <kbd>value</kbd>로 지정한 값이 툴팁으로 나타납니다. 세로 틀로 고정된 컬럼의 경우, 드래깅 가능 여부를 별도로 지정할 수 있습니다."
721,1cc101ea3f71ccbf,definition_list,"관련 API
<kbd>columnMove=""true""</kbd>: 해당 컬럼의 이동을 허용.
+ <kbd>fixedColumn</kbd> &amp; <kbd>fixedColumnNoMove</kbd>: 세로 틀 고정된 컬럼의 드래깅 허용 여부.
세로 틀 고정된 컬럼의 드래깅
<kbd>fixedColumn</kbd>: 세로 틀 고정 대상 컬럼을 지정. 
+ <kbd>columnMove=""true""</kbd>: 틀 고정된 컬럼도 <kbd>columnMove=""true""</kbd>인 경우 드래깅을 통해 이동 가능. 
+ <kbd>fixedColumnNoMove=""true""</kbd>: <kbd>fixedColumn</kbd>을 통해 고정된 컬럼의 경우 <kbd>columnMove=""true""</kbd> 설정을 적용받지 않음. 즉, 드래깅을 통한 이동 불가능."
722,ef478d38c4ef4a11,normal,"GridView와 DataList가 바인딩된 경우, <kbd>insertRow();</kbd> 및 <kbd>removeRows();</kbd> 함수를 사용하여 행을 새로 추가하거나 삭제할 수 있습니다."
723,3bc9f47a5ebdd3bc,normal,"다음은 <code>visibleRowNum</code> 속성 값을 <code>""8""</code>로 지정하여, 8개의 행만 GridView에 표시한 모습입니다."
724,a0619db8a18d28e5,normal,"버튼은 Trigger 혹은 다른 컴포넌트로 나타낼 수 있습니다. 이들 컴포넌트는 다른 컴포넌트와 연계하여 사용할 수 있으며, 이벤트를 사용하여 그리드를 조작할 수 있습니다."
725,ec8cad60f8a2161b,normal,"<code>setRowBackgroundColor()</code> 함수를 사용하여, 필터에 의해 숨겨진 행을 포함한 특정 행의 배경색을 동적으로 변경할 수 있습니다."
726,770cc784bf94b9ac,normal,"동일한 GridView 내에서, 혹은 서로 다른 GridView 사이에서 한 개 이상의 행을 드래그-앤-드롭을 통해 이동할 수 있습니다."
727,1ee2e6e58036e120,definition_list,"관련 속성 및 함수
<code>dataDragDrop</code> 및 함수 (드래그-앤-드롭 허용)
+ <code>dragDisplayColumn</code> (툴팁에 표시할 컬럼 ID 지정)
+ <code>dragStartFunction</code> / <code>dragEndFunction</code> (드래깅 시작/종료 시 실행할 함수 지정)
+ <code>useShiftKey</code> (Shift 키 사용을 통한 행 선택 허용)
+ <code>setDrillDownDragDrop()</code> (<code>inputType=""drilldown""</code> 컬럼을 포함한 행의 이동 허용)
+ <code>dataDragSelect</code> (여러 개의 셀들을 드래깅을 통해 선택)
+ <code>dataDragSelectAutoScroll</code> (드래깅 시 마우스가 그리드뷰를 벗어나도 자동으로 스크롤을 수행)"
728,027066ce4c8ff444,normal,"동일한 GridView 내에서, 혹은 서로 다른 GridView 사이에 GridView 행 전체를 드래그-앤-드롭하여 이동할 경우, <code>dataDragDrop=""true""</code>로 설정하십시오. Shift 키를 사용할 경우, <code>useShiftKey=""true""</code> 설정도 추가합니다."
729,515ec1f57610e772,normal,"드래깅 시작/종료 시 실행할 함수는 <code>dragStartFucntion</code> 및 <code>dragEndFunction</code> 속성을 통해 지정할 수 있습니다. 단, 해당 함수는 직접 정의해야 합니다."
730,63c56a7fae7d288c,normal,"<code>inputType=""drilldown""</code> 컬럼을 포함한 행들을 GridView 내에서, 혹은 서로 다른 GridView 사이에서 드래깅하여 이동할 수 있습니다. <code>setDrillDownDragDrop()</code> 함수를 사용하십시오. 단, GridView에는 <code>dataDragDrop=""true""</code> 설정이 있어야 합니다."
731,8b7a0384598363e5,normal,"<code>dataDragDropStatus=""true""</code> 설정을 추가할 경우, 하나의 GridView 내에서 드래그-앤-드롭으로 행을 이동할 때<code>rowStatus</code>를 유지할 수 있습니다. <code>dataDragDropStatus</code> 속성을 기본 값이 <code>""false""</code>로 설정할 경우, 드래그-앤-드롭으로 행이 이동되면 <code>rowStatus</code>가 ""C""로 변경됩니다."
732,acb5868719d43039,note,"단, <code>dragEndFunction</code> 함수를 지정하여 사용하는 경우에는 해당하지 않습니다. <code>dragEndFunction</code>으로 지정된 함수에서 직접 처리해야 합니다."
733,56a5f4c45f2d3487,normal,"<code>dataDragDrop=""true""</code> 속성 설정을 통해 GridView의 행 이동을 허용할 경우, <code>dataDragDropOther=""true""</code> 설정을 추가하면, 다른 GridView로의 행 이동만 허용할 수 있습니다. 즉, 동일한 GridView 내에서의 행 이동은 금지할 수 있습니다."
734,02d6c390f20a166f,normal,"드래깅으로 셀을 선택할 경우, 마우스가 GridView 밖을 벗어나면 마우스 방향에 따라 그리드뷰가 상하, 좌우, 대각선 방향으로 자동 스크롤링됩니다."
735,5d199259295bf610,normal,"속성 기본값 <kbd>width</kbd>와 <kbd>style = ""height""</kbd>를 통해 셀의 너비와 높이를 조절할 수 있습니다. (예: <kbd>width=""70""</kbd> <kbd>style=""height:20px""</kbd>)"
736,c24a8d4540a02285,note,header가 있는 경우나 셀 병합에 따라 특정 셀만이 그 크기를 결정할 수도 있습니다.
737,7f4ae8d1e7967330,normal,새로 추가되는 셀의 기본 값은<strong> <kbd>defaultValue</kbd></strong>를 통해 설정할 수 있습니다.
738,5a0cf48e700bdaa5,definition_list,"셀에 데이터가 바인되지 않았을 경우 기본값이 표시됩니다. 
XML 데이터: 열의 id와 같은 노드명이 없는 경우
+ JSON 데이터: 열의 id와 같은 속성 이름이 없는 경우"
739,9e939f76f6224631,normal,아래와 같이 <strong><kbd>defaultValue</kbd></strong> 속성을 정의하십시오.
740,3db0903bb1ac6647,normal,"<code>useShiftKey=""true""</code> 및 <code>dataDragSelect=""true""</code> 속성을 설정하면 마우스 드래깅 혹은 Shift 키를 통해 여러 개의 셀을 선택하고, 선택한 여러 셀들을 한꺼번에 삭제할 수 있습니다."
741,76a32780f8279ebc,normal,"드래깅으로 셀을 선택할 경우, 마우스가 GridView 밖을 벗어나면 마우스 방향에 따라 그리드뷰가 상하, 좌우, 대각선 방향으로 자동 스크롤링됩니다."
742,b9b4e82ad49372ec,normal,"<code>noSelect=""true""</code> 속성 설정을 통해 마우스 드래깅을 통한 셀 텍스트 선택을 방지할 수 있습니다."
743,75fcb3a5e3a01aef,normal,"<code>gridView.column</code>의 <code>blockSelect </code>속성을 사용하면, 해당 컬럼의 셀들이 사용자 선택되는 것을 금지할 수 있습니다."
744,2e00bd8eb662aa5d,normal,"GridView의 <code>setBlockSelect()</code> 함수를 사용하면 각 컬럼의 셀 선택을 막는 <code>blockSelect</code> 속성 값을 동적으로 설정하여, 셀 선택을 동적으로 차단할 수 있습니다."
745,327f99bd51fbaa6c,normal,"헤더, 해당 셀의 데이터, <kbd>label</kbd>, <kbd>inputType</kbd> 등을 조합하여 각 셀의 <kbd>&lt;td&gt;</kbd>에 <kbd>title</kbd> 속성을 추가합니다."
746,8f72c9cf4623ba89,definition_list,"관련 API
<kbd>titleAuto</kbd>"
747,fd5b77a39a90915b,normal,해당 셀의 <kbd>inputType</kbd>에 따른 타이틀 생성 규칙은 아래와 같습니다.
748,4ef2398fa8bf963e,definition_list,"<kbd>""text""</kbd> / <kbd>""link""</kbd> / <kbd>""button""</kbd> 
(1) 헤데 셀에 데이터가 있을 때: ""헤더 컬럼의 title 값 + 해당 셀의 데이터""
+ (2) 헤데 셀에 데이터가 없을 때: ""헤더 컬럼의 title 값 + 해당 컬럼의 inputType"""
749,75817cff285b0ffc,definition_list,"<kbd>""check""</kbd> / <kbd>""radio""</kbd>
(1) 헤데 셀에 label 값이 있을 때: ""선택한 값 + label 값""
+ (2) 헤데 셀에 label 값이 없을 때: ""선택한 값 + 해당 컬럼의 inputType"""
750,a7499f72a36c65c0,definition_list,"<kbd>""select""</kbd> 
(1) 헤더 셀의 label 값이 있을 때: ""헤더 컬럼의 title 값 + label 값""
+ (2) 헤더 셀의 label 값이 없을 때: ""헤더 컬럼의 title 값 + 해당 컬럼의 inputType"""
751,8ffe21e4132e1a33,caution,"<strong>제약 사항</strong>

아래와 같은 경우 <kbd>titleAuto</kbd> 속성을 지원하지 않음. 
이 경우 각 셀의 <kbd>title</kbd> 속성을 직접 설정해야 함. 
(1) 헤더 또는 바디의 셀들이 합쳐진 경우
(2) 헤더가 두 줄인 경우
(3) <kbd>inputType=""text""</kbd>를 제외한 다른 경우"
752,c0052d3d0e75382f,normal,<code>setCellClass()</code> 함수를 사용하여 특정 GridView 셀에 지정한 스타일 클래스를 적용할 수 있습니다.
753,3a62fa825925667b,normal,"<code>setCellDisabled()</code> 함수를 사용하여, 필터에 의해 숨겨진 셀을 포함한 특정 셀을 동적으로 비활성화할 수 있습니다."
754,f84707972ba53783,normal,"<code>setCellBackgroundColor()</code> 함수를 사용하여, 필터에 의해 숨겨진 셀을 포함한 특정 셀의 배경색을 동적으로 설정할 수 있습니다."
755,50db78a776f01418,normal,"<code>cellStatusVisible=""true""</code> 속성 설정을 적용하면, 셀 데이터가 추가, 수정, 삭제될 경우, 우측 상단에 아이콘을 표시할 수 있습니다. 이 때, <code>cellStatusIconPosition</code> 속성을 사용하여 해당 아이콘을 표시할 위치를 지정할 수 있습니다."
756,7eff1fda1dbc1f7b,normal,그리드는 여러가지 키를 통하여 제어할 수 있습니다.
757,55cf7e11f24d6d46,unordered_list,"* <strong>셀 포커스 이동</strong>: 상하좌우 방향키

* <strong>편집 관련한 포커스 이동</strong>: Tab, Enter, Shift+Tab, Shift+Enter키

* <strong>포커스된 셀을 수정 모드로 전환</strong>: Backspace, Insert 키를 포함한 문자키

* <strong>수</strong><strong>정 모드의 셀에서 값 선택 및 문자간 이동</strong>: 상하좌우 방향키

* <strong>체크박스나 라디오의 값 토글</strong>: Space 키"
758,96dba215cd0e988a,normal,"그 밖에도 <kbd>Home</kbd>, <kbd>End</kbd>, <kbd>PageUp</kbd>, <kbd>PageDown</kbd> 키 등을 사용할 수 있습니다."
759,8e1d0a6bbfca3344,normal,"사용자가 GridView 상에서 셀을 선택할 경우, 선택된 셀 및 해당 셀이 속한 행을 포커싱하는 방법을 설정할 수 있습니다. <code>focusMode</code>, <code>selectedCellColor</code>, <code>selectedRowColor</code> 속성을 아래와 같이 설정하십시오."
760,e716e7566ea347e2,unordered_list,"* <code>focusMode</code>
** <code>""cell""</code> (기본 값) : 셀을 선택. 
** <code>""row""</code> : 행을 선택. 
** <code>""both""</code> : 셀과 행을 모두 선택. 
** <code>""none""</code> : 아무 것도 선택하지 않음. 
* <code>selectedCellColor</code> : 선택된 셀의 배경색. (예: <code>""yellow""</code>)
* <code>selectedCellColor</code> : 선택된 행의 배경색. (예: <code>""pink""</code>)"
761,e259a913052c1bd3,normal,"포커스가 GridView의 맨 왼쪽, 맨 오른쪽, 상단, 혹은 하단에 있을 경우 이후 포커스 이동 방식을 설정할 수 있습니다. <code>focusFlow</code> 속성을 아래와 같이 설정하십시오."
762,6740c02355db8fc3,unordered_list,"* <code>""default""</code> (기본 값) : 맨 좌측, 맨 우즉, 상단, 하단에서 더 이상 이동하지 않음.
* <code>""linear""</code> : 맨 좌측/우즉 혹은 상단/하단 이후, 위/아래 행 혹은 이전/이후 컬럼으로 이동."
763,a7a9c4fbec0a80d9,note,"<kbd>inputType=""autocomplete""</kbd>는 미지원."
764,bea0eb09e0c50468,normal,사용자가 셀에서 Enter 키를 입력할 경우 포커스가 이동하는 방향 및 편집 모드 진입 여부를 설정할 수 있습니다. <code>enterKeyMove</code> 속성을 아래와 같이 설정하십시오.
765,62caf5181b44af91,unordered_list,"* <code>""down""</code> (기본 값) : Enter 키 입력 시 아래쪽 셀로 이동.
* <code>""right""</code> : Enter 키 입력 시 오른쪽 셀로 이동.
* <code>""none""</code> : Enter 키를 입력해도 포커스 이동이 없음.
* <code>""edit""</code> : Enter 키 입력 시 편집 모드로 이동.
* <code>""editRight""</code> : 편집 모드로 진입한 후, 다시 Enter 키를 입력하면 오른쪽 셀로 이동. 
* <code>""editDown""<strong> </strong></code>: 편집 모드로 이동한 후, 다시 Enter 키를 입력하면 아래쪽 셀로 이동."
766,93be71676f758879,normal,<code>copyOption</code> 속성을 설정하여 바인딩된 DatatList 값 혹은 현재 화면에 표시된 값 중 어떤 값을 복사할 수 있습니다.
767,19374ab337545b88,definition_list,"<code>copyOption</code>
<code>""dataList""</code> (기본 값) : 바인딩된 DatatList 값을 복사. 
+ <code>""display""</code> : 현재 화면에 표시된 값을 복사"
768,1cb73431e810ef85,normal,<code>copyType</code> 속성을 설정하여 셀 데이터를 복사하는 방식을 결정할 수 있습니다.
769,aea97d42326130c1,definition_list,"<code>copyType</code>
<code>""default""</code> (기본 값) : 포커싱된 셀 전체를 복사. 여러 셀을 복사할 경우, 여러 셀에 걸쳐 복사됨.
+ <code>""native""</code> : 드래깅한 텍스트만 복사. 드래깅된 텍스트는 하나의 셀에만 복사됨."
770,5272da7a784ed2ee,normal,"<code>dataDragDrop=""true""</code> 혹은 <code>useShiftKey=""true""</code> 속성 설정을 사용할 경우, 드래깅이나 Shift 키를 사용하여 여러 개의 셀들을 선택하고, 선택한 셀을 다른 GridView로 복사할 수 있습니다."
771,2333ce6e3eccbb06,normal,"<code>checkEditOnPaste=""true""</code> 속성 설정을 추가하면, Excel 파일 등에서 n*n 개 데이터를 복사하여 GridView로 붙여넣기 할 경우, 해당 개수만큼의 GridView 셀에 붙여 넣을 수 있습니다."
772,85b9ffed419956a4,normal,"GridView와 DataList가 바인딩된 경우, <kbd>setData();</kbd>, <kbd>setJSON();</kbd> 및 <kbd>setXML();</kbd> 함수를 사용하여 데이터를 설정하거나 추가할 수 있습니다."
773,5f52609ab7815109,normal,"GridView와 바인딩된 DataList, LinkedDataList, 혹은 AliasLinkedDataList에 데이터가 없는 경우, <code>noResultMessage</code> 및 <code>noResultMessageVisibleAlways</code> 속성 설정을 통해 ""데이터 없음"" 메시지를 표시할 수 있습니다."
774,a12ac9d6000956cc,normal,"<code>setSortable()</code> 함수를 사용하면 정렬 기능(<code>sortable=""true""</code>)을 동적으로 설정할 수 있습니다."
775,06e3f4cb724701cc,normal,"<kbd>useCtrlOnMultisort=""true""</kbd> 설정을 사용할 경우, Ctrl 키를 누른 채로 컬럼 헤더를 더블 클릭하여 여러 개의 컬럼을 정렬할 수 있습니다."
776,e0ab8f66513bd304,normal,"여러 개의 헤더 컬럼이 병합된 경우, <code>orderByColumn</code> 속성을 통해 정렬 기준이 되는 컬럼을 지정할 수 있습니다. 아래 예제와 같이 세 개의 컬럼 헤더가 병합된 경우, 정렬 아이콘을 클릭할 경우 세 개의 컬럼 중 정렬의 기준이 될 컬럼을 GridView의 Body Column ID로 지정할 수 있습니다."
777,9f3f5155829320ce,normal,"GridView 컬럼의 <code>inputType</code>이 <code>""autoComplete""</code>이거나 <code>""select""</code>인 경우, 라벨 값을 기준으로 정렬할 수 있습니다. <code>inputType=""custom""</code> 컬럼의 <code>inputType</code>을 <code>""autoComplete""</code>이거나 <code>""select""</code>로 변경한 경우에도 해당합니다. <strong><span class=""r_italic_span"">gridView.column</span></strong>의 <code>sortLabel</code> 속성을 <code>""true""</code>로 설정하십시오."
778,4822caf5e775fa77,normal,"<code>sortable</code>과 <code>showSortableImage</code> 속성을 사용하여 정렬 버튼을 표시할 경우, GridView에 데이터가 없는 경우에도 정렬 버튼이 표시됩니다. 이 때 <code>hideSortIconOnNoData=""true""</code> 속성 설정을 적용하면, GridView와 바인딩된 데이터가 없을 경우 정렬 버튼을 숨길 수 있습니다."
779,3c44c743158e597c,normal,"GridView 컬럼의 헤더에 <code>useFilter=""true""</code> 설정을 추가하면 필터 아이콘이 표시되고, 해당 아이콘을 클릭하면 직접 필터를 설정할 수 있습니다."
780,46b056da8569e32e,normal,"GridView 컬럼의 헤더에 <code>useFilter=""true""</code> 설정을 추가한 후, GridView의 <code>useFilterList</code> 속성을 <code>""true""</code>로 설정할 경우, 필터 아이콘을 클릭하면 직접 필터를 설정할 수 있는 메뉴와 함께 필터링 항목이 목록으로 표시됩니다."
781,5b2470783d3536c5,normal,"GridView가 정렬 기능(<code>sortable=""true""</code>)을 사용하면서 정렬 아이콘을 헤더에 표시하고(<code>showSortableImage=""true""</code>), 또 그리드뷰 컬럼이 필터링 기능(<code>useFilter=""true""</code>)을 사용할 경우, 정렬 아이콘과 필터링 아이콘을 모두 헤더에 표시할 수 있습니다. <code>showSortableUseFilter</code> 속성을 <code>""true""</code>로 설정하십시오."
782,e2c160caf12eb7ba,normal,"GridView와 DataList가 바인딩된 경우, 필터링을 수행한 후, 필터링 결과만 반환할 수 있습니다. 이 때 사용하는 함수는 DataList의 <kbd>getFilteredColData ( colInfo );</kbd>입니다."
783,8d0300319d029650,normal,"필터링 조건이 알파벳 등의 문자인 경우 '<strong>&lt;</strong>', '<strong>&lt;=</strong>', '<strong>&gt;</strong>', '<strong>&gt;=</strong>' 네 개의 연산자가 표시되지 않고 '<strong>=</strong>' 및 '<strong>&lt;&gt;</strong>'만 표시됩니다."
784,3ea75dd0cbde8383,normal,"<code>useFilterList=""true""</code> 설정을 사용하면 필터링 조건을 목록으로 표시할 수 있습니다."
785,0a64decaf8da891a,normal,"<code>useFilterList=""true""</code>와 <code>useFilterSearch=""true""</code> 설정을 동시에 사용할 경우, 필터링 조건 목록과 함께 필터링 조건을 입력할 수 있는 상자가 표시됩니다."
786,eb8669766c21bd19,normal,"필터링 조건 입력 상자는 검색 기능을 함께 제공합니다. 다음은 알파벳 <strong><span class=""r_italic_span"">""J""</span></strong>를 입력했을 때 대문자 <strong><span class=""r_italic_span"">""J""</span></strong>를 포함하는 필터링 조건이 검색된 모습입니다."
787,8d564019b21268cb,normal,"그리드뷰 컬럼 헤더에 <code>autoFitFilterList=""true""</code> 설정을 적용하면, 필터 항목 텍스트 길이에 따라 필터 상자의 폭을 자동으로 조절할 수 있습니다."
788,e0e89e5aea82f410,normal,"각 헤더에 <code>useFilter=""true""</code> 속성 설정을 적용하고 GridView에 <code>showSortableUseFilter=""true""</code> 속성 설정을 적용하여 필터 버튼을 표시할 경우, GridView에 데이터가 없는 경우에도 필터 버튼이 표시됩니다. 이 때 <code>hideFilterIconOnNoData=""true""</code> 속성 설정을 적용하면, GridView와 바인딩된 데이터가 없을 경우 필터 버튼을 숨길 수 있습니다."
789,e6cd3f3a38be7137,normal,"그룹핑 기능을 사용하면 한 개 이상의 컬럼을 기준으로 GridView의 데이터를 그룹으로 분류하고 각 그룹에 대한 통계 값을 확인할 수 있습니다. <code>groupby()</code> 함수를 사용할 경우 동적으로 그루핑을 수행할 수 있고, <code>groupbyZone=""true""</code> 속성 설정을 사용할 경우 사용자가 직접 컬럼 헤더를 드래그-앤-드롭하여 데이터를 그룹핑할 수 있습니다."
790,f2f559cf7c51a26c,normal,<code>groupby()</code> 함수를 사용하여 그룹핑을 수행할 수 있습니다. 각 옵션에 대한 자세한 설명은 API 가이드를 참고하십시오.
791,36fbe7261a3af2b7,normal,"<code>groupby()</code> 함수를 통해 그룹핑을 수행할 경우, <code>showOnlyLastDepth</code> 옵션을 <code>true</code>로 설정하면 헤더에 마지막 단계만 표시할 수 있습니다."
792,abd56e08394fb6be,normal,그룹핑된 각 컬럼의 데이터에 대해 아래의 expression 계산식을 사용할 수 있습니다.
793,7ff83ff9df0a3502,normal,"<code>groupbyZone=""true""</code> 속성 설정을 사용할 경우, 한 개 이상의 컬럼 헤더를 드래그-앤-드롭하여 그룹핑을 수행할 수 있습니다. 단, <code>ongroupby</code> 이벤트를 추가하여 그룹핑 조건을 지정해야 합니다. 또한 <code>ongroupby</code> 이벤트를 통해 그룹핑 수행 시 <code>groupby()</code> 함수를 사용하십시오."
794,e7e8ec1a7c9b299b,normal,"그룹핑 영역으로 드래깅된 헤더를 클릭하면 아래와 같이 필터가 표시됩니다. 즉, 사용자는 그룹핑을 수행한 후 필터를 선택하여 필터링도 수행할 수 있습니다."
795,aca8f09d10d03072,normal,<code>groupbyZoneHeight</code> 및 <code>groupbyZoneMessage</code> 속성들을 사용하여 그룹핑 영역의 높이와 그룹핑 영역에 표시할 메시지를 지정할 수 있습니다.
796,8229a3a4e0f06712,normal,"<code>groupbyZone</code> 속성 설정을 통한 그룹핑 기능을 사용할 때, 그룹핑을 위해 드래깅할 수 있는 컬럼의 최대 개수를 지정할 수 있습니다. <code>groupbyMaxCount</code> 속성을 사용하십시오."
797,990f2a690f0b008c,normal,"<code>groupbyZoneFilterBox=""true""</code> 속성 설정을 사용할 경우, 그룹핑 후 선택한 필터 조건을 표시하는 필터 박스가 표시됩니다. 필터 박스는 사용자가 설정한 필터링 조건을 표시하고, 사용자가 특정 필터링 조건을 선택할 때 해당 결과물만 화면에 출력합니다."
798,3b24a787b8d9a97d,definition_list,"관련 속성
<code>groupbyFilterBox</code>
+ <code>groupbyFilterBoxLocation</code>
+ <code>filterBoxVisibleRowNum</code>"
799,a7ecffc3aaeda06f,normal,"아래와 같이 <code>groupbyFilterBox=""false""</code>인 경우, 그룹핑 후 헤더에서 필터링 조건을 선택했지만 필터링 조건이 별도로 표시되지 않습니다."
800,de0ea5b4ed0ac556,normal,"아래와 같이 <code>groupbyFilterBox=<span class=""r_red_highlight_span"">""true""</span></code>인 경우, 그룹핑 후 헤더에서 필터링 조건을 설정할 경우, 해당 조건이 별도의 박스에 표시됩니다."
801,75104aadf51d6622,normal,"<code>groupbyFilterBoxLocation</code> 속성을 사용할 경우, 필터 박스를 표시할 위치(<code>""top""</code>/<code>""bottom""</code>)를 지정할 수 있습니다."
802,467887504a1fa441,normal,<code>filterBoxVisibleRowNum</code> 속성은 필터 박스에 표시할 최대 필터링 조건 수를 제한하는데 사용됩니다.
803,941b96b5c46c53a7,normal,"GridView에 필터링이 설정된 경우, 필터링 조건을 선택한 후 해당 조건으로 필터링된 데이터에 대해서만 그룹핑을 수행할 수 있습니다. <code>customFilterBox=""true""</code> 설정을 추가하십시오."
804,a9efcb91026df795,normal,관련 속성은 아래와 같습니다.
805,46e183598161656f,definition_list,"필터링 관련
<code>useFilterList=""true""</code>
+ <code>useFilter=""true""</code> // 헤더에 설정
그룹핑 관련
<code>groupbyZone=""true""</code>
+ <code>groupbyFilterBox=""true""</code>
필터 유지 관련
<code>customFilterBox=""true""</code>"
806,8176542b9fc134f4,normal,아래와 같이 필터를 선택한 후 헤더를 드래깅하여 그룹핑을 수행할 수 있습니다.
807,210c7f9e891e4cbc,normal,"<code>customFilterBox=""true""</code>인 경우, 필터링이 유지된 채로 그룹핑이 수행됩니다."
808,01912e9088b8803a,normal,"하단의 필터 상자에는 <strong><span class=""r_italic_span"">""필터링""</span></strong> 조건과 <strong><span class=""r_italic_span"">""필터링 + 그룹핑""</span></strong> 조건이 모두 표시됩니다."
809,a63f58f27ed088f8,normal,"<code>customFilterBox=""false""</code>인 경우, 필터링이 풀리고 전체 데이터에 대해 그룹핑이 수행됩니다."
810,3f45809b993c113c,normal,"<code>clearGroupby()</code> 함수를 사용하여 <code>groupbyZone=""true""</code> 속성 설정 혹은 <code>groupby()</code> 함수를 통해 수행한 그룹핑을 취소할 수 있습니다."
811,148c1a882a02c9e3,normal,<code>getGroupbyData()</code> 함수는 <code>groupbyZone</code> 속성을 통해 현재 적용된 그룹핑 조건을 반환합니다.
812,cfd5ba1f6de4b07b,normal,"<kbd>advancedExcelDownload</kbd> 함수를 이용할 경우 그룹핑을 수행한 GridView를 Excel 파일로 다운로드할 수 있습니다. 단, 아래의 예제와 같이 <kbd>options.groupby=""true""</kbd>로 설정하십시오."
813,3e30a4b66cf81298,normal,"동일한 데이터가 연속적으로 반복될 경우, 아래 방식으로 동일한 데이터가 반복되는 셀을 병합할 수 있습니다."
814,21804af135a79823,definition_list,"셀 병합 방법
(1) 동일한 컬럼 내에서 연속적으로 동일한 데이터를 갖는 셀을 병합. (열 병합.)
+ (2) 동일한 행 내에서 연속적으로 동일한 데이터를 갖는 셀을 병합. (행 병합.)
+ (3) 열 병합 후, 행 병합.
+ (4) 행 병합 후, 열 병합.
+ (5) 왼쪽 열이 병합된 경우, 열 병합.
+ (6) 위쪽 행이 병합된 경우, 행 병합."
815,5ee5d99834b04bea,normal,아래와 같이 열 병합을 먼저 수행합니다.
816,2d7c2ae5e897d91a,normal,"이후 열 병합된 셀들을, 아래와 같이, 다시 행 기준으로 병합합니다."
817,03139ad12f8e0a49,normal,아래와 같이 행 병합을 먼저 수행합니다.
818,a84301c6b5d22c45,normal,"이후 행 병합된 셀들을, 아래와 같이, 다시 열 기준으로 병합합니다."
819,dc464204f8197932,normal,위에 설명한 방법으로 병합된 셀들을 <code>mergeClear()</code> 함수를 사용하여 병합을 해제할 수 있습니다.
820,9d80deb3ef13ca46,normal,아래의 API를 사용하여 셀 병합에서 제외할 컬럼을 지정할 수 있습니다.
821,2731e8b0f9eea433,caution,"<strong>동일 명칭 속성 주의</strong>

<strong>동일한 명칭의 <kbd>mergeCol</kbd> 속성도 존재. </strong>
<strong>단, <kbd>megeCol</kbd> 속성은 </strong> <kbd>mergeCells=""bycol""</kbd> 설정을 사용할 때 적용 대상이 되는 컬럼의 ID를 <kbd>mergeCol=""col1, col3""</kbd>와 같이 지정하는 용도로 사용."
822,09071b247bce2b77,normal,아래의 API를 사용하여 특정 셀의 병합 상태를 확인할 수 있습니다.
823,27165aed655cbf21,normal,"<a class=""reference"" href=""#8dc62e71f08d69c2"">Excel 업로드 → GridView</a> 참조."
824,5248d42b23dd7bf6,normal,"<a class=""reference"" href=""#9fb910628c27d550"">GridView → Excel 다운로드</a> 참조."
825,9c3d36c9f8658f92,normal,"<a class=""reference"" href=""#7a3d5e69e7dcebf6"">CSV 업로드 → GridView</a> 참조."
826,112d8dc3812af56b,normal,"<a class=""reference"" href=""#06e1b5f0872cb960"">GridView → CSV 다운로드</a> 참조."
827,6ee95aa979cf807d,normal,"<a class=""reference"" href=""#71fdf549148e0eda"">GridView 여러 개 → Excel 다운로드</a> 참조."
828,dc6d73602059b0b9,normal,"<strong><kbd>readOnly</kbd> </strong>속성을 통해 특정 열을 읽기 전용으로 설정할 수 있습니다. 행, 열, 셀에 대한 읽기 전용 설정은 API를 통해서도 가능합니다. <strong><kbd>readOnly</kbd></strong> 설정은 그리드 전체, 행, 열, 셀 별로 적용가능합니다."
829,b1b37f771b6fed06,definition_list,"관련 속성
<kbd>captionAuto</kbd>: 표 제목을 자동으로 생성할지 여부.
+ <kbd>captionTitle</kbd>: 표 제목을 자동으로 생성할 때 사용할 텍스트"
830,73cc38573e219c71,normal,"헤더가 항목 1, 항목2, 항목 3인 세 개의 칼럼을 포함하고 위와 같은 설정을 갖는 GridView의 경우 <strong>""<span class=""r_blue_span"">표 제목</span> 은(는) <span class=""r_blue_span"">항목 1</span>, <span class=""r_blue_span"">항목 2</span>, <span class=""r_blue_span"">항목 3</span> 을(를) 나타낸 표""</strong>라는 제목이 생성됩니다."
831,2f8e1eaad15b7097,ordered_list,+ <kbd>CaptionTitle</kbd>: 표 제목을 자동으로 생성할 때 사용할 텍스트
832,28eab84a7ffebcba,normal,"GridView에 <kbd>titleAuto=""true""</kbd> 설정할 경우, 헤더의 <kbd>inputType=""text""</kbd>인 컬럼의 각 셀의 <kbd>&lt;td&gt;</kbd>에 <kbd>title</kbd> 속성을 자동으로 생성할 수 있습니다."
833,627719fc7eaf198b,caution,"<strong>제약 사항</strong>

아래와 같은 경우 <kbd>titleAuto</kbd> 속성을 지원하지 않습니다. 이 경우 각 셀의 <kbd>title</kbd> 속성을 직접 설정해야 합니다. 

(1) 헤더 또는 바디의 셀들이 합쳐진 경우
(2) 헤더가 두 줄인 경우
(3) 헤더가 <kbd>inputType=""text""</kbd>를 제외한 다른 경우"
834,02faebed8976dff2,caution,"제약 사항
아래와 같은 경우 <kbd>titleAuto</kbd> 속성을 지원하지 않음. 이 경우 각 셀의 <kbd>title</kbd> 속성을 직접 설정해야 함. 
(1) 헤더 또는 바디의 셀들이 합쳐진 경우
(2) 헤더가 두 줄인 경우
(3) <kbd>inputType=""text""</kbd>를 제외한 다른 경우"
835,8e174b5c9e3a3447,normal,"금액을 표시하는 경우, 각 컬럼 별로 금액 표시 방법 및 화폐 단위를 동적으로 설정할 수 있습니다."
836,7ab73ce6a6104415,definition_list,"관련 API
<kbd>changeCurrency</kbd>: 화폐 단위 별 표시 방법 지정
+ <kbd>euroMask</kbd>, <kbd>rupeeMask</kbd>, <kbd>tengeMask</kbd>: 각 화페 별 금액 표시 방법"
837,c5e2f9e98e73f754,unordered_list,"* <code>changeCurrency (columnID, dataType, displayFormat, delimiter, decimalDelimiter, customModelFormatter, customModelUnFormatter)</code>
** <code>columnID</code> : 화폐 단위를 적용할 컬럼 ID
** <code>dataType</code> : 적용할 화폐 단위
** <code>displayFormat</code> : 칼럼에 적용할 포맷
** <code>delimiter</code> : 통화 구분자
** <code>decimalDelimiter</code> : 통화 소수 구분자
** <code>customModelFormatter</code> : GridView와 바인딩된 DataList에 값이 저장되기 전에 실행되는 사용자 정의 함수.
** <code>customModelUnFormatter</code> : GridView와 바인딩된 DataList에 값을 읽어올 때 값을 반환하기 전에 실행되는 사용자 정의 함수."
838,96433798ff24096a,normal,"각 컬럼의 데이터를 서로 다른 컴포넌트와 맵핑할 수 있습니다. 즉, GridView의 특정 행을 선택할 경우, 해당 행 각 컬럼의 값을 서로 다른 컴포넌트에 표시할 수 있습니다."
839,06156e4dbd24acb7,normal,"<kbd>contextMenu=""true""</kbd> 설정을 추가할 경우, GridView를 우클릭하면 컨텍스트 메뉴가 표시됩니다."
840,b2473f64eb82d383,normal,"<code>contextMenu=""true""</code> 설정만 사용하면 GridView의 바디에 있는 셀을 우클릭할 때만 컨텍스트 메뉴가 표시됩니다. 헤더의 셀을 우클릭해도 컨텍스트 메뉴를 표시하려면 <code>useHeaderContextMenu=""true""</code> 속성을 추가하십시오."
841,4660b89c70d66e86,normal,"<code>contextMenuAltClick=“true” </code>설정을 추가할 경우, <strong><span class=""r_blue001_span"">Alt 키 + 마우스 좌클릭</span></strong>을 통해 GridView의 컨텍스트 메뉴를 표시할 수 있습니다."
842,5b2b75be3ebe56f5,normal,컨텍스트 메뉴를 사용하여 <code>autoFit</code> 속성을 사용할 때와 마찬가지로 GridView 컬럼의 너비를 자동으로 조절할 수 있습니다.
843,ea4dd0e319d995ed,normal,"<code>visibleRowNumFix=“true” </code>설정을 추가할 경우, <code>visibleRowNum</code> 속성 설정에 따라 GridView의 높이를 설정할 수 있습니다."
844,dd1b5362db95688e,normal,"drawType 속성을 사용하여 GridView를 그리는 방법을 결정할 수 있습니다. ""virtual""은 화면에 보이는 부부만 그리고, ""native""는 전체 GridView를 그립니다."
845,eeefd906a02cfaa4,normal,"<code>hammerEnabled=""true""</code> 설정을 추가할 경우, 모바일 환경에서의 Press 이벤트를 PC에서의 셀 더블 클릭 이벤트와 동일하게 처리할 수 있습니다. Press 이벤트로 인식되기 위해 필요한 셀 누르기(Press) 시간은 <code>hammerPressTime</code> 속성으로 지정하십시오."
846,1f0486236d52ba05,normal,"모바일 환경에서 <code>inputType=""drilldown""</code> 컬럼의 드릴 다운 목록을 셀 터치로 열고 닫으려면 <code>drilldownToggle=""enter""</code> 및 <code>hammerEnabled=""true""</code> 설정을 추가하십시오. 이 경우, <code>inputType=""drilldown""</code> 컬럼에서 목록 기호가 있는 셀을 터치하여 목록을 열고 닫을 수 있습니다."
847,bf8ff3dfb9d26e2a,definition_list,"권장 사항
GridView 조회시 허용 가능한 메모리의 크기는 임계치의 50%내로 사용하는 것을 권장.
+ 그리드의 조회 건수는 약 400,000 Cell을 기준으로 제한하는 것을 권장"
848,bd52f0690f2474dd,normal,"GridView를 조회해서 렌더링할 때 소요되는 시간은 전체 셀의 개수에 영향을 받습니다. 셀이 많을수록 GridView를 조회해서 화면에 표시하는데 소요되는 시간은 증가하며, 셀이 많을 수록 증가폭이 더 큽니다."
849,703c86ae7d7320f5,normal,"<kbd><strong>showGrandTotal=<span class=""r_red_highlight_span"">""true""</span></strong> </kbd> 설정을 추가할 경우 총 합계를 표시할 수 있습니다."
850,6a30b875488ddcfe,normal,"<kbd><strong>showGrandTotal=<span class=""r_red_highlight_span"">""true""</span></strong> </kbd> 설정을 사용할 경우, <kbd><strong>grandTotalDisplayType</strong></kbd> 속성을 통해 총 합계 표시 위치를 선택할 수 있습니다."
851,6842b613f9e4885b,definition_list,"<kbd><strong>showGrandTotal=<span class=""r_red_highlight_span"">""true""</span></strong></kbd>인 경우,
 <kbd><strong>allTotalName</strong></kbd> 속성을 전체 행 합계의 Label 값으로, 
+ <kbd><strong>grandTotalName</strong></kbd> 속성을 전체 열 합계의 Label 값으로 지정할 수 있습니다."
852,b21a5ff01af78644,normal,<kbd><strong>pivotExcelDownload( opt );</strong> </kbd> 함수를 이용하여 피봇을 Excel 파일로 다운로드 할 수 있습니다.
853,aef9d8d1012f5f5c,normal,<code>options.autoSizeColumn</code> 옵션 설정을 통해 헤더 혹은 바디의 텍스트 길이에 따라 해당 컬럼의 너비를 조절할 수 있습니다.
854,7f8561a2c4e8f660,unordered_list,"* <code>options.autoColumnSize : <span class=""r_red_highlight_span"">body</span></code> ­ 피벗의 Body를 기준으로 너비를 조정.
* <code>options.autoColumnSize : <span class=""r_red_highlight_span"">header</span></code> ­ 피벗의 Header를 기준으로 너비를 조정.
* <code>options.autoSizeColumn : <span class=""r_blue001_span"">false</span></code> (기본 값) ­ 너비 자동 맞춤을 수행하지 않음."
855,f3d4817c5bfeec61,normal,"<code>headerYMerge=""true""</code> 설정을 통해 세로축 헤더 컬럼을 병합한 후 <code>pivotExcelDownload()</code> 함수로 Pivot을 Excel 파일로 다운로드하면, Excel 파일에서도 헤더 병합 상태가 유지됩니다."
856,1e9cdb8d3fce52a3,normal,<kbd><strong>pivotExcelUpload( opt );</strong> </kbd> 함수를 이용하여 Excel 파일을 피봇으로 업로드할 수 있습니다.
857,00a3f085400dacb5,normal,"<code>headerYMerge</code> 속성을 사용할 경우, 헤더의 컬럼을 병합할 수 있습니다."
858,1077c3ce9e378957,normal,"<code>headerYMerge=""true""</code> 설정을 통해 세로축 헤더 컬럼을 병합한 후 <code>pivotExcelDownload()</code> 함수로 Pivot을 Excel 파일로 다운로드하면, Excel 파일에서도 헤더 병합 상태가 유지됩니다."
859,80d3c9a6c1cff3ac,normal,"<code>noColumnMove=""true""</code> 설정을 사용할 경우 드래깅을 통한 헤더 컬럼 이동을 방지할 수 있습니다."
860,5a5f80f8a1ff5104,caution,"아래 컴포넌트는 Generator를 통해 반복 생성할 수 없습니다.

Chart
GridView
Menu
Switch
TabControl
TreeView
WindowContainer"
861,758c294ce2aed262,note,"Repeat 컴포넌트와의 차이

Generator: 그룹을 구성하는 컴포넌트의 동적인 추가 및 삭제를 지원
Repeat: 컴포넌트 그룹을 정적으로 생성 

웹 UI의 반복 생성이 필요한 대부분의 경우, Generator 사용을 권장합니다."
862,3db770ab1ab99cb6,normal,"여러 컴포넌트를 Group으로 감싼 후에, Group에 일괄적으로 스타일링을 적용할 수 있습니다."
863,f8806b436e26670a,caution,"<kbd>wframe</kbd> vs. <kbd>wframePreload</kbd>

<kbd>alwaysDraw=""false""</kbd> 설정을 사용할 경우, 두 경우 모두 탭 활성화 시에만 해당 탭의 컨텐츠가 로딩되어 로딩 이벤트가 발생합니다. 

단, 아래와 같은 차이가 있습니다. 

<kbd>frameMode=""wframe""</kbd>
(1) 탭 활성화 시에만 객체를 생성.
(2) 비활성화된 탭에 포함된 객체는 참조 불가능.

<kbd>frameMode=""wframePreload""</kbd> 
 (1) <kbd>src</kbd> 속성으로 지정된 화면을 로딩하여 객체를 생성.
 (2) 렌더링은 하지 않음. (즉, 배경색 변경 같은 렌더링 관련 API는 동작 불가.)
 (3) 그 결과, 탭이 비활성화된 상태에서도 해당 탭에 포함된 객체 참조는 가능."
864,24577d1837ec56be,caution,<kbd>w2:content</kbd> 속성 중 <kbd>initScript</kbd>/<kbd>postScript</kbd>는 deprecated 되었습니다.
865,9c6fe5853580ec52,normal,"기존 방식으로 WFrame 탭을 생성할 수 있습니다. 단, <kbd>scope</kbd> 속성을 추가해야 합니다."
866,5dcbb4e292d64ee0,normal,<kbd>dataObject</kbd> 옵션에 JSON 객체를 지정하여 탭 생성시 호출할 페이지의 파라미터를 전달할 수 있습니다.
867,3973c450b9222f98,normal,"호출된 페이지는 <kbd>$p.getParameter(name);</kbd>으로 반환할 수 있습니다. 아래 예제의 경우 <kbd>$p.getParameter(""<span class=""r_blue_span"">pageParam</span>"");</kbd> 함수를 사용하여 호출된 페이지의 name 정보를 반환할 수 있습니다."
868,da56cecb5a3ba0dd,normal,<code>addTab()</code> 함수로 추가하는 탭에 <code>dataObject</code>를 통해 파라미터를 전달할 수 있습니다. 생성된 탭에서는 <code>$p.getParameter()</code> 함수를 통해 전달받은 파라미터 확인 가능합니다.
869,3223a143acd527ec,normal,"WFrame으로 생성한 탭의 src 화면이 서브미션을 포함할 경우, 서브미션 실행 시 표시되는 상태창을 WFrame 탭 내부에 표시할 수 있습니다."
870,fc17eab6661e0505,normal,"<strong><span class=""r_italic_span"">Config.xml</span> </strong>파일의 설정을 변경하여 해당 상태창의 소스를 변경할 수도 있습니다."
871,c59fb8557d6b7fcd,normal,WFrame으로 생성한 탭은 <kbd>getWindow</kbd>와 <kbd>$p.parent</kbd> API를 통해 참조할 수 있습니다.
872,9036d9369d04675b,normal,content에 지정된 페이지의 경로를 동적으로 바꿀 경우 <kbd>getFrame</kbd> API를 이용하십시오.
873,5fd046fe1eee06bd,normal,"탭이 여러 개인 경우,화면 디자인에 따라 <code>tabPosition</code> 속성을 통해 탭을 표시할 위치를 설정하십시오."
874,b5f9bf028db5e714,normal,"탭을 여러 개 생성할 경우 <code>tabScroll=""true""</code> 설정을 추가하면 상단에 스크롤과 탭 목록을 표시할 수 있습니다."
875,105ea78588e86046,normal,"<code>tabScroll=""true""</code> 설정을 통해 탭 스크롤 버튼을 표시할 경우, 스크롤 버튼을 클릭하면 탭 목록만 스크롤 됩니다. 이 경우 <code>changeActiveTab=""true""</code> 설정을 추가할 경우 스크롤 버튼을 통해 선택한 탭을 활성화할 수 있습니다."
876,24ac68b9c0832cf3,normal,"또한 <code>tabScrollAuto=""true""</code> 설정을 추가할 경우 마지막 탭 닫은 자리를 앞의 탭으로 채워서 상단에 최대한 많은 탭을 표시할 수 있습니다."
877,bff02cc977d8af13,normal,"또한 <code>keepDisabledTab=""true""</code> 설정을 추가할 경우 부모 탭의 활성화 여부에 상관없이 자식 탭의 비활성화 상태를 유지할 수 있습니다."
878,ad70a1b251f3491c,normal,"즉, 부모 TabControl의 탭이 또 다른 TabControl을 포함한 경우, 자식 TabControl의 탭 비활성화 상태를 부모 TabControl 탭의 활성화 상태에 상관없이 유지할 있습니다."
879,7201c5ef2650ff26,normal,"<code>frameMode=""wframe""</code> 혹은 <code>frameMode=""wframePreload""</code>로 생성한 WFrame 탭에서<code> $open.popUp() </code>함수를 통해 팝업을 생성할 경우, 팝업을 표시한 프레임을 지정할 수 있습니다. <code>$open.popUp() </code>함수의 <code>options.frameModal </code>옵션을 사용하십시오."
880,4bca20ee74152a81,normal,"<code>$p.openPopup()</code> 함수를 사용하여 탭 화면에서 팝업을 생성하고, 부모 팝업과 해당 부모에 속하는 모든 자식 팝업을 함께 닫을 수 있습니다."
881,b767004cdcedad79,ordered_list,"# 단, WFrame 탭에서만 동작합니다. <code>frameMode=""wframe""</code> 혹은 <code>frameMode=""wframePreload""</code>로 탭을 생성하십시오.
# TabControl의 <code>frameModal</code> 속성을 <code>""true""</code>로 설정하십시오."
882,56df3528b85babab,ordered_list,# TableLayout을 생성합니다.
883,4adcecd962fdad72,ordered_list,# 아래와 같이 DataMap을 생성합니다.
884,b7395bfb804c54c9,ordered_list,"# Output 탭의 DataMap 키를 Design 탭 상의 TableLayout 셀로 드래깅합니다.
# 아래와 같은 팝업 창이 나오는지 확인합니다."
885,dd0b5ef2d4a001fa,ordered_list,# DataMap을 바인딩할 컴포넌트 종류를 선택합니다.
886,bf1088cf356dedeb,ordered_list,"# 아래는 각 셀에 컴포넌트를 바인딩한 모습입니다. 컴포넌트 키 값(Name, Nationality, 등)이 자동 입력되며, DataMap의 데이터가 자동 표시됩니다."
887,9fa927c789cd0ebc,normal,위젯의 기본 구조는 아래와 같습니다. content 영역은 WFrame으로 구성되며 위젯을 추가할 때 지정한 XML 페이지(<kbd>src</kbd> 옵션)가 표시됩니다.
888,e7e4e53b04fae117,normal,"WidgetContainer는 <code>cols</code> 및 <code>unitHeight</code> 속성을 기준으로 2차원 좌표계를 생성하고, 모든 위젯의 위치 및 크기는 좌표계를 기준으로 결정됩니다."
889,3e37ad717b3ef563,normal,위젯은 WidgetContainer의 <kbd>addWidgets</kbd> 함수를 통해서만 동적으로 생성할 수 있습니다. (XML 상에서 위젯을 추가할 수 없습니다.)
890,ecbd62ed7439b723,definition_list,"관련 함수
<kbd>addWidgets( <strong><span class=""r_bold01_span""><span class=""r_blue_span"">optionsArr</span></span> </strong>)</kbd>: 생성하려는 위젯을 options 객체 혹은 배열로 지정하여 해당 위젯을 생성."
891,9270e6031639dcd5,normal,"현재 존재하는 위젯 전체를 export하거나, 새로운 위젯 여러 개를 추가할 수 있습니다."
892,c0b064b00a97d09e,definition_list,"관련 함수
<kbd>importWidgets( jsonArr , clearFlag )</kbd>: 현재 존재하지 않는 여러 개의 위젯을 WidgetContainer에 추가.
+ <kbd>exportWidgets</kbd>: 현재 WidgetContainer에 포함된 모든 위젯을 내보냄."
893,655da16ab0b67960,normal,<kbd>exportWidgets();</kbd> 및 <kbd>removeWidgetsAll();</kbd> 함수를 사용하여 현재 생성된 모든 위젯을 반환하거나 삭제할 수 있습니다.
894,0cac7b9b04dee6f7,normal,기존에 존재하는 위젯 한 개를 export하거나 역시 이미 존재하는 위젯 한 개를 import할 수도 있습니다.
895,2e189b427eac76f9,definition_list,"관련 함수
<kbd>exportWidget(&lt;widget ID&gt;')</kbd> : 해당 ID의 위젯을 내보냄.
+ <kbd>importWidget( &lt;Widget id&gt;, JSON )</kbd>: 현재 존재하는 위젯 ID와 위젯의 정보를 JSON으로 받아 WidgetContainer에 추가."
896,eee33d97548c94c4,definition_list,"관련 함수
<kbd>getWidgetById</kbd>: ID에 해당하는 위젯을 반환. (존재하지 않은 경우 null을 반환.)
+ <kbd>getWidgetByTitle</kbd>: Title에 해당하는 위젯을 반환. (존재하지 않은 경우 null을 반환.)"
897,b905e6b748efe52f,normal,아래의 위젯 함수를 사용하여 위젯 내부 객체에 접근할 수 있습니다.
898,1e6eb712c0fb2952,definition_list,"관련 함수 
<kbd>setSrc</kbd>
+ <kbd>getObj</kbd>
+ <kbd>getObjList</kbd>"
899,e8e3082d16e7784c,normal,사용법은 아래와 같습니다.
900,93014cea25c50c0b,normal,"WFrame의 <kbd>scope=""true""</kbd> 설정을 사용할 경우 WidgetContainer 및 포함된 위젯 간의 상호 참조가 가능합니다."
901,be0d71cec18c254a,normal,<kbd>$p.widget</kbd> 객체는 위젯을 위한 전용 함수입니다. 위젯으로 사용되는 화면에 대해서만 이 객체가 존재하며 아래 함수를 통해 위젯으로 사용된 화면의 정보를 얻을 수 있습니다.
902,fee9e1c937045b98,definition_list,"관련 함수
<kbd>$p.widget.getWidgetId()</kbd>: 화면이 위젯으로 사용된 경우 사용된 위젯 ID를 반환.
+ <kbd>$p.widget.getWidgetContainerId()</kbd>: 해당 위젯을 관리하는 WidgetContainer의 ID를 반환.
+ <kbd>$p.widget.getWidgetContainer()</kbd>: 해당 위젯을 관리하는 WidgetContainer 객체를 반환."
903,a4a015bfce7ecdc3,definition_list,"자주 사용하는 함수
<kbd>$p;</kbd>: Utility 성격의 기능 제공.
+ <kbd>$p.data;</kbd>: DataCollection을 제어."
904,f99fefef32032094,normal,"아래는 WFrame의 <kbd>scope=""true""</kbd> 설정을 사용할 때 위젯 내에서 Submission을 실행하는 예제입니다. 즉, <kbd>$p.xxx</kbd> 형태의 함수를 사용하십시오. <kbd>$p.xxx</kbd> 형태의 함수를 사용하면 메인 영역에서 submission을 탐색합니다."
905,2c311e0a9f3ed101,normal,아래의 함수를 사용하여 텍스트를 동적으로 변경할 수 있습니다.
906,3d82d72fd86a8bc6,definition_list,"관련 함수
<kbd>getTitle</kbd>
+ <kbd>setTitle</kbd>"
907,3ba0a21bed069c39,normal,<kbd>&lt;style&gt;</kbd> 태그에 스타일을 정의하고 <kbd>addWidgets</kbd>을 통해 위젯을 추가할 때 <kbd>titleClass</kbd> 속성에 추가한 스타일을 지정하여 각 위젯 별로 서로 다른 스타일을 적용할 수 있습니다.
908,247f771dace4ce81,normal,아래의 API를 사용하여 WidgetContainer에 포함된 전체 및 개별 위젯의 타이틀 표시 여부를 제어할 수 있습니다.
909,032daca6edad4721,normal,"각 위젯의 타이틀을 더블 클릭할 경우 화면이 최대화되거나 최소화됩니다. 단, 고정핀이 활성화된 위젯의 크기는 변경되지 않습니다."
910,dd1c6cdfe1542bb8,normal,"<code>preventMaximizeByTitle=""true""</code> 속성 설정을 추가하면, 사용자가 타이들을 더블-클릭할 때 위젯이 최대화되는 것을 방지할 수 있습니다."
911,4d185a7484ad3aa8,normal,WidgetContainer에 포함된 모든 위젯의 이동 여부를 제어할 수 있습니다.
912,d9d7f3aad6d01f99,normal,아래의 API를 사용하여 WidgetContainer에 포함된 전체 및 개별 위젯의 리사이징 허용 여부를 결정할 수 있습니다.
913,3cb05a5c8ac32268,ordered_list,"# 위젯을 추가하기 전 WidgetContainer의 ID를 지정하고, 좌표계를 생성하기 위해 <kbd>cols</kbd>와 <kbd>unitHeightPixel</kbd>을 정의하십시오."
914,f4ece15967197a61,normal,"<kbd>cols=""8""</kbd> &amp; <kbd>unitHeightPixel=""200""</kbd>인 경우 아래와 같은 좌표계가 생성됩니다."
915,1bcd08e706f4f49f,ordered_list,# <kbd>&lt;script&gt;</kbd> 탭에 아래와 같은 스크립트를 작성하여 위젯을 추가합니다.
916,f9506ff0e225468f,ordered_list,# 저장 후 브라우저를 갱신하여 위젯이 추가되는지 확인하십시오.
917,569cb0ad6af1c171,ordered_list,# 각 위젯 우측 상단의 버튼을 이용하여 아래와 같은 위제 제어 동작이 가능한지 확인합니다.
918,1a1e3f30b3f0ad2c,unordered_list,"* 위치 고정
* 최대화/최소화
* 닫기
* 이동 (탭을 클릭하여 드래깅)
* 리사이징 (우측 하단 모서리를 드래깅)"
919,b636bc1d704117ee,normal,<kbd>createWindow</kbd> 함수를 사용하여 새 창을 생성할 경우 아래와 같이 <kbd>frameMode</kbd> 옵션을 통해 새로 지정하는 창의 프레임 종류를 결정할 수 있습니다.
920,26bc0d4943df9374,normal,"<kbd>dataObject</kbd> 옵션에 JSON 객체를 지정하여 Window 생성시 호출할 페이지의 파라미터를 전달할 수 있습니다. 호출된 페이지는 <kbd>$p.getParameter(name);</kbd>으로 반환할 수 있습니다. 아래 예제의 경우 <kbd>$p.getParameter(""<span class=""r_blue_span"">pageParam</span>"");</kbd> 함수를 사용하여 호출된 페이지를 반환할 수 있습니다."
921,e28db184cb4b4bcb,normal,호출할 페이지의 경로를 동적으로 바꿀 경우 <kbd>getFrame</kbd> API를 이용하십시오.
922,d0c25e2dd35d64ee,normal,"<code>createWindow()</code> 함수를 사용하여 윈도우를 생성할 경우, <code>defaultWidth</code> 옵션 및 <code>defaultHeight</code> 옵션을 사용하여 기본 너비 빛 높이를 지정할 수 있습니다."
923,41fcad1b7561b0f1,normal,"처음 윈도우를 생성할 경우, 아래와 같이 최대 크기의 윈도우가 생성됩니다."
924,8a7ebba6165cf9e9,normal,"윈도우 크기 복원 아이콘을 클릭할 경우, 아래와 같이 <code>defaultWidth</code> 및 <code>defaultHeight</code> 옵션으로 지정한 크기로 조정됩니다."
925,8b99be63797c63f9,normal,<code>createWindow()</code> 함수를 통해 추가하는 윈도우에 <code>dataObject</code>를 통해 파라미터를 전달할 수 있습니다. 생성된 윈도우에서는 <code>$p.getParameter()</code> 함수를 통해 전달받은 파라미터 확인 가능합니다.
926,0177f5101d396872,normal,"WindowContainer가 IFrame을 포함할 경우, IFrame 화면의 뒤로가기를 제어할 수 있습니다. <kbd>spaReplaceHistory=""true""</kbd>로 설정할 경우 뒤로 가기 버튼을 클릭하면 각 IFrame에 담긴 화면이 아닌 브라우저 전체가 이젠 페이지를 표시합니다."
927,42ddd698799f1da6,normal,WFrame으로 생성한 window는 <kbd>getWindow</kbd> (기존의 <kbd>getWindowbyWindowID</kbd>와 동일) 및 <kbd>$p.parent</kbd> API를 통해 참조할 수 있습니다.
928,2ed61f6e2eda84f4,normal,"<code>getSelectedIndex()</code> 함수를 사용하면 선택한 윈도우의 인덱스를 확인할 수 있습니다. <code>createWindow()</code> 함수를 이용하여 윈도우를 생성할 경우, 윈도우를 생성할 때마다 인덱스가 ""1""씩 증가하고, 윈도우를 닫으면 인덱스가 초기화됩니다."
929,1d7af3ddcd6eaa8e,normal,"<code>setFocus()</code> 함수를 사용하면 윈도우 ID나 윈도우 인덱스를 파라미터로 지정하여, 해당 윈도우에 포커스를 줄 수 있습니다. 윈도우 ID 및 윈도우의 인덱스는 <code>getSelectedWindowId()</code> 함수와 <code>getSelectedIndex()</code> 함수를 사용하여 확인할 수 있습니다."
930,8af43a30088fda24,normal,"<code>frameMode=""wframe""</code>로 생성한 WFrame 윈도우에서<code> $open.popUp() </code>함수를 통해 팝업을 생성할 경우, 팝업을 표시한 프레임을 지정할 수 있습니다. <code>$open.popUp() </code>함수의 <code>options.frameModal </code>옵션을 사용하십시오."
931,55b52e3ead636dc5,normal,"<code>$p.openPopup()</code> 함수를 사용하여 탭 화면에서 팝업을 생성하고, 부모 팝업을 속하는 모든 자식 팝업과 함께 닫을 수 있습니다."
932,cf31ddec10037a77,ordered_list,"# 단, WFrame 윈도우에서만 동작합니다. 
# 윈도우 생성 시 <code>frameMode=""wframe""</code>으로 생성하십시오. 
# 윈도우의 <code>frameModal</code> 속성을 <code>""true""</code>로 설정하십시오."
933,afcf28e8dfe2afc7,normal,"WFrame으로 생성한 윈도우의 <code>src</code> 화면이 서브미션을 포함할 경우, 서브미션 실행 시 표시되는 상태창을 WFrame 탭 내부에 표시할 수 있습니다."
934,5a231a382bf91575,normal,"<strong><span class=""r_italic_span"">Config.xml</span> </strong>파일의 <code>&lt;processMsgFrameURL&gt;</code> 항목 설정을 변경하여 해당 상태창의 소스를 변경할 수도 있습니다."
935,b49d547374cb2233,normal,"<kbd>setArrangeWindows();</kbd> 함수를 사용하여 윈도우를 네 가지(<kbd>vertical</kbd>, <kbd>horizontal</kbd>, <kbd>cascade</kbd>, <kbd>sequential</kbd>) 방법으로 정렬할 수 있습니다."
936,d52a3e6053b62571,normal,"WindowContainer에서 여러 개의 윈도우를 정렬해서 표시한 후 특정 윈도우를 닫을 경우, 남아 있는 윈도우를 다시 정렬할 수 있습니다. <code>autoArange</code> 속성을 사용하십시오."
937,57474e8bf0dd0bf5,normal,"<code>controlIconPosition</code> 속성을 사용하여 윈도우 정렬 아이콘의 표시 위치를 결정할 수 있습니다. 단, <code>controlIconPosition</code> 속성을 사용할 경우, <code>useNameContainer=""<span class=""r_blue_span"">true</span>""</code> 설정을 추가해야 합니다."
938,30b672ebd4cf5aa4,definition_list,"<code>controlIconPosition</code>
<code>""left""</code> (기본 값) : 스크롤링 화살표는 양 옆에, 정렬 아이콘은 왼쪽에 표시. 
+ <code>""right""</code> : 스크롤링 화살표는 양 옆에, 정렬 아이콘은 오른쪽에 표시. 
+ <code>""allright""</code> : 스크롤링 화살표 모두 오른쪽에, 정렬 아이콘 역시 모두 오른쪽에 표시."
939,3562197cd7397809,normal,<kbd>setWindowMaxNum</kbd>함수를 이용하면 WindowContainer에서 열 수 있는 최대 윈도우 개수를 동적으로 변경할 수 있습니다.
940,0316176cedbebef8,normal,"<kbd>stopMinimizeOnNameLayer=""true""</kbd> 설정을 적용하면, 네임레이어 클릭에 상관 없이 윈도우를 항상 열린 상태로 유지할 수 있습니다."
941,4ecdd0614b1c7bdd,normal,WindowContainer에서 생성한 윈도우는 최대화 버튼을 클릭하거나 윈도우 타일을 더블-클릭하여 최대화할 수 있습니다.
942,7057978693e7e892,normal,WindowContainer에서 생성한 윈도우는 최소화 버튼을 클릭하거나 네임 레이어를 클릭하여 최소화할 수 있습니다.
943,2306f67f5f8c58ee,normal,"<code>windowMoveType=""overflow""</code>인 경우, WindowContainer 밖으로 윈도우를 드래깅 하고 마우스 커서 위치에 따라 윈도우를 표시할 수 있습니다. 혹은, <code>windowMoveType=""restrict""</code> 설정을 사용할 경우, WindowContainer 내에서만 윈도우를 드래깅할 수 있습니다."
944,586756025fe00dc7,normal,<code>w2window_selected</code> 스타일 클래스를 지정하여 선택된 윈도우를 나머지 윈도우로부터 구분하는 스타일을 지정할 수 있습니다.
945,07b471932f75127b,normal,위의 스타일을 적용하면 아래와 같이 선택한 윈도우가 초록색 선으로 구분됩니다.
946,6a6f06a25ec6724b,normal,"<code>closeOthers()</code> 함수를 사용하여 현재 활성화된 윈도우, 혹은 주어진 <code>windowID</code>나 <code>uniqueID</code>에 해당하는 윈도우를 제외한 모든 윈도우를 닫을 수 있습니다."
947,e0d9bcb71e871148,normal,"<kbd>useFixButton=""true""</kbd> 설정을 사용할 경우 네임 레이어에 표시되는 각 창의 이름 옆에 창 닫기 방지 버튼을 표시할 수 있습니다."
948,57569b2da1b16937,normal,"또한 <strong><code><kbd>useFixbutton=""true""</kbd></code></strong>와 <strong><code><kbd>closeType=""noneFixedWindow""</kbd> </code></strong>속성과 함께 사용할 경우, 전체 창닫기 버튼을 통해 창 닫는 방법을 설정할 수 있습니다. 즉, 전체 창닫기 버튼을 클릭해도 닫히지 않을 창을 창 닫기 받지 버튼으로 설정할 수 있습니다."
949,9e7a595b4bebcd5d,normal,"<kbd>fixWindow</kbd> 및 <kbd>unfixWindow</kbd>함수를 사용할 경우, 창 닫기 방지 버튼을 동적으로 활성화/비화성화할 수 있습니다."
950,ba276f225b008820,normal,"<code>nameLayerMove=""true""</code> 및 <code>nameLayerRearrange=""true""</code> 설정을 추가할 경우, 핀 버튼(<code>useFixButton=""true""</code>)으로 고정한 윈도우를 네임레이어의 맨 앞으로 이동할 수 있습니다."
951,8d0927361b66dcb9,normal,"윈도우를 고정하지 않은 상태에서는 아래와 같이 <strong>""aaa"" ""bbb"" ""ccc""</strong> 순서로 윈도우 타이틀이 표시됩니다."
952,6012f0abcbdd2645,normal,"위의 사태에서 <strong>""bbb""</strong> 윈도우를 핀으로 고정하면 <strong>""bbb""</strong> 윈도우 타이틀이 네임레이어 상에서 제일 앞으로 이동합니다."
953,3f203187b7fc86e3,normal,"<code>changeActiveWindow=""true""</code> 속성 설정을 적용하면 네임 레이어 상의 스크롤 버튼을 클릭하여 윈도우를 선택하고 활성화할 수 있습니다."
954,be18acfa0cbe36d4,normal,"<code>useWindowScrollButton</code> 속성을 사용하여 현재 윈도우 목록을 확인할 수 있는 버튼을 툴바에 표시할 수 있습니다. 또한, <code>useWindowScrollButton=""true""</code> 설정을 통해 목록을 표시할 경우, <code>windowScrollVisibleRowNum</code> 속성을 통해 목록에 표시할 항목 수를 지정할 수 있습니다"
955,269aa0f68b2198d6,normal,WindowContainer는 <kbd>onwindowload</kbd>/<kbd>onwindowunload</kbd> 이벤트를 지정할 수 있습니다. WindowContainer의 <kbd>onwindowload</kbd> 이벤트는 window 화면의 <kbd>initScript</kbd>와 <kbd>postScript</kbd> 호출 이후에 발생합니다.
956,235ae6afc111dbfd,normal,"<kbd>displaySearchbox=""<strong><span class=""r_blue_span"">true</span></strong>""</kbd> 속성 설정을 통해 페이지 번호 입력란을 추가할 수 있습니다. 최종 사용자가 페이지 번호 입력 란에 페이지 번호를 입력 후 엔터키를 치거나 입력 상자를 빠져나올 경우 해당 페이지가 바로 출력됩니다."
957,f39f0bbd4d70b27b,definition_list,"페이지 이동 버튼 지정
<kbd>buttonShowType=""<strong><span class=""r_red_highlight_span"">0</span></strong>""</kbd>: 이전/다음 목록 버튼만 표시 (2개)
+ <kbd>buttonShowType=""<strong><span class=""r_red_highlight_span"">1</span></strong>""</kbd> (기본 값): 이전/다음 페이지 + 이전/다음 목록 버튼 (4개)
+ <kbd>buttonShowType=""<strong><span class=""r_red_highlight_span"">2</span></strong>""</kbd>: 이전/다음 페이지 버튼만 표시 (2개)
+ <kbd>buttonShowType=""<strong><span class=""r_red_highlight_span"">3</span></strong>""</kbd>: 이전/처음 목록 + 첫/끝 페이지 버튼 (4개)
+ <kbd>buttonShowType=""<strong><span class=""r_red_highlight_span"">4</span></strong>""</kbd>: 첫/이전 페이지 + 다음/끝 페이지 버튼 (4개)"
958,16beeca6552d946b,normal,<kbd>buttonShowType</kbd> 속성을 통해 페이지 이동 버튼의 종류를 지정할 수 있습니다.
959,d7c513dae18deb5e,normal,"PageControl 컴포넌트는 단순히 앞으로가기, 뒤로가기의 기능만 제공합니다. 즉, 개발자가 직접 전체 페이지 수, 페이지당 표시하고 싶은 데이터 수 등을 구현해야 합니다."
960,a693c28f4ea20af5,definition_list,"DataCollection의 경우, 
(1) 데이터를 포함하고 있는 DataCollection에서 원하는 양의 데이터를 가져와, 
+ (2) 새로운 DataCollection을 만들고, 
+ (3) 그 안에 넣어 GridView 컴포넌트에 바인딩 시켜줘야 합니다."
961,7dcd236e8195618f,definition_list,"예를 들어,
25개의 데이터를 포함하고 있는 DataCollection이 있고, 
+ GridView 컴포넌트에 페이지당 5개의 데이터를 표시하고 싶다면, 
+ (1) PageControl 컴포넌트 이벤트를 통해 DataCollection에서 데이터 5개를 가져와서, 
+ (2) 새로운 DataCollection에 넣어주고, 
+ (3) 새로 만든 DataCollection을 GridView와 바인딩해야 합니다."
962,151f7543481e0da0,normal,"아래와 같이 데이터 입력 방법을 선택한 후, 각 노드의 정보를 설정하고<strong> [OK] </strong>버튼을 클릭하십시오."
963,5ce597fa754db1a2,unordered_list,"* <strong>Inner XML</strong>: 데이터를 직접 입력
* <strong>ItemSet</strong>: DataList와 바인딩"
964,00d871e711301f89,normal,아래 함수를 사용하여 해당 노드는 물론 자녀 노드까지 선택/해제 할 수 있습니다.
965,7c4e761e5c6fc697,definition_list,"<kbd>checkByIndex( index , checkValue , childCheck )</kbd>
<kbd>index</kbd>: 노드 인덱스.
+ <kbd>checkValue</kbd>: 선택 및 해제 여부
+ <kbd>childCheck</kbd>: 자녀 노드의 선택 및 해제 여부"
966,9640922ae117c94c,normal,아래 함수를 사용하여 노드의 자식 포함 여부를 확인할 수 있습니다.
967,4a327f469bdfc638,normal,혹은 노드가 자식인지를 확인할 수 있습니다.
968,73420460dfa925e1,normal,"<code><kbd>customFormatter</kbd> </code> 속성에 각 노드의 label 값을 포맷하는 함수명을 지정할 수 있습니다. 단, 해당 함수는 별도의 스크립트로 직접 작성해야 합니다."
969,3008495cbeced9c0,normal,"<code>showCheckbox</code> 속성을 사용하여 TreeView 각 항목 앞에 체크박스를 표시할 수 있습니다. 또한, <code>showCheckbox</code> 속성은 <code>setShowChecBox()</code> 함수를 사용하여 동적으로 설정할 수 있습니다."
970,81a5f78841ffd60a,normal,"<code>hierarchy=""true""</code> 속성을 추가하면, 부모의 체크박스를 선택할 때 자식 노드를 모두 한번에 선택할 수 있습니다. 또한 자식 일부만 선택될 경우, 부모의 체크박스는 부분 선택으로 표시됩니다."
971,0bab08ba6871d6b4,ordered_list,"# FusionChart에 <kbd>Id</kbd>, <kbd>chartType</kbd>, <kbd>drawType</kbd>을 설정하여 차트를 만듭니다."
972,3d7c331676a85462,ordered_list,"# 아래와 같이 <strong><code><kbd>setJSONData()</kbd></code></strong> API를 이용하여 차트 데이터를 설정하십시오. (FusionChart는 xml과 json 데이터를 지원하며, WebSquare5는 json 데이터를 지원하기 때문.)"
973,a8bbcd6b8d681746,ordered_list,# 아래와 같이 차트가 그려지는지 확인합니다. (WebSquare5 기본 스타일 적용된 상태)
974,c758f64d03ca6a1c,ordered_list,"# FusionChart에 <kbd>Id</kbd>, <kbd>chartType</kbd>, <kbd>drawType</kbd>을 설정하여 차트를 만듭니다."
975,aa50ea6a698d4207,note,"FusionChart는 기본적으로 데이터와 스타일 옵션들이 결합되어 있는 형태입니다.

차트에 거의 모든 부분을 접근하여 스타일을 변경할 수 있습니다. (JavaScript 랜더링시 지원하지 않는 부분도 있음.) 

차트 종류는 44가지이며 차트마다 옵션과 API가 조금씩 다릅니다. 

FusionChart <a class=""link"" href=""http://www.fusioncharts.com/"">공식 홈페이지</a> documents에 각각의 차트마다 specification sheet에서 옵션과 API를 확인하실 수 있습니다."
976,df4f7a7a8f3c26a9,definition_list,"관련 API
<strong><kbd>configure()</kbd>: </strong>chart에 표시되는 메세지를 변경합니다.
+ <strong><code><kbd>setChartAttribute()</kbd></code></strong>: chart element에 들어가는 Attribute를 설정합니다. (<kbd>caption</kbd>, <kbd>yaxisname</kbd>)
+ <strong><code><kbd>setPlotColor()</kbd></code></strong>: chart에 Data Plot의 색상을 지정합니다.
+ <strong><code><kbd>addTrendLine()</kbd></code></strong>: chart에 trendLine(가로줄)을 그립니다.
+ <strong><code><kbd>addVTrendLine()</kbd></code></strong>: chart에 vtrendLine(세로줄)을 그립니다. (Scatter/Bubble/Zoom Line Chart에서만 지원) 
+ <strong><code><kbd>applyStyle()</kbd></code></strong>: chart에 Style을 지정합니다. (animation, font, glow, bevel)"
977,33ed54b6cdc65072,normal,다음은 위의 API를 사용하여 옵션을 설정한 예입니다.
978,300f34c4c04491bb,normal,FusionChart는 xml과 json을 지원합니다.
979,d8cfd2247e58dda3,normal,"차트에 따라 데이터 구조가 single series , multi series 등이 존재합니다."
980,86379c29f8bc2d69,normal,아래 데이터에 빨간색부분은 chart의 여러 속성을 지정할 수 있는 영역입니다.
981,363c7dbcd345c52e,normal,예를 들어 차트에 Caption을 넣어 싶다면 아래를 추가 하십시오.
982,9a05118f7c6bb71a,normal,혹은
983,f9eef4d1171d9ef6,normal,Chart 영역에 들어가는 여러 속성들은 차트마다 조금씩 다르며 FusionChart에서 제공하는 chart Specification sheet을 보고 원하시는 옵션을 <strong><code><kbd>SetChartAttribute()</kbd></code></strong> API로 추가하십시오.
984,d4f45f3e39c50c3f,normal,WebSquare5 서버에서 복잡한 구조의 차트 데이터를 만들어 내려주는 것은 효율적이지 않습니다. 따라서 아래와 같이 실제 차트에 보여질 데이터만 내려받아 차트 옵션과 색상 등을 API로 추가하여 화면으로 보여주는 방식을 권장합니다.
985,349879de7cf30176,note,위의 두 가지 이외의 데이터 구조는 FusionCharts documents의 FusionCharts XT Data Formats 섹션을 확인하십시오.
986,86130cc18cb6ce96,pre,"FusionChart와 DataCollection 데이터 연동 시 사용.
DataCollection을 설정.
<strong><code><kbd>labelNode</kbd></code></strong> / <strong><code><kbd>seriesColumns</kbd></code></strong> 옵션과 함께 사용."
987,811c4c900023cad6,unordered_list,"* FusionChart의 label로 사용할 DataCollection의 column ID값.
* 공백 일 경우 DataCollection의 첫 번째 column을 사용."
988,9136fff073145262,pre,"FusionChart의 series 데이터로 사용할 DataCollection column. 
공백일 경우 DataCollection의 첫 번째 column을 제외한<strong><code><kbd>dataType</kbd></code></strong>이 number인 column을 사용. 

<strong><code><kbd>seriesColumns</kbd></code></strong>은 각 series에 대한 column의 ID값이나 옵션을 설정한 객체일 수 있음.
<strong><code><kbd>seriesColumns</kbd></code></strong>에 객체를 넣을 수 없는 차트: Single Series, Scatter, Zoom Lines"
989,e3db8341d472bd4f,unordered_list,"* Single Series Chart 일 경우: [['ProductA']]
* Multi Series Charts 일 경우:
**<code> [['ProductA','ProductB'], ['ServiceA','ServiceB','id':'ServiceC']]</code>
* Multi Series Stacked Chart 일 경우 : Multi Series Charts 와 동일
* MSStackedColumn2DLineDY 차트의 경우 
** (마지막 시리즈 배열은 LineDY로 인식):
** <code>[['ProductA','ProductB'], ['ServiceA','ServiceB','ServiceC'],[{'id':'Revenue','linethickness':'2'},{'id':'RevenueB','linethickness':'5'}]]</code>
* Scatter &amp; Bubble Chart 일 경우(X, Y, Z의 column ID를 순서대로 설정): [['X','Y']] 
* Zoom Line Chart 일 경우: Multi Series Charts 와 동일"
990,6c36e7a508dca8e5,unordered_list,"* 단순 string('ProductA')만 넣은 경우에는<code> {'id':'ProductA'} </code>id가 생략된 모양
* <code>{'id':'Year3','seriesname': ‘New Year', 'renderas':'Line', 'showValues':'1', 'parentyaxis':'S'}</code> 객체에 seriesname이 있을 경우 설정한 seriesname으로 세팅되고, seriesname이 없을 경우에는 dataList의 Year3 컬럼의 name 값으로 셋팅됩니다. 
* <code>{'id':'Year2','displayValue':'Month', 'showValues':'1'}</code> Month 컬럼의 데이타들을 displayValue로 넣고 싶은 경우 사용 할 컬럼의 id로 설정 해 주시면 됩니다."
991,7df3562095a74490,normal,"<strong><code><kbd>setChartColumnRef(ref,labelNode,seriesColumns)</kbd> </code></strong>API를 이용하여 아래와 같이 동적으로 DataCollection을 바인딩할 수 있습니다."
992,70b790e063f3029b,normal,"dataList의 <strong><code><kbd>getFusionChartData(chartType, labelNode, SeriesColumn)</kbd></code></strong>를 호출하면 chartType에 따라 알맞은 차트 데이터가 반환 됩니다. 반환타입은 JSON 객체이며 FusionChart의 <strong><code><kbd>setJSONData()</kbd> </code></strong>API로 해당 데이터를 설정하면 화면에 차트가 그려집니다."
993,acab160d2b46d223,normal,"<strong><code><kbd>getFusionChartData</kbd></code></strong> API를 이용하는 경우 DataCollection과 직접 바인딩 된 것은 아니기 때문에 DataCollection의 데이타가 업데이트 되더라도 차트는 갱신되지 않습니다. 갱신을 원할 경우, 9.1/9.2를 이용해서 DataCollection과 직접 바인딩하십시오."
994,d9d481613e1c5ef1,normal,"DataCollection으로 모든 FusionChart 옵션을 지원하는데는 한계가 있기 때문에 , getFusionChartData() API로 반환받는 json 객체를 직접 핸들링하여 원하시는 옵션을 추가 할 수 있습니다."
995,81005452744f2c02,normal,Zoom Line Chart의 경우 두 가지 데이타 구조를 지원합니다.
996,8386c58581bdd6d0,ordered_list,"# Standard Multi-series JSON Data: 9.1.1.2 Multi Series Charts / Combination Chart와 동일
# Compact JSON data: 이 형식은 JSON의 크기와 구문 분석 시간을 줄일 수 있습니다. 차트에 표시 할 1,000 개 이상의 데이터 포인트가 있을 때에는 해당 형식을 사용 하시기 바랍니다. Compact JSON data를 사용하기 위해서는 차트 Attribute에 필수적으로 compactdatamode와 dataseparator을 넣어주셔야 합니다."
997,fe03cac32d115288,normal,아래는 Compact JSON data를 사용한 샘플입니다.
998,be703efdafdcb7e4,pre,"Pie 차트나 Doughnut 차트는 Single-series Chart 입니다. 
같은 데이터 구조를 가지는 차트는 타입만 바꾸면 차트를 변경할 수 있습니다.
다음은 <strong><code><kbd>togglePieSlice()</kbd></code> </strong> API를 사용하여 Pie 및 Doughnut 형태 모두를 지원하는 차트 예제입니다."
999,b5cf4b14312de43f,normal,사용자가 <strong>Toggle</strong> 버튼을 누르면 <strong><code><kbd>togglePieSlice()</kbd></code></strong> API가 실행되어 3번째 조각을 파이에서 떨어져 나가게 합니다.
1000,02b5a78c25ac468e,normal,선택 박스에서 Doughnut3D를 선택하면 Doughnut3D 차트로 바뀝니다.
1001,1578899a1bb94883,normal,MapChart 컴포넌트는 d3 데이터를 이용하여 대한민국의 전국 지도를 다양한 형태로 시각화하여 표현할 수 있습니다.
1002,f986f864d387579c,normal,"SPA 모드에서 IFrame 화면의 뒤로가기를 제어할 수 있습니다. <kbd>spaReplaceHistory=""true""</kbd>로 설정할 경우 뒤로 가기 버튼을 클릭하면 각 IFrame에 담긴 화면이 아닌 브라우저 전체가 이젠 페이지를 표시합니다."
1003,6cf5111cd51047c8,note,"WFrame 컴포넌트와의 차이
새로 삽입하는 웹 페이지의 DataCollection, 인스턴스, JavaScript, CSS를 재정의할 수 있습니다."
1004,7678aa6316fc16bb,note,"IFrame과의 차이

<span class=""r_blue001_span""><span class=""r_blue_span"">IFrame 컴포넌트에 삽입된 객체는 현재 웹 페이지와 무관한 독립적인 객체입니다. </span></span>
반면, WFrame에 삽입된 객체는 현재 페이지에 포함(merge)되어 전체가 하나의 소스로 간주됩니다. 
즉, IFrame 컴포넌트를 포함한 페이지를 로딩할 경우, 해당 페이지와 IFrame에 포함된 페이지는 각각 따로 호출됩니다. WFrame을 포함한 페이지는 해당 페이지와 WFrame에 포함된 객체가 함께 호출됩니다."
1005,dc733dcd585e12e3,normal,WFrame에 <code>setSrc()</code> 함수를 이용하여 페이지를 설정할 때 <code>dataObjec</code>t를 통해 파라미터를 전달할 수 있습니다. 생성된 WFrame의 <code>Src</code> 페이지는 <code>$p.getParameter(</code>) 함수를를 통해 전달받은 파라미터 확인 가능합니다.
1006,4ec93e4370d1902f,normal,또한 WFrame에 설정된 페이지 정보는 아래 방법으로 확인할 수 있습니다.
1007,a436fe5628edda51,normal,"WFrame의 <code>src</code> 화면이 서브미션을 포함할 경우, 서브미션 실행 시 표시되는 상태창을 WFrame 내부에 표시할 수 있습니다."
1008,3dbabaf25a0a8835,normal,"<strong><span class=""r_italic_span"">Config.xml</span> </strong>파일의 <code>&lt;processMsgFrameURL&gt;</code> 항목 설정을 변경하여 해당 상태창의 소스를 변경할 수도 있습니다."
1009,ec73eaf6191603da,normal,"함수를 호출한 페이지(WFrame 영역)에서 지정한 텍스트 및 현재 시각을 워터마크로 표시할 수 있습니다. 워터마크로 표시되는 현재 시각은 초 단위로 갱신되며, 화면 크기를 조정해도 워터마크 크기는 변하지 않습니다."
1010,eb64628d93cef9de,normal,"<code>$p.openPopup()</code> 함수를 사용하여 WFrame 내에서 팝업을 생성할 수 있습니다. 또한 WFrame의 <code>frameModal</code> 속성을 <code>""true""</code>로 설정할 경우, 부모 팝업을 닫을 때 해당 부모에 속하는 모든 자식 팝업을 함께 닫을 수 있습니다."
1011,d0464b19e41c628b,normal,<code>onbeforewframeunload</code> 이벤트는 페이지가 닫힐 경우 해당 페이지가 지워지기 전 해당 페이지의 (부모) WFrame에서 발생합니다.
1012,f1941e9f7af20dc8,normal,Audio 컴포넌트를 더블클릭하여 Audio 파일의 경로와 종류를 설정합니다. 경로는 절대경로를 입력해야 합니다.
1013,84a0445fb8c2fc20,note,"<strong>파일 경로 주소</strong>
예) 프로젝트명 HTML5
--HMLT5
--------Audio.xml
--------audio.mp3

audo.mp3의 경로는 <strong>""/HTML5/audio.mp3""</strong> 입니다."
1014,8a9f2d5aa792a134,normal,컴포넌트를 더블클릭하면 음원 파일의 위치를 지정할 수 있는 대화창이 열립니다.
1015,428022bc1fb9a4eb,normal,"소개 컨텐츠 또는 네비게이션에 사용되며 Header 컴포넌트는 <kbd>&lt;footer&gt;</kbd>, <kbd>&lt;address&gt;</kbd> 태그에서 사용할 수 없으며 <kbd>&lt;header&gt;</kbd> 태그 내에 또 다른 <kbd>&lt;header&gt;</kbd> 태그를 사용할 수 없습니다."
1016,b89b4fbe63cc7c13,normal,<code>$p.openPopup()</code> 함수를 사용하여 아래와 같이 세 종류(<code>type</code>)의 팝업을 생성할 수 있습니다.
1017,9c47d7dbfb84b1d2,normal,아래 예제와 같이 <kbd>type</kbd>을 <kbd>wframePopup</kbd>으로 지정하면 WFrame 팝업을 생성할 수 있습니다.
1018,2259c795e97608d7,normal,<code>$p.openPopup()</code> 함수를 사용하여 팝업을 생성할 때 <code>options.modal </code>옵션을 통해 모달 혹은 모달리스 팝업으로 생성할 수 있습니다.
1019,a660cf57ec3e243a,normal,특정 프레임 영역에만 표시되는 팝업을 프레임 모달 팝업이라고 합니다. <code>$p.openPopup() </code>함수를 통해 팝업 생성 시 <code>options.frameModal</code> 옵션 속성 설정을 통해 팝업을 표시할 프레임을 지정할 수 있습니다.
1020,a3af5b9d65b74dac,definition_list,"<code>options.frameModal</code>
<code>""frame""</code> - 팝업이 호출된 프레임
+ <code>""parent""</code> - 팝업이 호출된 프레임의 부모 프레임
+ <code>""top""</code> - 최상단 화면
+ <code>frameId</code> - 팝업을 표시할 프레임의 ID. ($p.getFrame() 등을 통해 해당 프레임에 직접 접근해서 구함.)"
1021,6530ef0959227bed,normal,"WFrame, WindowContainer, TabControl 내에서 이중으로 팝업을 생성할 경우, 모든 자식 팝업을 부모 팝업과 함께 닫을 수 있습니다. 좀 더 자세한 설명은 각 컴포넌트의 해당 항목을 참고하십시오."
1022,d7f13732c5021698,unordered_list,"* <a class=""reference"" href=""#ab072cd2a3f5e06b"">WFrame</a> ­ <a class=""reference"" href=""#5472241cb1a16dba"">팝업 생성 및 팝업 닫기</a>
* <a class=""reference"" href=""#0eeccc9d7fde2d33"">TabControl</a> ­ <a class=""reference"" href=""#a302a9227a5c90a3"">부모 ­ 자식 팝업 닫기</a>
* <a class=""reference"" href=""#c65cb349eb266637"">WindowContainer</a> ­ <a class=""reference"" href=""#55f8d3c9f488390a"">부모 ­ 자식 팝업 닫기</a>"
1023,9abdcc9728ad7051,normal,WFrame으로 생성한 팝업은 <kbd>$p.getPopupWindow</kbd> 및 <kbd>$p.parent</kbd> API를 통해 참조할 수 있습니다.
1024,42ad8cf7c9def374,caution,"<kbd>$p.getParameter</kbd>

메인 화면 및 팝업으로 사용할 수 있는 페이지의 경우, 기존의 <kbd>$p.getPopupParam()</kbd> 대신 <kbd>$p.getParameter()</kbd>로 API를 사용할 것을 권장합니다."
1025,053a6fd7cd8553a3,normal,<code>$p.openPopup()</code> 함수로 새로 생성하는 팝업으로 <code>dataObject</code>를 통해 파라미터를 전달할 수 있습니다. 생성된 팝업에서는 <code>$p.getParameter()</code> 함수를 통해 전달받은 파라미터 확인 가능합니다.
1026,43e87a8aa0ec3e90,normal,<kbd>$p.parent().$p.parent().input1.getValue();</kbd>
1027,53420192f32c2d82,normal,<kbd>$p.main().input1.getValue();</kbd>
1028,ef6df49aa16a55af,normal,"<kbd>$p.getPopupWindow(""popup1"").$p.getPopupWindow(""popup11"").scwin.test();</kbd>"
1029,f6b9f84b513f013c,normal,"<kbd>$p.main().$p.getPopupWindow(""popup2"").$p.getPopupWindow(""popup2-1"").scwin.test();</kbd>"
1030,380a98679b1fc07a,normal,"<code>options.processMsagFrame=""true""</code> 옵션으로 <code>$p.openPopup()</code> 함수를 실행하여 팝업을 생성할 때, 팝업 페이지 로딩 후에 즉시 <code>$p.executeSubmission()</code> 함수를 실행할 경우 (예: 팝업 페이지의 <code>onpageload</code> 이벤트를 사용), 서브미션 상태창을 팝업 내부 혹은 외부에 표시할 수 있습니다."
1031,535a4ca6c14d3220,normal,"<span class=""r_italic_span"">config.xml</span> 파일의 <code>&lt;popup&gt;</code> ­ <code>&lt;lazyPopup&gt;</code> 항목을 아래와 같이 설정하십시오."
1032,5216fc529b75da03,unordered_list,"* <code>""true""</code> : 서브미션 상태 창이 팝업 <strong>외부</strong>에 표시됨. 
* <code>""false""</code> (기본 값) : 서브미션 상태 창이 팝업 <strong>내부</strong>에 표시됨."
1033,07d711fb234df563,normal,"<strong><span class=""r_italic_span"">Config.xml</span> </strong>파일의 <code>&lt;processMsgFrameURL&gt;</code> 항목 설정을 변경하여 해당 상태창의 소스를 변경할 수도 있습니다."
1034,2f59a0327894cb89,normal,"WFrame의 <code>src</code> 화면이 서브미션을 포함할 경우, 서브미션 실행 시 표시되는 상태창을 WFrame 내부에 표시할 수 있습니다."
1035,9d932c5e3d21cdba,normal,"<strong><span class=""r_italic_span"">Config.xml</span> </strong>파일의 <code>&lt;processMsgFrameURL&gt;</code> 항목 설정을 변경하여 해당 상태창의 소스를 변경할 수도 있습니다."
1036,8633548dec90359f,normal,"WFrame으로 생성한 윈도우의 <code>src</code> 화면이 서브미션을 포함할 경우, 서브미션 실행 시 표시되는 상태창을 WFrame 탭 내부에 표시할 수 있습니다."
1037,416a2be22e7f469e,normal,"<strong><span class=""r_italic_span"">Config.xml</span> </strong>파일의 <code>&lt;processMsgFrameURL&gt;</code> 항목 설정을 변경하여 해당 상태창의 소스를 변경할 수도 있습니다."
1038,53ce23a3c0fe74f3,normal,아래와 같이 <kbd>fullscreen:true</kbd>옵션을 사용하여 화면 전체에 팝업을 표시할 수 있습니다.
1039,96ad1883416cb6c4,caution,"해당 속성은 IE에서만 지원. 
크롬, 사파리, 오페라 등은 추후 지원 예정."
1040,0b35606555291c3d,pre,"<kbd>$p.openPopup</kbd>으로 팝업을 생성할 경우, 아래의 옵션을 사용하여 팝업창의 크기를 조절하는 버튼을 제어할 수 있습니다."
1041,960171f9a431d0bb,unordered_list,"* <kbd>useControl</kbd>: 버튼의 표시 여부 결정.
* <kbd>controls</kbd>: 표시할 버튼의 종류를 결정. (최대화, 최소화, 복원)"
1042,c60dc7c81c35e0e7,definition_list,"관련 옵션
<kbd>options.foldOnMinimized: true</kbd> 최소화 버튼을 누를 경우 바디를 접음
+ <kbd>options.foldSize: {width: 300}</kbd> 접은 바디의 폭"
1043,efeab5c8de2d3c15,normal,"여러 팝업을 생성하는 경우, 가장 최상단에 표시할 팝업을 지정하고 해당 팝업을 활성화할 수 있습니다."
1044,135ef80364a7840f,normal,"<code>$p.getPopupWindow()</code> 함수를 사용하여, 주어진 ID에 해당하는 <code>type=""wframePopup""</code> 팝업 윈도우를 객체로 반환할 수 있습니다."
1045,c56b4a2fc41132af,normal,"<code>getAllPopupList()</code> 함수를 사용하면 <code>type=""iframePopup""</code> 및 <code>type=""browserPopup""</code> 그리고 <code>type=""wframePopup""</code> 팝업을 포함한 현재 열려 있는 모든 팝업 객체를 반환하고 해당 팝업 객체에 접근할 수 있습니다."
1046,eb9b1984da06144b,normal,"현재 열려 있는 WFrame으로 팝업은 <code>$p.getPopupWindowList()</code> 함수를 통해 확인한 후 각 <code>type=""wframePopup""</code> 팝업에 접근할 수 있습니다."
1047,d7e92dc8c75a3c1a,normal,"<code>getAllPopupList()</code> 함수를 사용하면 <code>type=""iframePopup""</code> 및 <code>type=""browserPopup""</code> 그리고 <code>type=""wframePopup""</code> 팝업을 포함한 현재 열려 있는 모든 팝업 객체를 반환할 수 있습니다."
1048,c2d89230f2019f08,normal,"<code>$p.isPopup()</code> 함수를 사용하여 현재 화면 혹은 부모 화면의 팝업 여부를 확인할 수 있습니다. (단, 팝업이 <code>wframePopup</code> 혹은 <code>browserPopup</code>인 경우에 한합니다.)"
1049,1f667e34608504a1,normal,<code>$p.isWFramePopup()</code> 함수를 사용하여 현재 화면 혹은 부모 화면이 WFrame 팝업인지 여부를 확인할 수 있습니다.
1050,1ecdec0b9ba8b3c2,normal,"<code>$p.openPopup()</code> 함수를 사용하여 팝업을 생성하고, 해당 팝업을 닫기 (X) 버튼을 클릭하여 닫을 때, 팝업을 닫기 전에 호출할 사용자 정의 함수를 <code>options.closeAction</code> 옵션을 통해 지정할 수 있습니다."
1051,89ff8a907b4e9fdd,normal,<code>$p.openPopup()</code> 함수를 사용하여 팝업을 생성할 때 <code>options.fixPosition</code> 옵션을 <code>true</code>로 지정하여 팝업의 위치를 고정할 수 있습니다.
1052,ca951cf7220ba245,normal,<code>toLunar()</code> 및 <code>toSolar()</code> 함수를 이용하여 양력 ↔ 음력 날짜간 변환이 가능합니다.
1053,91b0cf2d1eb1e7e8,definition_list,"정의
브라우저의 메모리에 할당되는 JavaScript 데이터 객체.
+ DataCollection<span class=""mark index"">DataCollection</span>은 다양한 종류의 방대한 데이터를 웹 브라우저에서 쉽게 제어하기 위해 WebSquare5가 사용하는 데이터 모델."
1054,ad7b285fd0216b2f,definition_list,"종류
DataMap: 단건 데이터 객체
+ DataList: 다건 데이터 객체
+ LinkedDataList: DataList 객체에 Filter/Sort를 적용한 결과"
1055,ede5709998ca9292,definition_list,"기능 
서버에 전달할 데이터 규격을 정의 (Reference)
+ 서버로 부터 받을 데이터 규격을 정의 (Target)"
1056,54c7d881fac3c122,note,브라우저와 서버 간의 통신은 DataCollection 데이터 모델과 Submission을 통해 설정합니다.
1057,5e6de521c885a058,definition_list,"주요 용도
화면에서 사용하고자 하는 임시 데이터
+ UI컴포넌트와 연동
+ 서버로 부터 받은 단일형(DataMap) 혹은 목록형(DataList) 데이터를 브라우저에 출력
+ 웹 브라우저로부터 원격의 서버에 존재하는 데이터를 (추가, 삭제, 편집 등) 관리할 수 있는 인터페이스 제공"
1058,a1fdbf8561f4243e,definition_list,"특징
DataCollection은 XML 구조와 XPath에 대한 이해 없이도 데이터 구조를 이해할 수 있는 직관적인 인터페이스를 제공. 
+ DataCollection 뷰에서 설정한 DataCollection의 코드는 Source 탭에 자동 생성됨.
+ 각 데이터 객체의 id는 필수값.
+ JSON, XML, JSON Array포맷으로 설정(set)하거나 또는 반환(get) 받을 수 있다.(LinkedDataList는 반환만 가능.)
+ 초기값을 정의할 수 있다. (LinkedDataList 제외)
+ 동적(Script)으로 생성 가능.
+ 데이터의 상태(추가/수정/삭제)값을 관리."
1059,06e50e050bccb905,normal,"아래는 개발자가 DataCollection 뷰에서 DataMap을 생성할 때 Source 탭에 자동 생성되는 코드입니다. 아래의 예에서 key/value 형태의 데이터 ""이름/홍길동, 주소/서울시 구로구, 이메일/user2@mail.com"" 한 건 존재합니다."
1060,78d79e6316195ae4,ordered_list,"# <strong>Outline</strong> ­ <strong>Head </strong>뷰를 선택합니다.
# <strong>DataCollection</strong>을 우클릭한 후, <strong>DataMap</strong>을 선택합니다."
1061,848ddf26087b0f95,ordered_list,"# 아래와 같은 창이 표시되면, 행 추가 버튼을 클릭하여 Key 정보를 입력합니다. (이미 데이터가 존재할 경우 복사하기-붙여넣기를 하십시오.)"
1062,c7faf0eeb94fc958,ordered_list,# 데이터 통신 없이 브라우저에 기본값을 표시할 경우<strong> Data</strong> 탭을 선택한 후 <strong>use data</strong> 옆의 첫번째 버튼을 클릭합니다.
1063,07da377df51b2237,ordered_list,"# 데이터 통신 없이 브라우저에 기본값을 표시할 경우 <strong>use data</strong>를 선택하고, Key 정보에 따라 데이터를 입력합니다."
1064,eeff91e146c3d89e,ordered_list,"# DataMap에 정의된 형태의 데이터를 출력할 화면을 Design 탭에서 구성합니다.
# <strong>Key Info</strong> 부분에서 Key를 클릭한 후 해당 Key의 바인딩할 컴포넌트로 드래그-앤-드롭합니다.
# 바인딩된 컴포넌트에 초록색 표시가 나타나는지 확인합니다."
1065,7de27d6e850aa310,ordered_list,"# 미리 보기 버튼을 클릭합니다.
# 위의 6 ~ 8 단계에서 입력한 데이터가 표시되는지 확인합니다."
1066,5a21ec0e2eef6682,normal,"<code>onbeforemodelchange</code> 이벤트는 데이터 값이 변경되기 직전에 발생하며, <code>rowIndex</code>, <code>colID</code>, <code>oldValue</code>, <code>newValue</code> 값을 JSON 형식으로 받습니다. 이벤트 핸들러가 <code>false</code>를 반환하면, 데이터 변경을 취소하고 예전 값으로 돌아가고, 이외의 경우에는 입력된 값으로 데이터가 변경됩니다."
1067,9aeb942a9853c0a2,normal,"<code>onkeyset</code> 이벤트는 <code>set()</code> 함수를 사용하여 특정 <code>key</code>의 값을 변경할 때 발생하며, 해다 <code>key</code>와, 이전 값, 그리고 새로 변경되는 값을 반환합니다."
1068,1dc9645da50292c8,normal,"아래는 개발자가 DataCollection 뷰에서 DataList을 생성할 때 Source 탭에 자동 생성되는 코드입니다. 아래 예에서 ""이름, 주소, 이메일"" 칼럼에 대해 ""홍길동, 서울시 구로구, user2@mail.com""와 ""이태백, 서울 강남구, user2@mail.com"" 두 건의 데이터 존재합니다."
1069,5cf8808fbf8e495a,ordered_list,"# <strong>Outline</strong> ­ <strong>Head </strong>뷰를 선택합니다.
# <strong>DataCollection</strong>을 우클릭한 후, <strong>DataList</strong>를 선택합니다."
1070,ba03387dacb72906,ordered_list,"# 아래와 같은 창이 표시되면, 행 추가 버튼을 클릭하여 데이터를 입력합니다. (이미 데이터가 존재할 경우 복사하기-붙여넣기를 하십시오.)"
1071,847d08b92b932a2b,ordered_list,"# 데이터 통신 없이 브라우저에 기본값을 표시할 경우<strong> Data</strong> 탭을 선택한 후 <strong>use data</strong>를 선택하고, 컬럼 별 데이터를 입력합니다."
1072,00c166ba988ebe98,ordered_list,"# DataList에 정의된 형태의 데이터를 출력할 GridView를 Design 탭에 그립니다.
# <strong>Outline</strong> ­ <strong>Head </strong>­ <strong>DataCollection </strong>선택 후 바인딩할 DataList를 GridView로 드래그-앤-드롭합니다."
1073,dbf286c967de5a75,ordered_list,# 아래와 같은 창이 나타나면 OK를 클릭합니다.
1074,284e7a2ebb582037,ordered_list,# GridView 상의 툴팁 혹은 <kbd>dataList</kbd> 속성 설정을 통해 바인딩 상태를 확인할 수 있습니다.
1075,666c2b22f4371469,ordered_list,# 혹은 <strong>Outline</strong> ­ <strong>Head </strong>뷰에서 DataList를 우클릭한 후 <strong>Search bound component</strong>를 클릭하여 해당 DataList와 바인딩된 컴포넌트를 확인할 수 있습니다.
1076,a52b5f167a9ee320,ordered_list,# 브라우저에서 Page 화면을 실행하여 정상적으로 바인딩 되었는지 확인합니다.
1077,411250ce04c1c325,normal,LinkedDataList는 DataList의 데이터를 필터링하거나 정렬한 결과만을 저장하는 객체입니다. DataList 데이터를 필터링하여 아래와 같은 컴포넌트의 선택항목으로 표시할 때 LinkedDataList를 사용하십시오
1078,3b709a0228a165f6,unordered_list,"* AutoComplete
* CheckBox
* CheckComboBox
* MultiSelect
* Radio
* SelectBox"
1079,03e23e82697968b3,note,"<strong>권장 사용법</strong>

DataList의 데이터는 1,000 건 이하를 권장하며 최대 10,000건까지 지원합니다."
1080,e218e59093647622,normal,"LinkedDataList는 행 추가, 데이터 일괄 추가, 데이터 전체 삭제 기능을 제외한 DataList에서 지원하는 함수를 모두 지원합니다."
1081,ea9837ebbb5974d2,ordered_list,"# 위의 에서 설명한 것과 동일한 방법으로 DataList를 생성합니다. 
# 다시 [Add]를 클릭합니다.
# [LinkedDataList 추가하기]를 선택합니다.
# 정렬 조건이나 필터링 조건을 입력합니다.
# LinkedDataList의 <code>bind</code> 속성을 위에서 생성한 DataList로 지정합니다.
# 위의 DataList에서 설명한 것과 동일한 방법으로 컴포넌트를 그리고 생성한 LinkedDataList와 바인딩합니다."
1082,4674f5d4ba49b714,normal,<code>setCondition()</code> 함수를 사용하여 LinkedDataList의 정렬 및 필터링 조건을 설정할 수 있습니다.
1083,61a812a8f73ebcca,definition_list,"조건식 
Oracle의 DB SQL문과 동일합니다."
1084,828224e207f578bf,definition_list,"초기 생성
LinkedDataList 생성 시 <strong>Sort Condition</strong>으로 지정."
1085,ef2c1b2ccfa401c6,definition_list,"함수
<code>setCondition</code> 함수를 사용."
1086,caf3a97242a73fb8,definition_list,"초기 생성
LinkedDataList 생성 시 <strong>Filter Condition</strong>으로 지정."
1087,a0ed9691e587d16a,definition_list,"함수
<code>setCondition</code> 함수를 사용."
1088,ca3c417cb733df47,normal,LinkedDataList의 필터링 및 정렬 조건을 설정하는 예제입니다.
1089,a7c52d1c0b3b1124,normal,Radio와 바인딩된 LinkedDataList의 정렬 및 필터링 조건을 설정하는 예제입니다.
1090,773fc50dcc2ca7f2,normal,<code>setColumnFilter()</code> 함수를 사용하여 LinkedDataList의 데이터를 필터링할 수 있습니다.
1091,88c68d8e40ed5a46,normal,"Studio에서 DataList, DataMap, LinkedDataList를 생성한 후, 웹스퀘어가 제공하는 디버깅 메뉴를 이용하여 생성한 DataList, DataMap, LinkedDataList의 데이터를 확인할 수 있습니다."
1092,446954c50fd7d8f4,normal,"Studio의 <strong>Outline 뷰</strong> ­ <strong>Head 탭</strong>에서 DataCollection을 우클릭한 후, 각 메뉴를 선택하여 DataMap, DataList, LinkedDataList를 생성할 수 있습니다."
1093,7c25da33bc34c683,normal,"DataMap, DataList, LinkedDataList를 생성한 페이지를 브라우저에 로딩한 후, Ctrl 버튼을 누른채로 마우스를 우클릭하면 아래와 같이 디버깅 메뉴가 표시됩니다. View dataCollection 메뉴를 선택하여 생성한 DataMap, DataList, LinkedDataList를 확인할 수 있습니다."
1094,c487133f7423c125,normal,<kbd><strong>$p.data.create();</strong></kbd> 함수를 사용하여 DataCollection을 동적으로 생성할 수 있습니다.
1095,f68597eb233163e6,normal,특정 Page의 DataCollection을 복사해서 다른 Page 에서 사용하는 것이 가능합니다.
1096,c06791afda73ff60,normal,"<strong>Outline</strong> ­ <strong>Head </strong>뷰를 선택 후, 복사/삭제할 DataCollection을 클릭한 후 해당 메뉴를 선택하십시오."
1097,e67a7cce85dc1981,normal,JavaScript에 익숙한 사용자의 경우 API를 통해 아래와 같은 기능을 직접 사용할 수 있습니다.
1098,db650388245ba5ed,note,"전체 API에 대한 자세한 설명은 <a class=""link"" href=""https://docs.inswave.com/websquare/websquare.html?w2xPath=/support/api/ws5_sp4/api.xml"">API 가이드</a>를 참고하십시오."
1099,6564a585f44362eb,normal,"<a class=""reference"" href=""#70224f5943898996"">DataList 여러 개 → Excel 다운로드</a> 참조."
1100,6e42cc5c0dfb2320,normal,DataList의 전체 데이터를 JSON으로 변환하여 1차원 배열로 반환할 수 있습니다.
1101,1ace0e58c84091fc,normal,"DataList가 필터링된 경우, DataList 각 칼럼의 필터링 상태를 반환하는 함수입니다. 사용 방법은 아래와 같습니다."
1102,fbfc770a7a7a46e1,normal,"아래는 현재 필터링 상태를 저장한 후, 필터링을 해제하고 다시 이전 필터링 상태로 돌아가는 예제입니다."
1103,9b1ee00e772ca524,normal,<kbd>getFilteredRowIndex( realRowIndex );</kbd> 함수를 통해 필터링 후 행의 변경된 인덱스를 확인할 수 있습니다.
1104,f213b04e94e04bfc,normal,"<code>setUserData()</code> 및 <code>getUserData(</code>) 함수를 이용하여 DataList의 <code>userData1</code>, <code>userData2</code>, 혹은 <code>userData3</code> 속성 값을 설정하거나 반환할 수 있습니다. 모든 DataCollection 컴포넌트(aliasDataMap, aliasDataList, aliasLinkedDataList, dataMap, linkedDataList 포함)에 대해 동일하게 사용할 수 있습니다."
1105,d4c44962aba7b90f,normal,"<code>dataList.column</code>의 <code>importFormatter</code> 속성으로 사용자 정의 함수를 지정한 후, 해당 함수를 통해 컬럼의 데이터를 변경할 수 있습니다."
1106,dccf5d5c9692f70e,normal,"WFrame을 사용할 경우, 모든 동작은 Scope 내에서 실행됩니다. 즉, WFrame 내에서 GridView를 사용할 경우 바인딩 되는 DataCollection 역시 동일한 WFrame 내에 존재해야 합니다. 단, 실제 업무 환경에서는 메인 화면에 존재하는 DataCollection을 여러 화면의 GridView가 참조하는 경우가 많습니다. 이 같은 요구를 해결하기 위한 것이 Alias DataCollection입니다."
1107,7a12a4c5b8ac404b,normal,"각 WFrame 내에 AliasDataCollection을 정의한 후, 실제 바인딩되는 메인 (혹은 부모) 화면의 DataCollection과 연결하여 이 같은 업무 환경을 지원할 수 있습니다."
1108,089f4f1f6b4409ce,normal,DataCollection이 제공하는 모든 API를 AliasDataCollection에서 동일하게 사용할 수 있습니다다.
1109,ac62f34bed74dd38,caution,"<strong>제약사항</strong>

부모 화면에 있는 DataCollection 참조만 지원합니다. 
자식 및 형제 참조는 지원하지 않습니다."
1110,ef95ca5adb3e7ff7,normal,AliasDataCollection은 아래와 같은 제약사항을 갖습니다.
1111,6578121f2681ad0a,ordered_list,"# 부모 페이지만 참조할 수 있습니다.
# 동일한 유형만 링크할 수 있습니다. (예를 들어, aliasDataList는 DataList만 참조 가능합니다.)
# aliasDataList는 다른 화면의 aliasDataList를 참조할 수 없습니다.
# Scope에 지정된 객체가 존재하지 않는 경우, 빈 DataCollection이 생성됩니다. 이 경우 <kbd>setScope</kbd>를 이용하여 참조할 DataCollection을 다시 지정하십시오."
1112,48501a96c07f7c36,normal,다음은 <strong><kbd>strictMode</kbd></strong>를 설정하고 WFrame을 사용하여 화면을 구성한 예입니다. WFrame 내부의 GridView는 Alias DataList를 통해 메인 화면의 GridView와 바인딩된 DataList를 참조합니다.
1113,b5a8fcb8b92bc451,normal,다음은 메인 화면의 DataList를 참조하는 Alias DataList를 작성하여 이를 WFrame 내부의 GridView와 바인딩하는 방법을 설명한 것입니다.
1114,46243d61ceece0b9,ordered_list,"# <span class=""r_bold01_span"">DataCollection</span> 탭을 선택합니다.
# <strong>Add</strong> - <strong>AliasDataList</strong>를 클릭합니다."
1115,fe04d99fc7587576,ordered_list,# AliasDataList의 <kbd>id</kbd>와 <kbd>scope</kbd> 속성을 아래와 같이 지정합니다.
1116,e4d360484e692725,unordered_list,"* <kbd>id</kbd>: ID 지정. (예: <kbd>ds_dataList1</kbd>)
* <kbd>scope</kbd>: 부모 화면에 있는 참조 대상 DataCollection을 지정. 절대 경로 및 상대 경로 모두 지원. 
** (예) 상대 경로: <kbd>scope=""../dataList_parent""</kbd>
** (예) 절대 경로: <kbd>scope=""main/dataList_main2""</kbd>"
1117,35263c578de83681,ordered_list,"# <strong>Design</strong> 탭으로 이동합니다. 
# WFrame 화면의 GridView를 선택합니다.
# dataList 속성을 위의 제 3단계에서 설정한 AliasDataCollection으로 선택합니다. (해당 Alias DataCollection은 ""<strong><span class=""r_blue001_span"">data:aliasDataCollection의_ID</span></strong>"" 형태로 표시됩니다."
1118,f7ee8687dfd80e3f,normal,"DataCollection 생성과 동일한 방법으로 script를 이용하여 aliasDataCollection을 생성할 수 있습니다. 단, option에 <kbd>scope</kbd> 속성을 추가해야 합니다."
1119,25258ebec4527809,normal,DataCollection 바인딩 하는 방법과 동일한 방식으로 컴포넌트에 바인딩할 수 있습니다.
1120,08adeeea9b9deb39,normal,"Submission은 서버와의 데이터 통신을 위한 모듈로서, AJAX로 구현되어 있습니다. Submission의 특징은 아래와 같습니다."
1121,73c4a753d6c5c26d,definition_list,"특징
서버와의 통신용 전송/수신 데이터를 DataCollection 형식으로 정의해야 함.
+ 화면의 전환 없이 데이터만 전송.
+ 동기/비동기 통신 선택 가능. 
+ 통신의 전/후 처리를 위해 각 이벤트에 호출할 함수 정의 가능.
+ Script를 통해 동적 Submission 생성 가능.
+ ID를 제외한 속성은 동적 변경이 가능."
1122,2d511b9a95bd7513,definition_list,"권장 내용
용도별로 Submission을 등록하는 것을 권장. (유지보수 편의성)
+ 화면의 코드성 데이터 통신은 공통 모듈을 만들어 이용할 것을 권장"
1123,6074fe45c3bacace,definition_list,"일반적인 순서
(1) 화면 UI 작성
+ (2) 서버와 주고 받는 데이터 형식 정의 (DataCollection 정의)
+ (3) 화면 UI와 DataCollection 바인딩
+ (4) Submission 생성
+ (5) Submission 실행 이벤트 정의"
1124,6a21ce8dc67d7cc4,normal,개발자는 데이터 통신을 위해 Submission은 정의하거나 AJAX를 통해 직접 통신 모듈을 개발할 수도 있습니다.
1125,fd7bc49666e5d7cd,normal,Ajax는 Submission을 생성하지 않고 서버를 호출할 수 있습니다.
1126,7acec8e2eb36eead,normal,다음은 Submission과 AJAX를 비교한 것입니다.
1127,48b9a0f4191b8b4a,normal,"즉, 웹 브라우저와 서버와의 데이터 통신이 필요한 경우 DataCollection을 생성하고 Submission을 정의해야 합니다. (본 장은 Submission을 위주로 설명합니다. DataCollection에 대한 자세한 설명은 본 매뉴얼의 DataCollection 부분을 참조하십시오.)"
1128,af3d84907e762f90,ordered_list,"# <strong>Outline</strong> ­ <strong>Head </strong>뷰를 선택합니다.
# <strong>Submission</strong>을 우클릭한 후, <strong>Add</strong>를 선택합니다."
1129,b9e5112625ab2673,ordered_list,# 아래와 같은 창이 표시되면 해당 정보를 입력합니다.
1130,b5bfad36d8bccfbd,normal,아래는 상단의 <strong>Detailed </strong>버튼을 클릭한 모습입니다. 하단의 <strong>Simple </strong>버튼을 클릭하면 위의 화면으로 돌아갈 수 있습니다.
1131,517a635de44b8d65,normal,아래와 같이 API를 활용하여 동적으로 Submission을 생성할 수도 있습니다.
1132,741139b01670f410,normal,아래와 같이 오브젝트 형태로 Submission 객체를 생성하십시오. 속성은 Submission 생성창의 속성과 동일합니다.
1133,a8c329474f8639dd,normal,Submission의 생성만으로는 데이터를 주고 받을 수 가 없습니다.
1134,e18d10c38272b99e,normal,Submission 실행시 비동기(Asynchronous) 모드의 통신을 권장합니다.
1135,1a92219cf3976484,normal,"<strong><span class=""r_italic_span"">config.xml </span></strong>파일에 <kbd>&lt;warningSyn&gt;</kbd> 항목이 <strong><span class=""r_systemfont_span""><span class=""r_blue001_span"">""true""</span></span></strong>로 설정된 경우, 동기(synchronous) 모드의 Submission에 대해 경고 메시지가 표시됩니다."
1136,71bff7635b639d0b,normal,<strong>Outline</strong> ­ <strong>Head </strong>뷰에서 <strong>Submission</strong>을 우클릭한 후 <strong>Event</strong>를 선택합니다.
1137,5ab39f12dbc66bbd,note,<strong>xforms-submit-done</strong> : Response Status 코드 값이 정상 일 경우 동작.
1138,9edf317498c6d406,note,<strong>xforms-submit-error</strong> : Response Status 코드가 오류 (200 미만 300 이상) 일 경우 동작.
1139,6650df2c3ecf7ea0,normal,<code>setRequestHeader()</code> 함수를 사용하여 각 서브미션에 대해 request header를 설정할 수 있습니다.
1140,36d0fdd7274f5c68,normal,데이터를 주고받기 위해서는 생성된 Submission 을 실행시켜야 합니다.
1141,468db58e2739e2de,normal,<kbd>$p.executeSubmission</kbd> API를 활용하여 아래와 같이 Submission을 실행하십시오.
1142,1097b2bd6803975d,normal,"<strong><code><span class=""r_blue_span""><kbd>abortTrigger=""true""</kbd> </span></code></strong>속성 설정을 통해 Submission을 중단할 수 있는 취소 버튼을 화면에 출력할 수 있습니다. 사용자가 이 버튼을 클릭하면 현재 실행중인 Submission은 중단됩니다."
1143,6b00c3d942c38f26,normal,지정한 ID의 Submission이 현재 실행 중일 경우 해당 Submission을 중단할 수 있습니다.
1144,5d4e6b7afd57b0b5,normal,"<code>dataType=“bigDecimal”</code> 혹은 <code>“number”</code> 컬럼의 데이터가 없는 경우 전송 데이터에서 제외할 수 있습니다. <code><span class=""r_italic_span"">config.xml</span></code> 파일에서 <code>&lt;exceptEmptyValue&gt;</code> 항목을 아래와 같이 설정하십시오."
1145,2185bc2be8531cb5,ordered_list,"# Project Explorer에서 마우스 우클릭 후 <strong>New ­ WebSquare Project</strong>를 선택합니다.
# 프로젝트 명(""<strong><em>edu</em></strong>"")을 입력하고 <strong>Next</strong>를 클릭합니다.
# <strong>Context Root</strong>를 ""<strong>/</strong>""로 지정한 후 <strong>Finish</strong>를 클릭합니다.
# 새로 생성한 프로젝트를 마우스 우클릭 후 <strong>New ­ WebSquare Page</strong>를 선택합니다.
# 파일 명(""<strong><em>sample</em></strong>"")을 입력합니다."
1146,b3713eb194777768,ordered_list,"# GridView에 표시할 데이터 파일을 준비합니다. (일반적인 경우 서버에 있는 데이터를 수신하나, 본 예제의 경우 로컬 파일을 사용하겠습니다.)"
1147,f70daca1e709e65e,ordered_list,# 위의 데이터 파일에 따라 아래와 같이 DataList를 정의합니다.
1148,284ef8799fbde0a3,note,Submission을 통해 서버의 데이터를 가져오거나 보내려면 DataCollection 객체가 필요합니다. DataCollection은 데이터 통신시 클라이언트와 서버가 주고 받을 데이터 형식을 정의합니다.
1149,55916460901d5714,ordered_list,# DataList에 정의된 형태의 데이터를 출력할 GridView를 Design 탭에 그립니다.
1150,033668512923d182,ordered_list,"# <strong>Outline</strong> ­ <strong>Head</strong> 뷰에서 DataList를 GridView로 드래그-앤-드롭하여 GridView와 DataList를 바인딩합니다. 혹은, GridView 우클릭 후 <strong>Bind</strong> ­<strong> Bind Set</strong>을 클릭하여 바인딩할 DataList를 선택합니다."
1151,1544695605d7e4f4,ordered_list,# <strong>Outline</strong> ­ <strong>Head</strong> 뷰에서 Submission을 추가합니다.
1152,f977f6443096095d,ordered_list,# Submission을 실행할 스크립트를 추가합니다.
1153,22678d07abf755a0,normal,아래 내용을 먼저 확인한 후 개발을 시작하십시오.
1154,c8771b8f03e43e46,unordered_list,"* 아래와 같은 선택 컴포넌트의 경우 선택 대상 항목을 지정해야 합니다. 브라우저는 개발자가 지정한 선택 대상 항목을 출력하고, 사용자는 이 중 하나를 선택합니다.
** AutoComplete
** CheckBox
** CheckComboBox
** Radio
** MultiSelect
** SelectBox
** Spinner"
1155,ced294756dca583b,unordered_list,"* 개발자는 정적으로 혹은 동적으로 선택 대상을 설정할 수 있습니다.
** 선택 대상 항목을 고정하거나, (정적 설정)
** 서버로 부터 수신하는 결과에 따라 선택 대상 항목을 출력할 수 있습니다. (동적 설정)"
1156,04c4a412c19a284b,normal,컴포넌트에 따라 한 개 혹은 여러 개의 항목을 선택할 수 있습니다.
1157,e567ba2638f90a05,normal,아래는 SelectBox의 예입니다.
1158,ac1cbbc939dcb7f6,ordered_list,"# Palette 뷰를 클릭합니다. 
# SelectBox 컴포넌트를 검색하여 Design 탭에 그립니다. 
# SelectBox 컴포넌트를 더블 클릭합니다.
# 대화창이 나타나면 행을 추가합니다.
# <strong>Name</strong>과 <strong>Value</strong>를 수동으로 입력합니다. (<strong>Name</strong>이 실제 화면에 출력됩니다.)
# <strong>Span</strong> 속성을 통해 데이터를 표시할 열의 개수를 입력합니다.
# <strong><kbd>chooseOption</kbd></strong>과<strong> <kbd>chooseOptionLabel</kbd> </strong>속성을 통해 ""선택하세요"" 같은 선택 안내 메시지를 정의합니다.
# <strong>[OK] </strong>버튼을 클릭합니다."
1159,c3aafb264254e9b5,normal,Submission을 통해 서버로부터 수신한 데이터를 선택 대상 항목으로 표시할 수 있습니다. 아래 방법으로 동적으로 변경되는 데이터를 설정하십시오.
1160,3487bf3ccdcdc2a0,normal,아래는 SelectBox의 예입니다.
1161,34a0809d57a9e2ec,ordered_list,"# 좌측 상단의 DataCollection 뷰를 클릭합니다.
# <strong>[Add]</strong>를 클릭합니다.
# <strong>[DataList 추가하기]</strong>를 선택합니다.
# <strong>Column Info </strong>상자의 우측상단에 있는 <img src=""/r/image/get/8348b9f6ad608dd2"" width=""106"" height=""34"" /> 버튼을 클릭하여 Column을 한 개만 정의합니다.
# 데이터 통신 없이 브라우저에 기본값을 표시할 경우<strong> use data</strong>를 선택합니다.
# 위의 제 3단계에서 입력한 Column 정보에 따라 데이터를 입력합니다.
# Palette 뷰를 클릭합니다.
# SelectBox를 선택하여 Design 탭에 그립니다.
# SelectBox를 더블 클릭합니다.
# 하단의 ItemSet을 선택합니다."
1162,aa61e770a76c6eba,ordered_list,"# Nodeset 항목에서 위의 1 ~ 6 단계에서 만든 DataList를 선택합니다.
# <strong>[OK]</strong>를 클릭합니다."
1163,3cd1196b8434598b,normal,AutoComplete 및 SelectBox의 경우 GridViewItemSet을 선택 대상 항목으로 설정할 수 있습니다. 선택 대상 항목은 GridView 형태로 표시됩니다.
1164,7a2edee3e55ea4c0,ordered_list,"# SelectBox를 그립니다.
# 바인딩할 DataCollection을 생성합니다.
# SelectBox를 더블 클릭합니다.
# 대화창이 나타나면 GridItemSet 항목을 선택합니다.
# DataList를 Nodeset으로 선택하고, Label(이름)과 Value(실제값)를 입력합니다. (DataCollection에 바인딩된 데이터를 사용하십시오)
# <strong>[Add Row]</strong>와<strong> [Delete Row]</strong>를 사용하여 GridView 정보를 입력합니다. 
# <strong>[OK] </strong>버튼을 클릭합니다."
1165,1ae13b6bd31259bf,normal,<kbd>&lt;w2:gridViewItemset&gt;</kbd> 노드에 <kbd>rowStatusVisible</kbd> 및 <kbd>rowNumVisible</kbd> 속성을 수동으로 설정하면 행 상태 및 행 번호를 추가할 수 있습니다.
1166,21910700b261ac06,normal,아래의 경우 <kbd>displayMode</kbd> 속성을 사용하여 선택 항목 표시 방법을 설정할 수 있습니다.
1167,dc4a1459e372964f,unordered_list,"* <strong>AutoComplete</strong>
* <strong>SelectBox</strong>
* <strong>GridView</strong> 컬럼 (<kbd>inputType=""autocomplete""</kbd> 혹은 <kbd>inputType=""selectbox""</kbd>인 경우)"
1168,de6780f26b90c181,normal,"DataList와 바인딩하여 선택 항목을 표시할 경우, 바인딩된 DataList의 특정 컬럼 값을 기준으로 일부 선택 항목을 숨길 수 있습니다."
1169,103592a6a89471eb,normal,"아래 컴포넌트의 경우 스크롤링 제어가 가능합니다. 즉, 사용자가 선택 목록 상에서 마우스 휠을 움직일 때의 동작을 지정할 수 있습니다."
1170,b2e55e7147f46b4e,unordered_list,"* <strong>AutoComplete</strong>
* <strong>SelectBox</strong>"
1171,b383c7e5bd0564cf,normal,관련 속성은 아래와 같습니다.
1172,3ed5df69179ddac4,note,<kbd>wheelStop</kbd> 옵션은 Studio에서 UI로 제공되지 않습니다. 아래와 같이 직접 스크립트에 지정하십시오.
1173,5cb5e95816c31c93,normal,입력 컴포넌트의 경우 사용자가 입력한 데이터를 검증해야 합니다. 예를 들어 사용자가 필수 데이터를 입력했는지 혹은 입력한 데이터가 적절한지 등을 검증할 필요가 있습니다.
1174,7a816a8321d32e6d,definition_list,"검증 기능을 제공하는 입력 컴포넌트 
AutoComplete
+ CheckBox
+ CheckComboBox
+ InputBox
+ InputCalendar
+ MultiSelect
+ Radio
+ SearchBox
+ Secret
+ SelectBox
+ TextArea"
1175,7c268f0e2dea2981,normal,각 입력 컴포넌트에 검증 관련 속성을 설정한 후 <kbd>validate()</kbd> 함수를 호출하여 입력 값을 검증할 수 있습니다.
1176,8b0650239b0bc325,normal,검증 실패시 출력할 메시지를 아래의 방법으로 설정합니다.
1177,cbb20ce58c2e42d5,unordered_list,"* <strong><kbd>displaymessage</kbd> </strong>속성을 <strong><kbd>true</kbd></strong>로 설정합니다.
* <strong><kbd>invalidMessage</kbd> </strong>속성에 원하는 메시지를 입력하십시오. (<strong><kbd>invalidMessage</kbd> </strong>속성을 정의하지 않으면 기본 메시지가 출력됩니다.)"
1178,90dec3a35d1e69eb,normal,<strong><kbd>invalidMessageFunc</kbd></strong> 혹은 <strong><kbd>validator</kbd> </strong>속성을 사용자가 JavaScript로 정의한 함수로 설정하여 입력 데이터를 검증할 수 있습니다.
1179,70966d23133c3074,normal,검증이 필요한 단계에서 <strong><kbd>validate()</kbd></strong> 함수가 호출되면 <strong><kbd>invalidMessageFunc</kbd></strong> 속성에 정의된 함수가 유효성 검사를 수행합니다.
1180,e2f03f6e6627797a,normal,<strong><kbd>invalidMessageFunc</kbd></strong> 속성으로 설정한 함수는 아래와 같은 API를 사용할 수 있습니다.
1181,e6dd981f224e3e34,normal,"입력 컴포넌트에서 포커스가 빠져 나올 경우(<strong><kbd>onblur</kbd> </strong>이벤트), <strong><kbd>validator</kbd></strong>에 정의된 함수가 유효성 검사를 진행합니다."
1182,77ee9751a91146f8,normal,<strong><kbd>invalidMessageFunc</kbd></strong> 혹은 <strong><kbd>validator</kbd> </strong>속성을 사용자가 JavaScript로 정의한 함수로 설정하여 입력 데이터를 검증할 수 있습니다.
1183,ba3e8e32b9695559,normal,"<kbd>invalidMessageFunc</kbd>, <kbd>invalidMessage</kbd>, <kbd>displaymessage</kbd>를 모두 설정하더라도 아래의 우선순위에 따라 한가지만 적용됩니다."
1184,9d39452accbb4789,unordered_list,"* 검증 항목으로 설정한 속성에 대해 <kbd>validate();</kbd> 함수는 검증을 수행하여 결과를 true/false로 반환합니다.
** 입력 검증 결과가 false이고 <kbd>displaymessage=""true""</kbd>로 설정된 경우, 
*** 함수 내부에 정의된 메시지가 표시됩니다.
*** <kbd>invalidMessage=""<span class=""r_blue_span"">검증 실패 안내 메시지</span>""</kbd>까지 설정된 경우, <kbd>invalidMessage</kbd> 속성으로 설정한 ""검증 실패 안내 메시지""가 표시됩니다.
* 검증을 수행하고 결과를 표시할 함수를 구현한 뒤, 해당 함수를 <kbd>invalidMessageFunc</kbd> 속성으로 설정할 경우, 해당 함수를 통해 검증을 수행하고 메시지를 표시할 수 있습니다."
1185,e10aee0a211de9ab,normal,"<kbd>mandatory=""true""</kbd>인 경우, <kbd>validate();</kbd> 함수는 검증을 수행하여 결과를 true/false로 반환합니다."
1186,dd57eec314bdf660,normal,입력가능한 텍스트를 지정하여 사용자 입력을 제어할 수 있습니다.
1187,3eb5f5cc4e5b234b,note,"<kbd>dataType=""number""</kbd>인 경우 <kbd>IME-MODE</kbd>, <kbd>allowChar</kbd>, <kbd>ignoreChar</kbd> 등을 추가로 사용하지 않아도 숫자만 입력 가능합니다."
1188,bbe8657d0a2f96cc,normal,"<kbd>allowChar</kbd> 속성을 ""0-9""로 설정하면 숫자만 입력 가능합니다."
1189,2beeba7e74526ee7,normal,"<kbd>allowChar</kbd> 속성을 ""가-_""로 설정합니다. 한글의 경우 영문 알파벳과는 달리 모음자 자음의 결합으로 구성되기 때문에 ""ㄱ-ㅎ""으로 설정할 경우, 텍스트는 입력 가능하지만 blur 상태에서는 텍스트가 사라지게 됩니다. 그렇기 때문에 가장 첫 글자인 ""가"" 와 가장 마지막인 ""_""으로 설정하면 모든 한글을 입력할 수 있습니다."
1190,9e5341c9f876959d,normal,<kbd>allowChar</kbd>의 반대 속성입니다. 입력 불가 텍스트를 지정하여 사용자 입력을 제어할 수 있습니다.
1191,ab6213a7f2fe5d7d,normal,"<strong><code>ignoreChar=""a-z A-Z""</code></strong>로 설정하면 영어 소문자 및 대문자 입력이 금지됩니다."
1192,569193be202dd1f2,normal,복사하기 &amp; 붙여넣기 방지하는 속성으로 기본값은<strong><code> false</code></strong>입니다.
1193,34852a5bb48c856e,normal,복사하기 &amp; 붙여넣기 방지하는 속성으로 기본값은<strong><code> false</code></strong>입니다.
1194,2593479d2d9a75bb,normal,아래 컴포넌트에 대해 <kbd>displayFormat</kbd> 및 <kbd>displayFormatter</kbd> 속성을 사용하여 사용자가 입력하는 데이터의 출력 방식을 설정할 수 있습니다.
1195,c4ec65231b95472c,unordered_list,"* InputBox
* InputCalendar
* SearchBox
* Secret"
1196,f7620cc9fdf7162f,normal,"데이터 유형별 입력 설정 및 특정 포맷을 지정할 수 있는 속성입니다. <kbd>dataType</kbd>에 따라 사용가능한 포맷이 다르며, 단순 포맷을 정의할 수 있습니다. <kbd>dataType</kbd> 속성을 설정하지 않으면 기본값은 <kbd>""text""</kbd> 입니다."
1197,0e802e2e36eb255e,normal,"<kbd>dataType</kbd>은 입력되는 정보의 종류입니다. <kbd>dataType</kbd>에 따라 화면에 출력하는 포멧이 다릅니다. <kbd>dataType</kbd>으로는<strong> <kbd>text</kbd>, <kbd>number</kbd>, <kbd>date</kbd>, <kbd>time</kbd>, <kbd>bigDecimal</kbd> </strong>이 있습니다."
1198,7462460f53b6bcf9,normal,"<kbd>dataType=""date""</kbd> 의 경우 <kbd>dataMask</kbd> 속성을 사용하여 데이터를 제어합니다."
1199,c0ad57c70eb06ac0,normal,displayFormatter 속성에 사용자정의 함수를 설정하여 해당 사용자정의 함수의 반환값을 표시합니다.
1200,02d8312eb7d77e19,normal,"상대 좌표를 이용하여 디자인한 화면은 탭 키 이동을 지원합니다. 즉, 사용자는 브라우저에서 탭 키를 눌러 UI 컴포넌트 사이를 이동할 수 있습니다. 보통의 경우, UI 컴포넌트의 배치 순서에 따라 탭 키가 이동합니다. 단, 모바일 같은 반응형 웹의 경우 탭 키 이동 순서를 강제적으로 지정해야 할 필요가 존재하여 이를 지원하는 기능을 제공합니다."
1201,b910134562d00dff,normal,개발자는 <kbd>nextTabID</kbd> 속성에 탭 키를 통해 이동할 컴포넌트 ID를 지정할 수 있습니다
1202,e3898f04350e66c4,normal,아래와 같이 탭 키 이동 순서를 지정하십시오.
1203,9eb61a38ac186ef1,ordered_list,"# 탭 키 이동을 편집하려는 화면 파일을 엽니다.
# Design 탭에서 화면을 우클릭한 후 <strong>[Tab Order 편집모드]</strong>를 선택합니다."
1204,0712a7be057195bf,ordered_list,# 아래와 같이 탭 키 이동 순서를 결정할 수 있는 파란색 버튼이 표시되는지 확인합니다.
1205,a24ea72f10e8715d,ordered_list,"# 기준이 될 컴포넌트를 클릭 후, 탭 키를 이동할 순서대로 컴포넌트를 Ctrl 버튼을 누른 채로 클릭합니다.
# 지정한 순서에 따라 <kbd>nextTabID</kbd>가 속성이 지정되고 파란색 버튼이 빨간색으로 변경됩니다. (<strong>[Tab Order 다시계산]</strong> 선택 시 탭 키 이동 순서를 다시 지정할 수 있습니다.)"
1206,1ee5d528cfc5e661,ordered_list,# 탭 키 이동 순서 편집 모드를 종료하십시오.
1207,b71ea6460c9edb2a,normal,<kbd>nextTabID</kbd> 속성을 지원하는 컴포넌트는 아래와 같습니다.
1208,74a2b4405c4f72a9,unordered_list,"* <a class=""reference text"" href=""#700cf09bf953d364"">Anchor</a>
* <a class=""reference text"" href=""#135c147277dd42f3"">AutoComplete</a>
* <a class=""reference text"" href=""#27cc3703f47a5f30"">CheckBox</a>
* <a class=""reference text"" href=""#00d68253341f365d"">CheckComboBox</a>
* <a class=""reference text"" href=""#86bdcf48029b958b"">GridView</a>
* <a class=""reference text"" href=""#3f78e914466d2d7a"">InputBox</a>
* <a class=""reference text"" href=""#579244ff7483b50c"">InputCalendar</a>
* <a class=""reference text"" href=""#f1c2ad4f060bf1ce"">MultiSelect</a>
* <a class=""reference text"" href=""#b82f1edea4db4407"">Radio</a>
* <a class=""reference text"" href=""#8277e0b73ca5f984"">SearchBox</a>
* <a class=""reference text"" href=""#641326163f434b17"">SelectBox</a>
* <a class=""reference text"" href=""#42ddf8532ad343b6"">Spinner</a>
* <a class=""reference text"" href=""#1dfccf9fcba1a65a"">TextArea</a>
* <a class=""reference text"" href=""#75e98070aac6d3b7"">Trigger</a>
* <a class=""reference text"" href=""#ab072cd2a3f5e06b"">WFrame</a>(WFrame내의 컴포넌트의 <kbd>firstTabID</kbd>는 따로 지정)"
1209,958b645779c8111f,normal,"WebSquare5는 HTML5의 기본 스펙인 <kbd>&lt;title&gt;</kbd> 외에 툴팁(<kbd>toolTip</kbd>)을 지원합니다. 툴팁의 경우 표시 여부, 스타일, 표시 시간을 개발자가 제어할 수 있는 이점이 있습니다."
1210,715977f101e83db3,normal,툴팁은 <kbd>toolTip</kbd> 및 <kbd>tooltipDisplay</kbd> 속성 설정을 통해 사용할 수 있습니다.
1211,116b1db7365ce23d,normal,"아래 컴포넌트의 경우 <kbd>tootipDisplay</kbd> 속성을 지원합니다. <kbd>tootipDisplay=""true""</kbd> 설정을 적용할 경우, 최종 사용자가 선택한 값은 툴팁을 통해 표시됩니다."
1212,ec3609dfea045a5b,definition_list,"툴팁 지원 컴포넌트 
Anchor
+ AutoComplete
+ Calendar
+ Chart
+ CheckBox
+ GridView
+ Group
+ IFrame
+ Image
+ Input
+ InputCalendar
+ MultiSelect
+ Radio
+ SearchBox
+ Secret
+ SelectBox
+ Slider
+ TextArea
+ TextBox
+ TreeView
+ Trigger
+ WFrame
+ WindowContainer"
1213,da1938f60cc41170,normal,툴팁사용과 관련된 주요 속성은 아래와 같습니다.
1214,fbbce44323cbae49,definition_list,"관련 속성
<kbd>toolTip</kbd>: 툴팁으로 표시할 내용 정의.
+ <kbd>toolTipDisplay</kbd>: 툴팁 표시 여부 결정.
+ <kbd>toolTipFormatter</kbd>: toolTip에 정의한 값을 변환할 함수 이름. (해당 함수는 별도의 스크립트로 작성해야 함.)"
1215,2bb25369f69c7c3f,normal,<strong><em>Config.xml</em></strong> 파일에서 툴팁 효과를 설정할 수 있습니다.
1216,f2a2a88a3bf3eb75,definition_list,"툴팁 제어용 속성
<kbd>toolTipSec</kbd>: 툴팁이 나타나기까지의 시간을 지정. (단위: ms)
+ <kbd>toolTipNoEffect</kbd>: 툴팁의 깜빡거리는 효과를 제거."
1217,88566486beac298d,normal,"아래와 같은 설정을 <strong><span class=""r_italic_span"">config.xml</span></strong> 파일에 추가할 경우 Body 하위에 포함된 컴포넌트의 툴팁 효과(깜빡거리는 현상)을 한번에 동일하게 제어할 수 있습니다."
1218,9690b2b1491a9d05,normal,CheckBox 컴포넌트가 제공하는 각 선택항목에 대한 툴팁을 정의하여 표시할 수 있습니다.
1219,14d7548492ca2141,definition_list,"CheckBox 컴포넌트 전체에 대한 툴팁
<kbd>toolTip=""전체 툴팁 내용""</kbd>
+ <kbd>tooltipDisplay=""true""</kbd>
CheckBox 컴포넌트의 선택 항목에 대한 툴팁
<kbd>toolTipItemLabel=""선택 항목에 대한 툴팁 내용""</kbd>
+ <kbd>tooltipDisplay=""true""</kbd>"
1220,44143abbd8a46d23,note,"<kbd>toolTipItemLabel</kbd> 속성을 설정하지 않을 경우, 각 선택 항목의 <kbd>label</kbd> 값이 표시됩니다."
1221,84ab4d2530f5ff1a,normal,아래의 속성을 사용하여 툴팁 표시 방법을 결정할 수 있습니다.
1222,ea58cd430991a5e1,definition_list,"관련 속성
<kbd>tooltipDisplay</kbd>: Body에 툴팁 표시. 
+ <kbd>tooltipShowAlways</kbd>: Body에 항상 툴팁 표시.
+ <kbd>tooltipHeader</kbd>: Header에 툴팁 표시. 
+ <kbd>tooltipHeaderShowAlways</kbd>: Header에 항상 툴팁 표시.
+ <kbd>tooltipShowAlwaysColumns</kbd>: 지정한 컬럼만 항상 툴팁 표시. (예: <kbd>tooltipShowAlwaysColumns = ""col1,col2""</kbd>)
+ <kbd>tooltipFormatter</kbd>: 툴팁 내용을 변환할 함수명. (함수는 별도 스크립트로 작성.)
+ <kbd>showImageTooltip</kbd>: <kbd>inputType=""image""</kbd>인 셀도 툴팁 표시."
1223,1196f5ce283cc320,normal,<kbd>advancedExcelDownload</kbd> 함수의 옵션 설정을 통해 다운로드 상태 표시를 제어할 수 있습니다.
1224,456277de77b376ad,definition_list,"해당 옵션
<kbd>options.timeout</kbd>: 다운로드 완료 최대 대기시간 (단위: ms)
+ <kbd>options.checkInterval</kbd>: 다운로드 완료 응답 확인 가능 (단위: ms)
+ <kbd>options.onSuccessCallback</kbd>: 다운로드 성공 시 호출할 함수
+ <kbd>options.onFailureCallback</kbd>: 다운로드 실패 시 호출할 함수"
1225,6b7480ff064ae7db,normal,"GridView를 Excel 파일로 다운로드할 경우 4칙 연산 및 (MIN, MAX, SUM, POWER, AVERAGE, IF, &gt;, &lt; 등) 수식 함수를 지원합니다."
1226,56a03c9b7943cb60,normal,<kbd>advancedExcelDownload</kbd> 함수의 옵션 설정을 통해 셀의 선 스타일을 설정할 수 있습니다.
1227,495b2cdffefdfe1e,definition_list,"해당 옵션
<kbd>infoArr.borderColor</kbd>: 셀의 선 색상
+ <kbd>infoArr.borderWidth</kbd>: 셀의 선 두께"
1228,170e24412642fc4f,normal,아래와 같이 <kbd>useStyle</kbd> 및 <kbd>headerFontBold</kbd> 설정을 이용하여 GridView를 Excel 파일로 다운로드할 때 헤더 폰트를 굵게 표시할 수 있습니다.
1229,a070d32e605913c0,normal,"GridView에 <code>setCellClass()</code>로 스타일을 적용 한 후 <code>advancedExcelDownload()</code> 함수를 사용하여 Excel 파일로 다운로드할 경우, <code>options.useStyle=""true""</code> 옵션 설정을 통해, 적용한 스타일을 다운로드한 Excel 파일에서도 유지할 수 있습니다."
1230,4a302fd711bd3c63,normal,아래와 같이 <kbd>options.colMerge</kbd> 및 <kbd>colMergeValue</kbd> 설정을 이용하여 셀 병합을 유지한 채로 GridView를 Excel 파일로 다운로드할 수 있습니다.
1231,e084de07e188c795,normal,"병합된 셀을 포함하는 GridView를 Excel 파일로 다운로드한 후, Excel에서 병합을 취소할 경우 <kbd>options.colMergeValue</kbd> 옵션을 사용하여 엑셀 파일의 셀에 데이터를 채우는 방식을 설정할 수 있습니다."
1232,0a20c284e1543d7d,definition_list,"옵셜 설정
<kbd>true</kbd>: 병합 해제된 모든 셀에 데이터를 채움.
+ <kbd>false</kbd> (기본 값): 첫 행이나 첫 열에만 데이터를 채움"
1233,63502f8387a90599,normal,아래와 같이 <kbd>advanedExcelDownload</kbd> 함수의 옵션인 <kbd>pwd</kbd>를 사용하여 다운로드하는 Excel 파일의 비밀번호를 설정할 수 있습니다.
1234,f72d33e57e348950,normal,"단, <strong><span class=""r_italic_span"">websquare.xml</span></strong> 파일에 아래와 같이 <strong><code>tempDir</code></strong>을 설정해야 합니다."
1235,25a14327886d7adb,caution,"POI 3.10으로 업그레이드 필요. (POI 3.9를 사용할 경우 오류 발생.)
 xlsx 확장자만 (Excel 97 이상) 지원. (xls는 미지원.)
pwd는 BASE64 방식으로 인코딩되어야 함."
1236,d9b9d53d863ac4e1,normal,<kbd>advancedExcelDownload</kbd> 함수를 통해 엑셀 파일로 다운로드 할 데이터 크기를 제한할 수 있습니다.
1237,e59ebf6dbef511e0,definition_list,"관련 옵션
<kbd>options.maxCellCount</kbd>: 엑셀 파일로 다운로드할 수 있는 최대 셀 개수
+ <kbd>options.maxRowCount</kbd>: 엑셀 파일로 다운로드할 수 있는 최대 행 개수"
1238,b98313ba60db3663,normal,"GridView가 설정한 최대 셀 혹은 행 개수를 초과할 경우, 다운로드 요청이 서버로 전달되지 않으며 아래와 같은 알림 메시지가 출력됩니다."
1239,766388eb867c77fe,normal,"<code>options.useDataFormat : ""true""</code> 설정을 사용하는 <code>advancedExcelDownload()</code> 함수를 통해 GridView를 Excel 파일로 다운로드할 경우, 다운로드한 Excel 파일 상에서 출력할 데이터의 표시 형식(셀 타입)을 Body, SubTotal, Footer의 컬럼의 <code>excelCellType</code> 속성을 통해 지정할 수 있습니다."
1240,9e68adfe127a2589,unordered_list,"* <code>excelCellType</code>
** <code>""number""</code> : Excel 상에서 ""<strong><span class=""r_italic_span"">숫자</span></strong>""로 출력됨.
** <code>""bigDecimal""</code> : Excel 상에서""<strong><span class=""r_italic_span"">숫자</span></strong>""로 출력됨.
** <code>""text""</code> : Excel 상에서 ""<strong><span class=""r_italic_span"">텍스트</span></strong>""로 출력됨.
** <code>""date""</code> : Excel 상에서 ""<strong><span class=""r_italic_span"">날짜</span></strong>""로 출력됨."
1241,6e5d0dba9894ef52,normal,"<code>advancedExcelDownload()</code> 함수를 통해 GridView를 Excel 파일로 다운로드할 경우, 다운로드한 Excel 파일 상에서 적용할 데이터의 표시 형 <code>gridView.column</code>의 <code>excelFormat</code> 속성을 통해 지정할 수 있습니다."
1242,4591642f389e5a7e,normal,"GridView의 <code>advancedExcelDownload()</code> 함수를 통해 Excel 파일을 다운로드할 때, Excel 파일에서 해당 컬럼에 포맷을 적용하기 위해 실행할 사용자 함수를 지정할 수 있습니다. <code>gridView.column</code>의 <code>excelFormatter</code> 속성 값으로 해당 함수명을 설정하십시오. 단, 해당 사용자 함수는 직접 구현해야 합니다."
1243,e09f0ea97458ff56,normal,"<code>inputType=""custom""</code>이고 <code>dataType=""number""</code> (혹은 <code>""bigDecimal""</code>)인 셀이 포함된 GridView를 Excel 파일로 다운로드할 때, 다운로드한 Excel 파일에서 해당 셀 데이터를 숫자로 인식하고 숫자 연산을 지원할 수 있습니다. <code>advancedExcelDownload()</code> 함수를 사용할 때 <code>options.customToDataType=""true""</code> 옵션 설정을 추가하십시오."
1244,764f1bcee8b6f284,normal,"GridView 컬럼의 <code>inputType</code>이 <code>""select""</code>, <code>""autoComplete""</code>, 혹은 <code>""checkcombobox""</code>인 경우, <code>value</code> 값과 <code>label</code> 값 중 어떤 값을 다운로드 할 지 선택할 수 있습니다."
1245,6adacd12c5b8374d,normal,"GridView 컬럼의 <code>inputType</code>이 <code>""select""</code>, <code>""autoComplete""</code>, 혹은 <code>""checkcombobox""</code>인 경우, <code>value</code> 값과 <code>label</code> 값 중 어떤 값을 다운로드 할 지 각 컬럼 별로 지정할 수 있습니다."
1246,0749906078b88fcc,normal,"<code>advancedExcelDownload()</code> 함수를 사용하여 GridView를 Excel 파일로 다운로드할 때, GridView 각 셀에 포함된 공백을 제거할 수 있습니다."
1247,38b5fc92d2b10c4d,normal,<code>advancedExcelDownload()</code> 함수를 통해 GridView를 Excel 파일로 다운로드할 때 표시는 오류는 다음과 같습니다.
1248,190f03e7a784309e,normal,아래와 같이 <kbd>advanedExcelUpload</kbd> 함수의 옵션인 <kbd>removeColumns</kbd>를 사용하여 업로드에서 제외할 Excel 파일의 컬럼을 지정할 수 있습니다.
1249,a6579bca281a0814,normal,sheetName 옵션을 사용하여 Excel 파일의 지정한 시트만 GridView로 업로드할 수 있습니다.
1250,94b77948749f1077,normal,<kbd>advanedExcelUpload</kbd> 함수의 옵션인 <kbd>headerExist</kbd>를 사용하여 헤더를 제외한 Excel 파일을 업로드할 수 있습니다.
1251,25d1a205bd6a5387,normal,아래와 같이 <kbd>advanedExcelUpload</kbd> 함수의 옵션인 <kbd>dateFormat</kbd>을 사용하여 업로드 후 Excel 파일에 표시될 날짜 포맷을 지정할 수 있습니다.
1252,d20e00bb23980563,normal,<kbd>advancedExcelUpload(options);</kbd> 함수를 사용하여 Excel 업로드 창을 WFrame으로 생성하고 업로드 창의 속성을 지정할 수 있습니다.
1253,1641dea8bbbe7bb7,normal,<kbd>advancedExcelUpload</kbd>를 통해 엑셀 파일을 업로드할 경우 아래와 같은 팝업 창이 표시됩니다. 본 장은 팝업 창에 다국어를 적용하는 방법을 설명합니다.
1254,fa2e7df8efa8b3f1,normal,"<strong><em>config.xml</em></strong> 파일에 <kbd>useLanguagePack=""true""</kbd> 설정을 추가하십시오."
1255,9839c12aa3eb00b5,normal,"아래의 방법으로 현재 브라우저의 언어를 확인하고, 원하는 언어를 다국어로 설정할 수 있습니다."
1256,2611311479c050c6,ordered_list,"# 브라우저의 언어를 확인합니다.
# 언어를 선택합니다.
# 엑셀파일업로드 기능이 포함된 페이지를 다시 로딩합니다.
# 선택한 언어가 표시되는지 확인합니다."
1257,b78a57499df760f6,normal,다음은 클라이언트에서 다국어를 변환한 후의 모습입니다. <strong>파일 선택</strong> 버튼은 사용자 PC에 설치된 OS에 따라 결정됩니다.
1258,1abdcdcf12092e11,normal,<code>readCSV()</code> 함수를 사용하여 CSV를 GridView로 업로드할 수 있습니다.
1259,84348a154ae1716a,normal,"GridView 컬럼의 <code>inputType</code>이 <code>""select""</code>, <code>""autoComplete""</code>, 혹은 <code>""checkcombobox""</code>인 경우, <code>value</code> 값과 <code>label</code> 값 중 어떤 값을 업로드 할 지 선택할 수 있습니다."
1260,dccb9e92aa1c18d5,normal,"GridView 컬럼의 <code>inputType</code>이 <code>""select""</code>, <code>""autoComplete""</code>, 혹은 <code>""checkcombobox""</code>인 경우, <code>value</code> 값과 <code>label</code> 값 중 어떤 값을 업로드 할 지 각 컬럼 별로 지정할 수 있습니다."
1261,267832f2bcc9009e,normal,<code>advancedExcelUpload()</code> 함수의 <code>trim</code> 옵션을 사용하여 Excel 파일을 GridView로 업로드할 때 Excel 파일의 각 셀에 포함된 공백을 제거할 수 있습니다.
1262,19fc752399588661,normal,<code>saveCSV()</code> 함수를 사용하여 Gridview 데이터를 CSV를 파일로 다운로드할 수 있습니다.
1263,9dfe71b1a27dbea5,normal,<code>readCSV()</code> 함수를 사용하여 CSV를 GridView로 업로드할 수 있습니다.
1264,3702fe135cf01330,normal,<kbd>readCSV(options);</kbd> 함수를 사용하여 CSV 업로드 창을 WFrame으로 생성하고 업로드 창의 속성을 지정할 수 있습니다.
1265,5cc4dd06e63bb013,normal,"<code>Websquare.util.multipleExcelDownload()</code> 함수를 사용하면 여러 개의 그리드의 데이터를 별도의 Excel 파일이나 시트로 저장할 수 있습니다. Page가 WFrame을 포함할 경우, WFrame의 소스 Page에 포함된 GridView도 다운로드할 수 있습니다."
1266,634abd184b154402,caution,본 기능을 사용하려면 provider 설정이 필요합니다.
1267,df39a4f7185731de,normal,<code>Websquare.util.multipleExcelDownload()</code> 함수의 <code>multipleSheet</code> 옵션 설정을 통해 여러 시트에 분리해서 다운로드할 수 있습니다.
1268,8d7f226473c3d844,normal,"단, 이 기능은 provider 설정시에만 동작하며 <code>sheetName</code>은 중복되지 않게 설정해야 합니다. (JDK 1.5이상에서 사용 가능)"
1269,30d1166c9e1dd896,normal,"<span class=""r_blue001_span""><code><span class=""r_blue_span"">multipleSheet: ""false""</span></code></span> 옵션을 설정할 경우 여러 GridView를 하나의 Excel 시트로 다운로드할 수 있습니다."
1270,67fa1b38be5954be,normal,<kbd><strong>pivotExcelDownload( opt );</strong> </kbd> 함수를 이용하여 피봇을 Excel 파일로 다운로드 할 수 있습니다.
1271,08b87d15a2da63da,normal,<kbd><strong>pivotExcelUpload( opt );</strong> </kbd> 함수를 이용하여 Excel 파일을 피봇으로 업로드할 수 있습니다.
1272,3cdd0cfabf6b4903,normal,<code>pivotCSVDownloadCSV()</code> 함수를 사용하여 Pivot 데이터를 CSV를 파일로 다운로드할 수 있습니다.
1273,44c2e56374c93de9,normal,<code>pivotCSVUploadCSV()</code> 함수를 사용하여 CSV 데이터를 Pivot으로 업로드할 수 있습니다.
1274,91b9e84e7dc4563a,normal,"<code>Websquare.util.multipleDataListDownload()</code> 함수를 사용하면 여러 개의 DataList의 데이터를 별도의 Excel 파일이나 시트로 저장할 수 있습니다. 또한 Page가 WFrame을 포함할 경우, WFrame의 소스 Page에 포함된 DataList도 다운로드할 수 있습니다."
1275,63996b16d8ae7951,normal,여러 DataList를 다운로드하는 동안 상태 메시지를 표시할 수 있습니다. 관련 옵션은 아래와 같습니다.
1276,37adcaf27a7637c5,definition_list,"<code>multipleDatalistDownload()</code> 함수의 관련 옵션 
<code>options.showProcess : true</code>
+ <code>options.processMsg : ""Message to display...""</code>"
1277,5a93390037a178c4,normal,"모바일 환경을 지원하는 웹 디자인은 크게 반응형(RWD, Responsive Web Design)과 적응형(AWD<span class=""mark index"">AWD</span>, Adaptive Web Design)으로 구분됩니다. 아래 표에서 볼 수 있듯이 적응형은 반응형에 비해 훨씬 더 많은 장점을 제공하지만 구현이 복잡하며 개발 기간이 긴 단점이 있습니다. WebSquare5는 간단한 속성 설정을 통해 적응형 웹 디자인을 쉽게 구현할 수 있습니다."
1278,6a275651f79d955d,normal,"적응형 웹 디자인의 적용 <strong>width</strong>를 지정합니다. 기본값은 480(px) 으로 구성되어 있으며, <strong>width</strong>의 값을 변경하여 적응형 웹 디자인 시작 시점을 변경할 수 있습니다."
1279,336445794f105cca,normal,"Property 뷰에서 <kbd>adaptive=""crosstab""</kbd> 으로 변경하십시오."
1280,9daf06123c477de4,normal,"<kbd>fixAdaptive=""true""</kbd> 설정을 사용할 경우, <kbd>adaptive</kbd>와 <kbd>hideThreshold</kbd> 속성을 GridView를 처음 그릴 때 적용한 후, 이후 처음 설정한 상태를 적용할 수 있습니다. 이 경우, 모바일 환경에서 GridView의 속도를 개선하는 효과를 기대할 수 있습니다."
1281,97c050cd15b78d23,normal,"TabControl 컴포넌트에 적응형 웹 디자인을 적용하려면 Property 뷰에서 <strong><code><kbd>adaptive</kbd></code></strong> 속성을 ""<strong><code><code>layout</code></code></strong>""으로 변경하십시오."
1282,72607fc077f02ddd,normal,Tab 부분이 아코디언(Accordion) 형태로 변경됩니다.
1283,fe420fb9e121b985,normal,"TableLayout 컴포넌트에 적응형 웹 디자인을 적용하려면 <strong>Property</strong> 뷰에서 <strong><kbd>adaptive</kbd></strong> 속성을 ""<strong><kbd>crosstab</kbd></strong>"" 또는 ""<strong><kbd>layout</kbd></strong>""으로 지정하십시오."
1284,d44dc90f04ede5eb,normal,"WebSquare5에 jquerySupport 기능을 추가하여 jQuery를 사용할 수 있고, jQuery가 제공하는 API를 이용하여 WebSquare5 객체에 접근할 수 있습니다."
1285,02294a0f9350bfa9,normal,"특정 버전의 jQuerySupport를 사용할 경우, 아래와 같이 추가하십시오."
1286,e81cc7ced6483c7a,normal,"스튜디오에서에서 <span class=""r_italic_span"">WebSquare Configure</span> 폴더에 있는 <span class=""r_italic_span"">client.config.xml</span> 파일을 클릭합니다."
1287,0752ec2f88480afa,normal,&lt;<strong>jQuerySupport&gt; </strong>부분에 사용하려는 jQuery 버전을 명시합니다. (명시하지 않을 경우 기본값은 jquery-1.10.2입니다.)
1288,730e8d9c07efa672,note,"jquery 버전을 명시하지 않을 경우, 기본값은<strong> jquery-1.10.2.min.js</strong>입니다."
1289,491ecde2192dcd86,definition_list,"Selector란?
HTML 문서의 DOM 요소를 선택하는 기능으로 복잡한 HTML 문서에서도 DOM 요소를 쉽게 찾도록 고안되었습니다
+ <strong><code>$( “#input1:wq” )</code></strong>에서, <strong><code>$()</code></strong>는 jQuery 메소드이며 <strong><code>#input1:wq</code></strong>는 selector입니다. <strong><code>"":wq""</code></strong>는 WebSquare5로 그려진 DOM 객체만 선택하기 위한 필터입니다."
1290,21fd123b9b575b9f,definition_list,"ID로 선택할 때
""#"" + ID + "":wq""
+ (예)<strong><code> $(“#input1:wq”);</code></strong>
Class로 선택할 때 
""."" + Class + "":wq""
+ (예) <strong><code>$("".w2trigger:wq"")</code></strong>
WebSquare5 컴포넌트 이름으로 선택할 때
.wq(컴포넌트 이름)
+ (예)<strong><code> $("".wq(trigger)"")</code></strong>"
1291,a3e2f8f9581cab96,definition_list,"기능
DOM 객체를 WebSquare5 객체로 변환 후 배열 형태로 반환합니다."
1292,2fac706c1b0100eb,definition_list,"<code>$(“:wq(textbox)”).wq();</code>
컴포넌트명이 textbox이고 WebSquare5로 그려진 DOM객체를 WebSquare 객체로 변환하여 배열 형태로 반환합니다.
<code>$(""#input1:wq"").wq()</code>
ID가 input1이고 WebSquare5로 그려진 DOM 객체를 WebSquare 객체로 변환하여 배열 형태로 반환합니다.
<code>$(“#input1:wq”).wq(“setStyle”, “background-color”, “orange”);</code>
ID가 input1이고 WebSquare5로 그려진 DOM 객체에 대해 <strong><code>setStyle </code></strong>API를 실행합니다.
<code>$(""#textbox2:wq"").wq(""setValue"", ""AAA"").wq(""setStyle"", ""background-color"", ""orange"");</code>
ID가 textbox2이고 WebSquare5로 그려진 DOM 객체에 대해 <strong><code>setValue</code></strong> 와 <strong><code>setStyle </code></strong>API를 연속 실행합니다."
1293,19224d737f94a132,caution,"jq, get, each, map API의 경우 wq API를 사용한 이후부터 chaining 기능을 통해 이용할 수 있습니다. 
단, jq API를 쓰는 순간 jQuery 배열이 리턴되기 때문에 wq API를 제외한 jq, get, each, map와 같은 API는 사용할 수 없습니다."
1294,e54b7a691b089944,definition_list,"기능
WebSquare5 객체 배열을 jQuery 배열로 변환하여 반환합니다."
1295,05143005a8e5c68c,caution,"jq() API를 사용한 직후에는 wq API를 제외한 나머지 API (jq, get, each, map)를 사용할 수 없습니다."
1296,1566e1b473dffedd,definition_list,"<code>$(“:wq(textbox)”).wq().jq();</code>
컴포넌트명이 textbox인 WebSquare5 객체만 선택하여, 
+ WebSquare5 객체 배열을 반환한 후, 
+ <strong><code>.jq()</code></strong> API 를 통해 WebSquare5 객체 배열을 DOM 객체를 담은 jQuery 배열로 변환합니다."
1297,c615c06afc1f059d,definition_list,"<code>$(""#textbox5:wq"").wq().jq().css( ""background"", ""yellow"" );</code>
ID가 textbox5인 WebSquare5 객체만 선택하여, 
+ WebSquare5 객체 배열을 반환한 후, 
+ jq() API를 통해 WebSquare5 객체 배열을 DOM 객체를 담은 jQuery 배열로 변환한 후,
+ ""background"" CSS를 적용합니다."
1298,dcbbd3d8b3c9438b,definition_list,"기능
연속해서 API를 사용하는 chaining을 종료하고, 선택된 WebSquare5 객체 중 0번째 객체에 wqAPI에 해당하는 함수를 실행한 후 그 결과를 리턴합니다."
1299,e53ea880c58746e6,definition_list,"<code>$("":wq(textbox)"").wq().get(""getValue"")</code>
WebSquare5 컴포넌트명이 textbox인 DOM객체만 선택하여, 
+ WebSquare5 객체의 배열로 반환하고, 
+ 반환된 WebSquare5 객체 중 0번째 객체에만 getValue 함수를 수행하여,
+ 그 결과를 반환합니다."
1300,ba811832b15442d1,definition_list,"<code>$("":wq(group)"").wq().get(""addClass"", ""webSquare"")</code>
WebSquare5 컴포넌트명이 group인 DOM객체만 선택하여, 
+ WebSquare5 객체의 배열로 반환하고, 
+ 반환된 WebSquare5 객체 중 0번째 객체에만 addClass 함수를 수행하여,
+ 그 결과를 반환합니다."
1301,b34f98ba27bcab55,caution,"get API는 chaining을 종료하기 때문에 get API 이후 다른 API를 사용할 경우 오류가 발생합니다. 아래의 예에서 wq(""setStyle"",""background-color"",""red"")는 실행되지 않고 오류가 발생합니다. 

(오류 발생 예) 
<code><span class=""r_red_highlight_span"">$(""#input1"").wq().get(""getValue"").wq(""setStyle"",""background-color"",""red"")</span></code>"
1302,5345bb4f886d29ed,definition_list,"기능 
인자로 받은 사용자 정의 함수를 선택된 모든 WebSquare5 객체에 대해 실행합니다. 사용자 정의 함수는 최대 두 개의 인자를 가질 수 있습니다."
1303,80e519080da48063,definition_list,"<code>$("":wq(input)"").wq().each(function(index){ alert(index) })</code>
$("":wq(input)"").wq() 를 통해 WebSquare5 객체를 선택한 후, 
+ 선택된 n개의 객체에 대해 0부터 n-1까지의 index를 차례로 사용자 정의 함수 인자로 사용하여, 
+ function(index){ alert(index) } 를 실행합니다."
1304,d81283aa37b30842,definition_list,"<code>$("":wq(textbox)"").wq().each(function(i){this.setValue(i);})</code>
$("":wq(textbox)"").wq() 를 통해 WebSquare5 객체를 선택한 후, 
+ 선택된 n개의 객체에 대해 0부터 n-1까지의 index를 차례로 사용자 정의 함수 인자로 사용하여, 
+ function(i){this.setValue(i);} 를 실행합니다."
1305,bbe426076f75bc94,definition_list,"<code>$("":wq(input)"").wq().each(function(index, _this){ alert(index + ""번째"" + _this.getValue());})</code>
<strong><code>$("":wq(input)"").wq() </code></strong>를 통해 WebSquare5 객체를 선택한 후, 
+ 선택된 n개의 객체에 대해 0부터 n-1까지의 index를 첫번 째 인자로,
+ <strong><code>$("":wq(input)"").wq().[index],</code></strong> 즉 해당 index의 WebSquare5 객체를 두번 째 인자로 사용하여,
+ <strong><code>function(index, _this){ alert(index + ""번째"" + _this.getValue())}</code></strong> 을 실행합니다."
1306,d143888a1cfdeea8,definition_list,"기능
첫 번째 인자로 배열 또는 객체를 받아, 두 번째 인자로 받은 사용자 정의 함수를 실행합니다.
+ 결과 값을 저장한 새로운 배열 요소를 반환합니다.
+ get API 와 마찬가지로 chaining을 종료합니다."
1307,3dfa5dddd9b41512,definition_list,"<code>$(""#input1"").wq().map([1, 2, 3], function(value){return value*2});</code>
첫 번째 인자가 배열이고, 두 번째 인자인 사용자 정의 함수의 인자가 하나인 경우입니다.
+ 첫 번째 인자로 받은 배열 각각의 요소에 사용자 정의 함수를 실행하여 같은 크기의 새로운 배열을 리턴합니다.
+ 두번째 인자인 사용자 정의 함수의 인자는 첫 번째 인자로 받은 배열의 각 index에 해당하는 값입니다."
1308,83b978cf04d167b8,definition_list,"<code>$(""#trigger3"").wq().map([5, 4, 3, 2], function(value){return value-value});</code>
위의 예제와 동일합니다."
1309,181d19b0d3781410,definition_list,"<code>$(""#input1"").wq().map([1, 2, 3], function(value, i){return value*3 + ""은"" + i + ""번째""});</code>
첫 번째 인자가 배열이고, 두 번째 인자인 사용자 정의 함수의 인자가 두 개인 경우입니다.
+ 첫 번째 인자로 받은 배열 각각의 요소에 사용자 정의 함수를 실행하여 같은 크기의 새로운 배열을 리턴합니다. 
+ 두 번째 인자인 사용자 정의 함수의 인자들은 차례대로 첫 번째 인자로 받은 배열의 각 index에 해당하는 값과 해당 index입니다."
1310,7e27cf96ffc93764,definition_list,"<code>$(""#group3"").wq().map([10 , 9], function(value , i){return value * i})</code>
위의 예제에 대한 설명과 동일합니다."
1311,d7971c1fc167dade,definition_list,"<code>$(""#input1"").wq().map({a:1, b:2, c:3}, function(value){return value*2})</code>
첫 번째 인자가 객체이고, 두 번째 인자인 사용자 정의 함수의 인자가 하나인 경우입니다.
+ 첫 번째 인자로 받은 객체 각각의 요소에 두 번째 인자인 사용자 정의 함수를 실행하여 같은 크기의 새로운 배열을 리턴합니다. 
+ 사용자 정의 함수의 인자는 첫 번째 인자로 받은 객체의 각 index에 해당하는 값입니다."
1312,8d4ddd6c65cb2bfc,definition_list,"<code>$(""#input1"").wq().map({a:1, b:2, c:3}, function(value, i){return value*2 + ""은"" + i + ""번째""});</code>
첫 번째 인자가 객체이고, 두 번째 인자인 사용자 정의 함수의 인자가 두 개인 경우입니다.
+ 첫 번째 인자로 받은 객체 각각의 요소에 두 번째 인자인 사용자 정의 함수를 실행하여 같은 크기의 새로운 배열을 리턴합니다. 
+ 사용자 정의 함수의 인자는 차례로 첫 번째 인자로 받은 객체의 각 index에 해당하는 값과 해당 index입니다."
1313,28d19f6cff321858,ordered_list,+ 두번째 인자인 사용자 정의 함수의 인자는 첫 번째 인자로 받은 배열의 각 index에 해당하는 값입니다.
1314,e52a6694be67e759,definition_list,"정의 
SPA<span class=""mark index"">SPA</span>란 Single Page Application의 약자로 신속한 페이지 전환을 위해 단일 페이지 동작을 시도하는 웹 어플리케이션이나 사이트를 의미합니다. SPA를 적용한 웹 어플리케이션이나 사이트는 반복되는 HTML 코드를 다시 다운받지 않기 때문에 페이지 이동 속도가 빠르고 효율적인 자원 관리가 가능합니다."
1315,66ea0507dae36308,definition_list,"특징
페이지 이동 속도가 향상됩니다.
+ WebSquare5 자원(엔진파일, CSS, 이미지 파일 등) 및 이미 로딩한 외부 JS파일을 재사용합니다.
+ 페이지 이동이 일어나도 전역변수나 타이머는 그대로 남아 있기 때문에 이를 정리하기 위한 별도의 코딩이 필요합니다. 
+ 페이지 이동 시 <kbd>?w2xPath</kbd> 인자가 아닌 <kbd>#w2xPath</kbd> 해시값으로 변합니다."
1316,7e61e1e1bc9bf7b6,normal,<em>config.xml </em>혹은 각 화면의 XML 페이지를 통해 자원의 캐싱 여부를 설정할 수 있습니다.
1317,237dc5fe4d6af163,normal,<em>config.xml </em>파일은 아래와 같이 설정하십시오.
1318,6f6bede8ec1698aa,ordered_list,"# <strong>[Window] -[Preferences] - [WebSquare] - [Engine Modification]</strong>을 선택합니다.
# <em>config.xml</em>의 <strong><code><kbd>&lt;spa&gt;</kbd></code></strong> 노드 아래 <strong><code><kbd>scriptCache</kbd></code></strong> 항목(이미 로딩한 스크립트를 다시 사용할지 여부)을 설정합니다."
1319,f51d6626b500d920,normal,"위의 예에서 전역 캐시 옵션은 <kbd>false</kbd>로 스크립트는 캐싱되지 않습니다. 단, <strong><code><kbd>&lt;module&gt;</kbd></code> </strong>노드에서 <kbd>cache=""true""</kbd>로 설정하여<em> <strong>xxx1.js</strong> </em>와<em> <strong>xxx2.js</strong></em>는 캐싱되어 화면 이동시 다시 실행하지 않습니다."
1320,8248c7b1f35db510,note,"<em><strong>config.xml</strong></em>의 <strong><code><kbd>&lt;environment&gt;</kbd></code></strong>노드의 cache 설정이 <strong><code><kbd>nocache</kbd></code></strong> 인 경우, <em><strong>config.xml</strong></em>의 module에서 등록한 js 파일은 <kbd>scriptCache</kbd> 설정에 관계없이 항상 다시 로드됩니다."
1321,c416c9b2746e8d85,normal,"각 화면 XML 파일의 경우,<strong><code> <kbd>&lt;script&gt;</kbd> </code></strong>태그의 <strong><code><kbd>cache=""[true|false]""</kbd></code></strong> 인자를 통해 외부 모듈의 캐싱 여부를 설정할 수 있습니다."
1322,dbc4d4d7040827f5,normal,<strong><code><kbd>&lt;script&gt;</kbd></code></strong> 태그를 통해 외부 JS 파일을 로딩하는 경우 XML 파일에 [cache] 옵션을 아래와 같이 설정하여 JS 파일을 캐싱할 수 있습니다.
1323,8870d5929d8f4077,normal,<strong><code><kbd>$p.js</kbd> </code></strong>API 호출 시 마지막 인자로 빈 함수를 전달하면 한 번 로딩했던 JS파일은 다시 로딩하지 않습니다. 마지막 인자가 함수가 아닐 경우에는 한 번 로딩했던 JS라도 다시 로딩합니다.
1324,e883b169d48e521d,normal,"아래의 예에서, <em> foo.js</em>, <em>bar.js</em>, <em>jquery-1.10.2.min.js</em> 파일들이 각각 1번씩 순차적으로 로딩됩니다."
1325,a4964cd4d93e1a5d,normal,"""#w2xPath"" 해시값을 사용하여 페이지 이동 이벤트용 함수를 정의하십시오."
1326,618fa0a5caba1c93,normal,"<kbd>$p.url(w2xPath, option)</kbd> 함수는 전체 URL 대신 <kbd>w2xPath</kbd>에 해당하는 경로만 전달하여 페이지를 이동합니다. options 인자를 통해 SPA 모드를 사용할 수 있습니다. <kbd>$p.url</kbd>과 관련된 좀 더 자세한 정보는 <a class=""link"" href=""https://docs.inswave.com/websquare/websquare.html?w2xPath=/support/api/ws5_sp4/api.xml"">API 가이드</a>를 참고하십시오."
1327,cabecebf2619c4fb,normal,아래와 같이 브라우저를 갱신하여 전역 자원을 초기화할 수 있습니다.
1328,b07ba62483ba1b9e,note,"<strong><em>config.xml</em></strong>에 설정을 추가할 것을 권장합니다.
<kbd>&lt;spa value=""true""&gt;</kbd>인 경우, <kbd>$p.url</kbd> API 두 번째 옵션 인자의 spa 기본값이 true가 됩니다. 
또한, <kbd>{""spa"" : true}</kbd>, IFrame의 SPA 옵션도 true로 설정됩니다. 
그 결과 IFrame의 <kbd>setSrc</kbd> API를 호출 시에 IFrame에도 SPA가 적용됩니다."
1329,9d3515f9b869e461,normal,#w2xPath 뒤에 '<strong>&amp;</strong>'를 붙여 추가 인자를 전달하거나 <kbd>$p.url</kbd> API의 두번째 인자에 <strong><code><kbd>{param : paramObj}</kbd></code></strong>를 전달합니다.
1330,eb079bcb6ffaf098,normal,현재 화면을 다시 그리고 싶은 경우 <kbd>$p.reinitialize(reload)</kbd> API를 사용합니다.
1331,388b5ceea3e1f17e,normal,"<kbd>reload</kbd>값을 지정하지 않은 경우 브라우저 갱신 없이 body 영역만 다시 그리며, <kbd>reload=""true""</kbd>로 설정하면<strong><code> <kbd>location.reload</kbd></code></strong>를 호출하여 브라우저를 갱신합니다. 좀 더 자세한 정보는 <a class=""link"" href=""https://docs.inswave.com/websquare/websquare.html?w2xPath=/support/api/ws5_sp4/api.xml"">API 가이드</a>를 참고하십시오."
1332,310451adcc7088ea,normal,url인자에 같은 값이 반복해서 나올 경우 항상 뒤에 있는 인자의 값을 가져옵니다.
1333,a61f4a325ed5ed3b,note,"<strong>노트</strong>
search는 항상 hash보다 먼저 위치합니다. hash뒤에 오는 '?'는 hash의 일부로 인식합니다.
'#'뒤에 올 수 있는 string은 '#'을 제외한 나머지 string이 올 수 있습니다. <a class=""link"" href=""http://tools.ietf.org/html/rfc3986#section-3.4""># 허용 string</a>"
1334,55d4fc4232490ae0,unordered_list,"* [cache] 옵션을 통하여 한번 로딩했던 스크립트는 다시 로딩하지 않습니다.
* <code><kbd>&lt;script type=""javascript"" src=""jquery-1.10.2.min.js"" cache=""true""/&gt;</kbd></code>와 같이 cache인자로 설정합니다."
1335,170952a343dbb862,definition_list,"<strong><em>foo.xml</em></strong>에서 <strong><em>bar.xml</em></strong> 호출 시
1. <strong><em>jquery-1.10.2.min.js</em></strong>는 이미 로딩된 채로 남아있으므로 페이지 전환시에도 다시 로딩하지 않음
+ 2. <strong><em>bar.js</em></strong>의 경우 로딩된 적이 없는 스크립트 파일이므로 새로 로딩하고 스크립트를 실행함"
1336,164576f9477727d4,definition_list,"<strong><em>bar.xml</em></strong>에서 <strong><em>baz.xml</em></strong> 호출 시
1. <strong><em>jquery-1.10.2.min.js</em></strong>는 다시 로딩하지 않음
+ 2. <strong><em>foo.js</em></strong> : <kbd>cache=""true""</kbd>이므로 다시 로딩하지 않음
+ 3. <strong><em>bar.js</em></strong> : <kbd>cache=""false""</kbd>이므로 로딩 여부와 상관없이 새로 로딩해서 스크립트를 실행 
+ 4. <strong><em>baz.js</em></strong> : <kbd>cache=""true""</kbd>이지만 로딩된 적이 한번도 없으므로 새로 로딩하고 스크립트를 실행"
1337,1a813ba0add7643d,normal,<code><kbd>$p.js</kbd></code> API 호출 시 마지막 인자로 빈 함수를 전달하면 한 번 로딩했던 js파일은 다시 로딩하지 않게 됩니다. 마지막 인자가 함수가 아닐 경우에는 한 번 로딩했던 js라도 다시 로딩하게 됩니다.
1338,4a5ac8f4982a6660,ordered_list,"# Design 뷰에서 Trigger 컴포넌트를 생성합니다.
# Trigger를 우클릭한 후 <strong>[이벤트 추가] - [onclick(e)]</strong>을 선택합니다.
# 이벤트 함수를 아래와 같이 정의합니다."
1339,0734fb113800f9b4,normal,위의 예제에 따르면 새로운 URL로 이동할 경우 w2xPath 인자는 #으로 전달됩니다.
1340,79eb9339f66d7a26,ordered_list,"# Design 뷰에서 Anchor를 생성합니다.
# Source 탭에서 <kbd>href</kbd> 속성을 아래와 같이 정의합니다."
1341,55c96c2be0a58f43,normal,"화면에 공통 영역이 존재할 경우, 변경되는 부분만 I-Frame으로 그린 다음, I-Frame 부분만 SPA 모드로 로딩할 수 있습니다."
1342,2e98d8e2cd3e0afc,definition_list,"I-Frame 내부에서 SPA 모드로 이동할 경우 
페이지 내에서 <strong><code>$p.url(w2xPath, options)</code></strong> API를 호출"
1343,71beb2effb11f614,definition_list,"I-Frame 외부에서 SPA 모드로 이동할 경우
I-Frame의 spa 옵션을 true로 설정하고 <strong><code>iframe.setSrc(w2xPath)</code></strong>을 호출"
1344,12d5596236111aa2,normal,"SPA 모드에서 IFrame 화면의 뒤로가기를 제어할 수 있습니다. <kbd>spaReplaceHistory=""true""</kbd>로 설정할 경우 뒤로 가기 버튼을 클릭하면 각 IFrame에 담긴 화면이 아닌 브라우저 전체가 이젠 페이지를 표시합니다."
1345,fbd53db24de411df,definition_list,"contents를 I-Frame으로 생성하는 경우
탭 종료 시 I-Frame을 파괴하지 않고 감춘 상태로 보관합니다. 이같은 방법으로 새 tab을 열면 감춰두었던 I-Frame의 setSrc API를 호출하여 I-Frame내에서 브라우저가 갱신 되지 않고 새로운 페이지를 열 수 있습니다."
1346,677a767a32ae5d0a,normal,WindowContainer에서 xml파일을 읽어와 새로운 window를 생성하는 경우 SPA 적용이 가능합니다. WindowContainer 컴포넌트의 <strong><code><kbd>spaInitCount</kbd> </code></strong>속성에 미리 생성할 화면 개수를 설정하십시오. (I-Frame만으로도 새 창을 생성할 수 있습니다.)
1347,b408c16cce250643,normal,"WindowContainer가 IFrame을 포함할 경우, IFrame 화면의 뒤로가기를 제어할 수 있습니다. <kbd>spaReplaceHistory=""true""</kbd>로 설정할 경우 뒤로 가기 버튼을 클릭하면 각 IFrame에 담긴 화면이 아닌 브라우저 전체가 이젠 페이지를 표시합니다."
1348,5a8b7a6755650b5a,normal,"Scope 기능 및 WFrame을 사용하여 SPA를 구현할 수 있습니다. 좀 더 자세한 내용은 <a class=""reference text"" href=""#0b2522fda37f4e81"">동작</a> 부분을 참조하십시오."
1349,d03d3308c99148be,normal,웹 페이지에서 스크립트 코드를 삽입하여 웹 페이지를 해킹하는 것을 XSS (Cross Site Scripting) 공격이라고 합니다. 웹스퀘어는 XSS 공격을 방지하기 위해 <code>escape</code> 속성을 제공합니다.
1350,5931c385b2df07e4,normal,"다음은 GridView 컬럼에 <code>&lt;iframe src= <a class=""link"" href=""http://www.inswave.com"">http://www.inswave.com</a>&gt;&lt;/iframe&gt;</code> 스크립트가 삽입된 경우, <code>escape </code>속성 값에 따른 화면 표시 결과입니다."
1351,bb7625fb5f5cc5ea,normal,<code>escape</code> 속성을 제공하는 컴포넌트는 아래와 같습니다.
1352,0195d0b3c1a0ae8a,unordered_list,"* Anchor
* AutoComplete
* CheckBox
* CheckComboBox
* FilpToggle
* GridView/Grid
* <code>gridView.column</code>
* InputBox
* MultiSelect
* Output
* Radio
* SelectBox
* Span
* Text 
* TreeView"
1353,3e7bf02a434ff81b,normal,"2020-08-21 이후 릴리즈된 SP4 엔진의 경우, <span class=""r_italic_span""><strong>config.xml</strong></span> 파일에서 프로젝트 전체에 대해 <code>escape</code> 속성을 설정할 수도 있습니다."
1354,0d577912e0531eba,normal,"<code>escape</code> 속성의 기본 값은 <code>""true""</code>입니다. 개별 컴포넌트 별 적용은 해당 컴포넌트에 <code>escape=""false""</code> 설정을 별도로 적용하십시오."
1355,c6ca475688bb50b2,normal,각 속성 태그는 <strong><code><kbd>&lt;websquare&gt;</kbd></code> </strong> 태그 하위에 위치합니다.
1356,9b4961b2aa03d3e5,caution,"<strong>비공개 속성</strong>

<code>keepCellClass</code>는 현재 비공개 속성."
1357,ee410c8166ff9816,caution,"<strong>비공개 속성

keepCellClass는 현재 비공개 속성.</strong>"
1358,638766502b1e7706,normal,웹스퀘어 컴포넌트를 추가로 정의하는 경우 사용합니다. 하위노드에 설정된 JavaScript파일을 추가 uiplugin으로 사용합니다. 특정 사이트를 위한 UI Component가 필요한 경우 사용합니다.(deprecated)
1359,b4ac44ab276c44f2,normal,아래의 예와 같이 <strong><code><kbd>&lt;webSquare&gt;</kbd></code></strong> 태그 내부에 속성을 정의하십시오.
1360,0ff3a97c17353189,normal,각 로그 속성에 대한 설명은 아래와 같습니다.
1361,a9c54f4b531f2e31,normal,"다음은 로그 저장을 위한 w<span class=""r_italic_span"">ebsquare.xml</span> 파일 설정 예시입니다."
1362,383132481559751b,normal,웹스퀘어 엔진의 난독화 및 압축 수준을 설정합니다. 값은 1~8까지 설정 가능합니다.
1363,74b5b04426afeb89,normal,w2xType이 포함된 URL을 이용하여 직접 지정할 수 있습니다.
1364,f29442722ee8cf9e,normal,engineType 별 소스는 아래와 같습니다.
1365,ab1bca00e9ee5609,note,"<strong>5M 이상의 파일 업로드</strong>

파일 크기가 5M 이상인 경우, 
(1) Temp 파일은 <code>baseDir</code>로 지정한 폴더로 지정되고, 
(2) 업로드가 완료되면 <code>subDir</code>로 이동."
1366,41a72743a516b7e7,note,"Upload 컴포넌트의 <kbd>subDir</kbd> 속성 값에 이 태그의 이름을 주어 세부 조정을 할 수 있습니다.

(예) 
Upload 컴포넌트에 subDir 설정이 없다면 D:\upload\ 가 기본 경로가 됩니다 subDir 설정 값이 subDir1이라면 D:\upload\test1\ 가 기본 경로로 설정됩니다.)"
1367,0864e95f1dd06e38,normal,"파일명과 파일 경로의 커스트마이징이 필요할 경우, 아래와 같이 추상클래스에 정의되어 있는 method를 구현합니다. 이후, 구현한 class의 전체 package 경로를 <strong><code>fileDefiner</code></strong> 속성에 설정합니다."
1368,d8201454c98be499,normal,아래의 방법으로 복호화 연계를 구현할 수 있습니다.
1369,c7ac5e291279251a,ordered_list,"# 추상 클래스에 정의되어 있는 method를 구현합니다.
# 구현한 class의 전체 package 경로를 <strong><code><kbd>decrypt</kbd></code> </strong> 속성에 설정합니다. (필수)
# 복호화를 위한 temp 디렉토리 작업 경로를<strong><code> <code><kbd>tempDir</kbd></code> </code></strong>속성에 설정합니다. (필수)"
1370,105257e8fc03c23e,normal,"파일명과 파일 경로를 커스트마이징해야할 경우, 추상클래스에 정의되어 있는 method를 구현한 후 imageDefiner value속성에 구현한 class의 package 전체경로를 설정해야 합니다."
1371,67a6975a3cb632dd,note,<code>maxRowCount</code> 속성은 <code>splitProvider</code>와 함께 동작합니다.
1372,3c1c925aa20ba43f,normal,websquare 엔진 내부에서 사용하는 키 값 대신 사용자가 설정한 값을 사용하기 위한 설정.
1373,94e36d516dd467f1,normal,다국어 변환시 참조할 언어 별 JS 파일은 아래의 방법으로 작성하십시오.
1374,e46d460eac2c40fe,definition_list,"<strong>작성 형식</strong> 
(1) 다국어로 표현할 값을 <code><span class=""r_blue001_span"">KEY : VALUE</span></code> 형태의 Array 형식으로 작성하십시오.
+ (2) 다국어 치환에 사용되는 <code><span class=""r_blue001_span"">KEY</span></code>는 모든 언어가 동일한 값을 사용합니다."
1375,d38ca3afbd34e573,normal,"<span class=""r_italic_span"">config.xml</span> 설정 파일에 아래와 같이 언어팩 관련 설정을 추가하십시오."
1376,7305acdb3a25169a,ordered_list,"# WebSquare5 Studio를 실행합니다. 
# 프로젝트를 우클릭한 후 <strong>Properties</strong>를 선택합니다. 
# 좌측에서 <strong>WebSquare</strong> ­ <span class=""r_bold01_span"">Engine Configuration</span>을 선택 후, 아래와 같이 <span class=""r_italic_span"">config.xml</span> 파일을 편집합니다.
## <code>useLanguagePack=""true""</code> 설정을 추가합니다.
## <code>lang</code>에 지정한 언어 구분 키 값을 설정합니다.
## <code>value</code>에 다국어 변환시 참조할 각 언어의 스크립트 파일<span class=""r_italic_span"">ko.js</span>, <span class=""r_italic_span"">en.js</span>, <span class=""r_italic_span"">ch.js</span> 등)을 Context-Root 기준으로 명시합니다."
1377,b160a2a6645a6715,normal,"아래 컴포넌트에 대해 <code>useLocale=""true""</code> 설정 및 <code>localeRef</code> 속성 값으로 다국어를 적용할 경우, localeRef가 언어 파일에 없는 경우 <strong><span class=""r_italic_span"">""global_undefined""</span></strong> 대신 각 컴포넌트의 <code>label</code> 혹은 <code>value</code> 값을 표시할 수 있습니다."
1378,71a946e67f6ee35a,unordered_list,"* Anchor
* Output
* Span
* TextBox
* Trigger"
1379,9ceed6d8e119f8b4,normal,선택 항목은 각 언어 파일에 정의할 <code>KEY</code>로 설정하십시오.
1380,0c7f5a699d20da20,normal,다음은 <code>useLocale</code> 및 <code>useLocaleItem</code> 속성을 설정하지 않았을 때 표시되는 CheckBox의 선택 항목입니다.
1381,8499a4505043299c,normal,"그러나, 아래와 같이 각 언어 파일에 선택 항목 <code>001</code> ~ <code>004 KEY</code>에 대한 언어 별 텍스트를 정의하고, <code>useLocale</code> 및 <code>useItemLocale</code> 속성을 설정하면 각 언어에 대한 텍스트가 표시됩니다."
1382,3734cf1b3b526a81,normal,아래와 같이 SelectBox 설정 창에서 <code>chooseOption</code>과 <code>allOption</code>을 선택합니다.
1383,ba63b6efd5df311a,normal,"각 언어 파일에는 <code>chooseOPptionLabelLocaleRef</code>로 지정할 KEY에 대한 각 언어 별 텍스트를 정의합니다. 아래 예시의 경우, 한국어 브라우저에서는 <strong><span class=""r_italic_span"">""도시를 선택하세요.""</span></strong>가 표시되고, 영어 브라우저에서는 <strong><span class=""r_italic_span"">""Select a city.""</span></strong>가 표시됩니다."
1384,6029f143383ec59d,normal,"다음은 <code>chooseOption=""true""</code> 설정을 추가한 후, <code>chooseOptionLabelLocaleRef</code> 값으로 각 언어 파일에 정의한 <code>""chooseOption""</code> <code>KEY</code> 값을 설정했을 때의 모습입니다. <code>allOption</code>에 대해서는 <strong><span class=""r_italic_span"">""-전체-""</span></strong>와 <strong><span class=""r_italic_span"">""-all-""</span></strong>이 각각 표시됩니다."
1385,117ca8e36c8b574c,normal,"각 언어 파일에는 <code>tooltipLocaleRef</code>로 지정할 <code>KEY</code>에 대한 각 언어 별 텍스트를 정의합니다. 아래 예시의 경우, 한국어 브라우저에서는 <strong><span class=""r_italic_span"">""툴팁용 텍스트입니다.""</span></strong>가 표시되고, 영어 브라우저에서는 <strong><span class=""r_italic_span"">""This is tooltip text.""</span></strong>가 표시됩니다."
1386,6c9961ce96e4b741,normal,"다음은 <code>useLocale=""true""</code> 설정을 추가한 후, <code>chooseOptionLabelLocaleRef</code> 값으로 각 언어 파일에 정의한 <code>""tooltip""</code> <code>KEY</code> 값을 설정했을 때의 모습입니다. (<code><span class=""find"">tooltipLocaleRef</span></code> 값이 없는 경우, <code>tooltip</code> 값속성으로 정의한 값을 그대로 사용합니다.)"
1387,f0a43a2b81d76403,normal,최초 다국어 변환을 요청하면 다국어 치환에 사용될 properties를 서버에 로딩합니다. (재로딩은 할 수 없습니다.)
1388,e745e9860b3fab1f,note,"properties를 수정할 경우 아래 방법으로 재 로딩 하십시오.
1. WAS를 다시 기동합니다.
2. LabelMessageLoader의 instance를 받아 <kbd>reload();</kbd> API를 호출합니다."
1389,05b1ec52d071dacb,note,"다국어로 치환된 화면 XML을 캐싱할 수 있습니다. 즉, 동일한 화면 요청 시 다시 치환화는 과정을 생략할 수 있습니다."
1390,e549144bbe1ebff5,ordered_list,"# <strong><em>w2xPath</em> </strong> 경로에 다국어 처리용 Servlet을 태워서 웹스퀘어 화면 파일을 내려줍니다.
# 다국어 처리용 Servlet은<strong><em> /websquare/config.xml</em> </strong>에 정의됩니다.
# Server에 별도의 다국어 처리용 엔진이 있어야 합니다.
# 글로벌 뱅킹의 경우 다국어 정보는 DB로 관리를 하고 기존 XSL 다국어 처리용 엔진을 웹스퀘어에 맞게 수정하십시오.
# <strong><em>websquare/config.xml</em> </strong> 파일에 아래 설정을 추가하십시오."
1391,2cd546a9da685087,ordered_list,"# 다국어로 치환될 값을 KEY=VALUE 형식의 Property로 작성합니다.
# value는 unicode 값으로 입해야 합니다.
# 아래는 ""TEST"" 키 값에 매칭될 한글명 ""테스트""를 property로 작성한 예입니다."
1392,0274c0a6e088c14f,note,"Eclipse의 Properties Editor 플러그인 사용을 권장합니다. 
properties 파일 작성 시 자동 유니코드 변환 기능이 지원됩니다."
1393,7989c541ba633287,ordered_list,"# 다국어 처리시 WebSquare XML 페이지를 호출할 Servlet 파일의 지정된 스크립트 Function을 지정합니다.
# 페이지 로딩 전 WebSquare 엔진에서 참조할 스크립트를 지정합니다.
# 별도 Servlet에서 다국어 분기 로직을 수행하고 하는 경우 <kbd>pageURLPrefix</kbd>의 value에 Context-Root를 기준으로 해당 Servlet작성합니다."
1394,f49098e1a121d492,ordered_list,"# 다국어 Page를 호출할 Servlet url을 return합니다.
# locale 값을 지정하고자 하는 경우는 url에 파라미터를 포함하여 return합니다."
1395,3bc32fd3066a6b3e,ordered_list,# 다국어에서 필요한 설정값들을 추가합니다.
1396,afd7f600a991614d,ordered_list,"# 페이지 작성시 value에 다국어로 변환할 부분을 ""<strong><span class=""r_blue_span"">!~KEY~!</span></strong>"" 형식으로 지정합니다.
# locale 값을 지정하는 경우 파라미터로 전달합니다."
1397,771319ad08a55420,normal,Project별 Server Locale 설정을 통해 Preview에 서버 다국어가 적용된 화면을 Preview에서 볼 수 있는 기능을 제공합니다.
1398,90ac15b324291a4a,ordered_list,"# WebSquare5 Studio를 실행합니다.
# 해당 프로젝트를 우클릭하여 <strong>Properties</strong>를 선택합니다.
# <strong>WebSquare</strong> ­ <strong>Server Locale</strong>을 선택합니다.
#<strong> User Server Locale</strong>를 체크합니다."
1399,31d642e1807ca533,ordered_list,"# New 버튼을 클릭 하여 등록할 Locale Name을 입력하고 등록할 .properties 파일을 선택합니다. (여러 파일을 선택할 수 있습니다.)
# 등록한 Locale Name 및 .properties의 내용이 화면에 표시되는지 확인합니다.
# 여러 개의 Locale을 등록하면 Preview를 통해 적용된 화면을 볼 수 있습니다."
1400,d67a60fd90c5cbfe,normal,프로퍼티 파일이 아닌 DB를 사용할 경우 해당 파일 일부분(initializeProperty 등)을 참고하여 커스터마이징 class를 생성/등록해야 합니다.
1401,61d5beb70d76d440,normal,DB를 사용하기 위해서 아래의 순서로 작업하십시오.
1402,699475c506f976e1,ordered_list,"# <strong><em>websquare.xml</em> </strong> 변경. (<kbd>i18N</kbd> 노드)
# com.inswave.common.i18n.LoadI18nMessageImpl 생성 및 등록.
# DB 작업 (테이블 생성 및 데이터 등록)
# <strong><em>i18NCommon.js</em></strong> 등록
# <strong><em>config.xml</em> </strong> 설정 추가. (<kbd>i18Ncommon.js</kbd>, <kbd>pageURLPrefix</kbd>)"
1403,b10758c1ec4502d7,note,"<strong>참고용 예제 파일:</strong>

(1) <a class=""link"" href=""https://inswave.com/confluence/download/attachments/9667849/DefaultMessageImpl.java?version=1&amp;modificationDate=1519196138145&amp;api=v2"">DefaultMessageImpl.java</a>: 웹스퀘어 원본 소스. 
(2) <a class=""link"" href=""https://inswave.com/confluence/download/attachments/9667849/websquare_multilang.zip?version=1&amp;modificationDate=1519196149185&amp;api=v2"">websquare_multilang.zip</a>: 특정 프로젝트에 적용한 커스터마이징 소스
(3) <a class=""link"" href=""https://inswave.com/confluence/download/attachments/9667849/LoadI18nMessageImpl.java?version=1&amp;modificationDate=1519196156176&amp;api=v2"">LoadI18nMessageImpl.java</a>"
1404,df7810b0ecba45c6,ordered_list,# websquare.xml 파앨에 아래 내용을 추가합니다.
1405,bb5be66daefab763,ordered_list,"# 위에 등록한 <span class=""r_blue_span""><strong><em>LoadI18nMessageImpl.java</em></strong></span>를 프로젝트에 맞게 수정하십시오."
1406,030e0690517d76e4,normal,해당 클래스는 실제 변환될 다국어 값을 DB에서 읽어 들여 HashTable 에 올려 놓습니다.
1407,ae6b2f9a0f12fd3f,normal,<strong><em>LoadI18nMessageImpl .java</em></strong> 을 컴파일하여 클래스를 등록합니다.
1408,e9776cf6a9c2509d,caution,"첨부파일은 실제 프로젝트 파일과 상이합니다.
프로젝트에 적용된 클래스는 프로웍스 DB커넥션을 이용하므로 JDBC 처리가 다릅니다."
1409,b718ef15c4cef549,normal,아래와 같이 <strong><em>i18Ncommon.js</em></strong> 및 <kbd>pageURLPrefix</kbd>를 설정합니다.
1410,52c1c4c2ce068941,normal,<strong><em>config.xml</em> </strong> 파일에 설정된 <strong><em>i18NCommon.js</em> </strong> 를 WebSquare 디렉토리의 해당 경로에 등록하십시오.
1411,3c64f4d945230e09,unordered_list,* [호출경로 : <strong><em>/wqtemplate/common/js/i18nCommon.js</em></strong>]
1412,a47be37fded837fe,normal,아래 fuction을 포함해야 합니다.
1413,fbdec4a842814530,normal,"페이지 작성시 value에 다국어로 변환할 부분을 ""<strong><span class=""r_blue_span"">!~KEY~!</span></strong>"" 형식으로 지정합니다."
1414,00a3605ae8618a3d,normal,아래와 같이 KEY에 해당하는 locale 값으로 변환됩니다.
1415,a43e39ad9a30e51b,normal,locale 우선 순위는 아래와 같습니다.
1416,57e32f650cb6764d,unordered_list,"* 1순위 쿠키
* 2순위 도메인 설정 (<strong><em>websquare.xml</em></strong>)
* 3순위 request parameter (locale) 값"
1417,75ab85e25b939094,normal,키값에 해당하는 locale 값이 없으면 공백 처리됩니다.
1418,410214e5ea0b49e8,normal,트리거 클릭 이벤트 시 아래와 같이 쿠키에 locale을 설정하십시오. 이후 처리되는 XML 페이지는 쿠키에 셋팅된 locale에 따라 변환됩니다.
1419,9f6d3e2564c04e6b,unordered_list,"* event를 등록하기 위한 함수입니다.
* type이 WebSquare 이벤트인 경우 이벤트 발생 시 WebSquare에서 전달하는 arguments가 해당 핸들러 함수로 전달됩니다. 
+ (ex : grid1.bind(‘oncellclick’, function(row, col){ … })
* type이 Browser이벤트인 경우 이벤트 발생 시 브라우저 이벤트 객체(event)가 해당 핸들러 함수로 전달됩니다. 
+ (ex : input1.bind(‘onclick’, function(ev){ … }))
* 위 두가지에 해당하지 않는 type인 경우 자동으로 이벤트가 발생하지 않으며, trigger 함수를 통해 동작시킬 수 있습니다.
+ (ex : calendar1.bind(‘oncustom’, function(args){ …} );
+ calendar1.trigger(‘oncustom’, [args]); )

* 하나의 type에 대해 여러 function을 bind로 등록할 경우 이벤트 발생 시 bind를 호출한 순서대로 핸들러 함수가 호출됩니다.
* WebSquare 엔진 내부에서 특정 이벤트 type에 대한 이벤트를 등록하여 처리하고 있는 경우, IE 6,7,8의 경우 엔진 내부의 핸들러 함수를 나중에 호출하며, 그 외의 브라우저의 경우 엔진 내부 핸들러 함수를 먼저 호출한 후, bind로 등록된 핸들러 함수들을 차례대로 호출합니다. 
+ (ex : grid1.handleClickEvent = function(e){alert(0); ...} // 엔진 내부 핸들러
+ grid1.bind(‘onclick’, function(e){alert(1);});
+ grid1.bind(‘onclick’, function(e){alert(2);});)
+ (result - IE 6,7,8 : 1 -&gt; 2 -&gt; 0 , 그 외 : 0 -&gt; 1 -&gt; 2 ) 
+ (grid의 click이벤트 핸들러에 alert(0); 코드를 추가했다고 가정한 경우입니다.)"
1420,dde76e2fe014c74d,unordered_list,"* bind 함수로 등록한 event 핸들러 또는 XML에서 스크립트로 등록한 핸들러를 제거하는 함수입니다. 엔진 내부 핸들러나 document.addEventListener로 등록한 함수와 같이 bind로 등록하지 않은 이벤트 핸들러는 제거하지 않습니다. 
* unbind인자로 type, function이 모두 주어진 경우, 해당 type으로 등록된 이벤트 핸들러 중 function과 정확히 일치하는 핸들러를 제거합니다.
* unbind인자로 type만 주어진 경우, 해당 type으로 등록된 모든 이벤트 핸들러를 제거합니다.
* unbind인자로 아무 인자도 주어지지 않을 경우 해당 component에 등록된 모든 이벤트 핸들러를 제거합니다."
1421,53b09b880f0a474f,unordered_list,"* 이벤트를 발생시키기 위해 사용하는 함수입니다.
* type이 브라우저 이벤트이면서 WebSquare component event가 아닌 경우 document.dispatchEvent 또는 document.fireEvent 함수를 통해 이벤트를 직접 발생시킵니다. 이 경우 [object](object array)형태로 추가 인자를 전달한 다음 해당 핸들러의 이벤트 객체에서 해당 인자를 가져와서 사용할 수 있습니다.
+ ( ex : grid1.bind(‘onclick’, function(e){alert(e.a + ‘,’ + e.b);}); 
+ 	grid1.trigger(‘onclick’, [{a : ‘arg1’, b : ‘arg2’}]); )
+ ( result : arg1,arg2)
* 그 외 type의 경우에는 해당 type으로 등록된 핸들러 함수들을 등록된 순서대로 호출합니다. array형태로 추가 인자를 전달하면 해당 이벤트 핸들러 함수에 추가 인자가 전달됩니다. 
* [array] 인자의 type은 반드시 array여야 합니다."
1422,3365ef97c604d480,note,"1. bind, unbind, trigger 모두 WebSquare의 component 단위로 지원합니다. HTML element 단위로는 지원하지 않습니다. 

2. 각 함수 호출 시 type인자의 맨 앞의 2글자가 ‘on’으로 시작하지 않을 경우 자동으로 ‘on’을 붙입니다.

3. type의 이름이 WebSquare event와 browser event가 겹치는 경우가 있는데, 이 경우 항상 WebSquare event 형태의 type으로 간주하여 처리합니다.
(ex : treeview의 ondrop, anchor의 onclick)"
1423,ac1db8d52eaf7062,normal,"본 문서는 웹스케어를 사용하여 모바일 개발 시 주의사항에 대한 가이드입니다. 유념하실 것은 웹스케어는 데스크탑용 브라우저를 위한 AJAX프레임워크로, 모바일 용으로 최적화 되어 있지는 않다는 점을 인지하시기 바랍니다."
1424,2238ee625385c8d9,unordered_list,* 모바일 기기의 해상도가 다양하므로 @media속성을 이용해 최적화된 css를 구성하여 각 기기에 맞는 화면을 꾸밀 수 있다.
1425,6b1b4e5398a54589,unordered_list,"* meta태그의 viewport를 이용해서 기기의 최대가로크기를 정하거나 줌레벨, 사용자 확대축소 방지
* 여부등을 설정 가능하다. meta태그는 websquare.html(jsp)에 넣어야 한다."
1426,9bbe7c7974303284,unordered_list,* 각종 모바일 기기에 따라 키보드나 마우스 같은 장치 유무가 다르기 때문에 마우스나 키보드 사용을 전제해서는 안 된다.
1427,7ce6a7eb0c1c6a22,unordered_list,"* 모바일에서 body를 제외하고, overflow:hidden으로 사용하는 것을 권장 함.
+ 스크롤이 필요한 경우 scrollView 컴포넌트를 사용하여 스크롤을 사용할 수 있다"
1428,95161bf1b1e67f17,unordered_list,"* 스마트 폰 들이 기본적으로 터치 기반이므로 double click 등의 이벤트를 사용하지 말아야 한다.
* 마우스 이벤트의 경우 기기마다 다른 동작을 하므로 주의 하여야 한다."
1429,f842e9a4bf43d1db,unordered_list,* iPhone의 경우 보안을 위해 허용된 디렉터리의 파일만 첨부 가능.
1430,e181512695f55a1d,unordered_list,* 기기에 따라 flash나 silverlight등의 플러그인 사용이 제한되므로 플러그인 사용을 하지 말아야 한다.
1431,16f8331e655e1867,unordered_list,"* 기기에 따라 iframe으로 화면을 구성 하게 되면, focus, blur 관련 동작이 일반 브라우저와 다르게 동작하여 input간 focus가 정상적으로 동작 하는 않는 문제를 발생 시킬 수 있다."
1432,1759fdf30977403e,unordered_list,"* 모바일의 경우 팝업을 띄우게 되면, 새 창(window.open)이 띄며 화면전환이 이루어 지므로 권장 하지 않는다.
* layer 형태의 팝업 및 link를 사용 하는 것을 권장 함."
1433,f19771cbce640fde,unordered_list,"* ifame
* xsl
* ckEditor
* chart (iPhone에서만 동작.)
* upload
* muliupload
* flash
* applet
* active
* multiselect
* slideHide
* tabContainer
* windowContainer"
1434,cffa6b80fa19b6eb,unordered_list,"* iphone os3.1/4.0(safari)
* android ­ galaxyS(2.1-update1, 2.2, 2.3 ), nexusOne(2.2) =&gt; 기본내장브라우저"
1435,ad1899d93f3130e9,normal,"아래의 기준으로 (1) 권장, (2) 사용 가능, (3) 비권장, (4) 사용 금지 컴포넌트로 분류할 수 있습니다."
1436,8f2ee678fcf30623,normal,모바일 웹 개발에 권장되는 컴포넌트는 아래와 같습니다.
1437,8435d900ae63eece,unordered_list,"* CheckBox
* DatePicker
* FlipToggle
* Group
* InputBox
* Image
* Output
* PageControl
* Secret
* Radio
* ScrollView
* Slider
* Spinner
* Trigger
* TextArea
* TextBox
* WFrame"
1438,fb633e994c063de1,normal,<kbd>accessibility</kbd> 속성 설정을 통해 iOS의 VoiceOver 및 Android의 TalkBack 기능을 지원할 수 있습니다.
1439,9f4e0fc94691124d,normal,"<kbd>accessibility=""true""</kbd>로 설정할 경우, 버튼을 HTML의 <kbd>&lt;a&gt;</kbd> 태그로 감싸고, <kbd>aria-valuenow</kbd> 및 <kbd>aria-valuetext</kbd> 같은 HTML 속성을 추가합니다."
1440,26deee3a93aa8303,normal,<kbd>accessibility</kbd> 속성 설정을 통해 iOS의 VoiceOver 및 Android의 TalkBack 기능을 지원할 수 있습니다.
1441,249af0d411d5422a,normal,<kbd>accessibility</kbd> 속성 설정을 통해 iOS의 VoiceOver 및 Android의 TalkBack 기능을 지원할 수 있습니다.
1442,af586184bdade948,normal,<kbd>accessibility</kbd> 속성 설정을 통해 iOS의 VoiceOver 및 Android의 TalkBack 기능을 지원할 수 있습니다.
1443,69fb5c0c75c31ce2,caution,"<kbd>slide=""<span class=""r_red_highlight_span""><strong>false</strong></span>""</kbd>인 경우에만 동작합니다."
1444,471d2a21e40d8753,normal,웹스퀘어는 웹표준 RIA 솔루션으로써 데이터 연계는 기본적으로 웹브라우저와 웹서버 간의 HTTP Protocol을 기반으로한 통신방식을 준수합니다.
1445,d96fca0050890215,unordered_list,"* HTTP Protocol에서 제공하는 Text Data 기반의 통신방식을 지원하며, Ajax 기반의 통신 모듈을 제공합니다.
* 지원되는 통신 Data 구조는 일반적인 HTTP Protocol상에서 범용적으로 사용되는 XML, JSON, Plain Text, Request Parameter(key/value) 등의 구조를 기본적으로 모두 사용할 수 있으나, 가장 권장되는 것은 XML 구조입니다.
* 이하 XML 구조를 기준으로 설명합니다.
* 웹스퀘어가 강제하는 고정된 Format은 없으며, 임의의 표준 포맷을 정의하여 사용할 수 있습니다. (Well-Formed XML의 조건만 만족하면 됩니다.)
* 서버의 데이터 인터페이스 모듈 역시 고정된 모듈을 제공하고 있지 않으며, 정해진 표준 데이터 포맷을 처리할 수 있으면 어떤 형태로든 직접 구현하여 사용할 수 있습니다. (단, 기본적으로 HTTP Protocol 기반으로 연계할 수 있는 Web Application의 구조를 가져야 합니다.)
* 일반적으로 권장되는 데이터 연계와 관련된 시스템 구성은 J2EE기반의 Web Applicaton Server하에서 Web Applicaton Framework을 구성하여 웹스퀘어의 통신객체(Submission)와 표준포맷의 데이터를 교환하는 방식이 될 수 있습니다."
1446,e22d25be145b6cf7,unordered_list,"* 웹스퀘어 화면에서 일반적으로 사용되는 XML, JSON 등의 데이터 구조에 대하여 서버사이드에서 일반적으로 사용되는 데이터 구조체로의 데이터 변환 처리를 통하여 효과적인 데이터 연계 구조를 구성할 수 있습니다.
** 웹스퀘어 화면 데이터 구조 : 표준 웹브라우저에서 표준 JavaScript로 접근가능한 데이터 Object - XML, JSON
** 서버사이드의 데이터 구조 : J2EE기반 Web Application을 기준으로 볼 때, 일반적으로 데이터 구조체로 사용되는 Java Object - Collection(Map/List), VO(Java Beans)
* 상기에 기술한 웹스퀘어와 서버간의 데이터 변환을 수행하는 모듈이 서버단의 Web Application 구조에 포함되어 데이터 연계 시 변환처리를 수행하는 과정이 필요합니다.
** 일반적인 MVC 기반의 Web Application Framework의 구조를 예시로,
*+ - Controller 영역에서 웹스퀘어 Submission으로부터 전달된 화면의 Request XML Data를 서버사이드의 Java Object 데이터 구조체로 변환
*+ - View 영역에서 웹스퀘어 Submission으로 전달할 Response Java Object 데이터를 정해진 표준 포맷의 XML Data로 변환"
1447,5bcb7419f0147bdf,unordered_list,"* 일반적으로 널리 사용되는 MVC 기반의 OpenSource Web Application Framework과의 연동을 위하여 데이터 변환을 지원하는 WebSquare Add-on 모듈을 제공하며, 웹스퀘어 엔진 배포본에 포함되어 있습니다. (websquare_adapter_[version number].jar)
* 이 웹스퀘어 어댑터는 필수사항은 아니며, 필요에 따라 선택적으로 사용할 수 있습니다.
* 이하에 대표적인 범용 OpenSource Web Application Framework에 대하여 웹스퀘어 어댑터를 적용하여 데이터 변환 처리를 하기위한 내용을 설명합니다.
* 웹스퀘어 Adapter에서 사용되는 XML 표준 포맷"
1448,d0a468b8352a2199,ordered_list,# <strong>[Export]</strong> - <strong>[WAR file]</strong>을 선택합니다.
1449,5bb1b57ca6f8cd81,ordered_list,"# <strong><em>setenv.bat</em></strong> 파일을 생성한 후, 환경변수를 설정합니다."
1450,4f79e56645c92ddd,ordered_list,"# WAR 파일을 <strong><em>webapps</em></strong> 디렉토리에 넣고, 톰캣을 기동합니다."
1451,ea3b9dfd5f0cde81,ordered_list,# <strong><em>C:\eGovFrameDev-3.5.1-32bit\workspace\sht\src\main\webapp</em></strong> 디렉토리의 하위 디렉토리를 WAS 의 <strong><em>webapp</em></strong> 디렉터리에 넣습니다.
1452,71b97bdd2bf14785,ordered_list,# <strong>C:\eGovFrameDev-3.5.1-32bit\workspace\sht\target\classes</strong> 디렉토리의 하위 디렉토리를 <strong><em>WEB-INF</em> </strong>의 <strong><em>classes</em></strong>에 넣고 톰캣을 기동합니다.
1453,cb4d318aea4e8a21,ordered_list,# <strong><em>web.xml</em></strong> 파일에 아래와 같이 encoding filter를 추가합니다.
1454,d4c4e9f26bf567f9,ordered_list,# <strong><em>Server.xml</em></strong> 파일의 설정을 변경합니다.
1455,bcb7a40b9765e913,unordered_list,"* <kbd>unpackWARs</kbd>: WAR 파일 자동 언팩 (<kbd>true</kbd>/<kbd>false</kbd>)
* <kbd>autoDeploy</kbd>: 자동 배포 (<kbd>true</kbd>/<kbd>false</kbd>)"
1456,4e52268cb6e90556,ordered_list,# Globals.properties에 각 DB에 맞는 JDBC 설정을 입력합니다.
1457,d43acdde59b54cc5,ordered_list,# <strong><em>context-datasource.xml </em></strong>파일에 각 DB에 맞는 JDBC 설정을 입력합니다.
1458,f95fd4e2aaf06c37,normal,표준프레임워크 적용 후 아래와 같이 로컬 개발 환경을 설정하십시오.
1459,119addab48f451fe,ordered_list,# 추가된 WAS를 더블클릭 합니다.
1460,50674bb95462f27b,ordered_list,# Open launch configuration을 클릭 합니다.
1461,97fbf197a71b4c3d,ordered_list,# <strong>VM Arguments</strong>에 다음 옵션을 추가합니다. (setenv 파일의 JAVA_OPTS에 해당.)
1462,adb42dd530c41258,ordered_list,# <strong><em>web.xml</em></strong> 파일에 다음 내용을 추가합니다.
1463,e2256c41968589eb,ordered_list,# WebSquareAdapter를 사용할 경우 Application 설정에 다음 내용을 추가합니다.
1464,9e1e79b994576c6d,ordered_list,# WebSquareAdapter를 사용할 경우 Application 설정에서 다음 내용을 수정합니다.
1465,c450f0b3fb4123b7,ordered_list,# MessageConverter - Jackson을 사용할 경우 Application 설정에 다음 내용을 추가합니다.
1466,b93315c517fbe3fc,ordered_list,# MessageConverter - Jackson을 사용할 경우 Application 설정에서 다음 내용을 수정합니다.
1467,7c34179fbdfe531d,ordered_list,# Context root를 설정합니다.
1468,e76fa617cef8274b,pre,"WebSquare의 Context root를 Web Project Settings의 Context root와 아래와 같이 다르게 설정할 경우, 프리뷰가 정상 동작하지 않습니다."
1469,ab7e89416e67f4d2,definition_list,"다른 설정을 사용 
Web Project Settings = <strong><span class=""r_blue_span"">/sht</span></strong>
+ Websquare Context RootProject Settings = <strong><span class=""r_blue_span""><span class=""r_red_highlight_span"">/sht2</span></span></strong>"
1470,91d4ed419079696d,ordered_list,# 톰캣의 Context root를 설정합니다.
1471,4cfd26fa02f6a330,ordered_list,# <strong><em>C:\eGovFrameDev-3.5.1-32bit\maven\settings.xml</em></strong> 파일을 열고 <kbd>localRepository</kbd> 값을 설정합니다.
1472,19825c46dcbf1cfe,ordered_list,# 아래 표시한 항목을 선택 해제합니다.
1473,96335cc202c4f0cd,ordered_list,# User Settings의 값을 변경한 settings.xml의 파일로 설정합니다.
1474,e797379e8393c36a,ordered_list,# 웹스퀘어5 엔진과 xbean.jar는 localPath로 추가합니다.
1475,a447b32570c1cad1,ordered_list,# Adapter는 Spring 3.1.x이하 버전과 3.1.x이상 버전이 모두 포함되어있습니다.
1476,641042b294c63f48,ordered_list,# Map 타입을 사용하기 위해 미리 정의된 <kbd>egovMap</kbd>을 사용합니다.
1477,2df7a368cfe9c1d0,ordered_list,# 꼭 필요한 경우가 아니면 <kbd>parameterClass</kbd>는 명시하지 않고 <kbd>resultClass</kbd>는 입력합니다.
1478,0e8a2a56cdbf5d75,ordered_list,"# WebSquareAdapter를 사용할 경우, 
## Controller에서 ModelAndView를 리턴합니다."
1479,64dc7fca0a929fa6,ordered_list,"# MessageConverter를 사용할 경우, 
## Controller에서 Map을 리턴합니다. (본 방법은 Jackson-databind, Jackson-core, Jackson-annotations 라이브러리를 필요로 합니다.)"
1480,8a4442c11230508c,ordered_list,# DAO에서 입력된 Persistence의 id를 입력합니다.
1481,ef857bc7ee5a39fc,ordered_list,# Service를 상속 받고 구현합니다.
1482,b654c54f29c04137,ordered_list,# 추상메소드를 선언합니다.
1483,518bf1c08eeb9d01,ordered_list,# <strong><em>eGovFrameDev-XXX</em></strong> 형식의 ZIP 파일을 C: 드라이브에서 압축해제 합니다.
1484,6a00b04231858a8b,ordered_list,# 아래와 같은 구조로 압축이 풀리는지 확인합니다.
1485,f73af8355fc85f87,ordered_list,# <strong><em>Maria_db.bat</em></strong> 파일을 실행합니다.
1486,3e13935453dbe44a,ordered_list,# <strong><em>eclipse.exe</em></strong> 파일을 실행합니다.
1487,7a60cc295bb7b53a,ordered_list,# <strong><em>Maria_db.bat</em></strong> 파일을 실행합니다.
1488,d074e250a7260e2b,ordered_list,# WTP Server를 실행합니다.
1489,3cfe8bd0e8dbc525,ordered_list,"# <a class=""link"" href=""http://localhost:8080/sht"">http://localhost:8080/sht</a> 를 주소창에 입력 합니다.
# 아래와 같은 화면이 표시되면, 상단의 <strong>고객지원</strong> 탭을 클릭합니다."
1490,6032edb6c9351f70,ordered_list,# 고객지원 탭의 <strong>웹스퀘어5 SP2</strong>를 클릭합니다.
1491,55c485c8017cf148,ordered_list,# 우측 하단의 <strong>글쓰기</strong> 버튼을 클릭합니다.
1492,34762f50e055e879,ordered_list,# 내용 입력 후 <strong>작성</strong> 버튼을 클릭합니다.
1493,c84e733847ab86b1,ordered_list,# 작성한 글 확인 및 첨부파일 다운로드와 답변을 달 수 있습니다.
1494,3355fdb20a3ca0a8,ordered_list,# 작성한 글을 제목을 기준으로 검색할 수 있습니다. (현재는 제목으로만 검색이 가능합니다.)
1495,e4edc629eeef074e,normal,각 로그 속성에 대한 설명은 아래와 같습니다.
1496,c36c4353ab02764f,ordered_list,# <strong><em>Websquare.xml</em></strong> 파일에 아래 내용을 입력합니다.
1497,34586a47b4d88156,ordered_list,# <strong>웹스퀘어5 Demo</strong>를 클릭하면 새로운 탭에서 화면이 호출됩니다.
1498,6ab93673416a58b8,ordered_list,# <strong>대량데이터 조회</strong>를 클릭합니다.
1499,ec64ed025c2bcde5,ordered_list,"# 아래와 같이 설정합니다. (<strong><em>10만 건</em></strong> &amp; <strong> <em>100</em></strong>)
# <strong>FIND</strong> 버튼을 클릭합니다."
1500,619a6c85ca56fe4f,ordered_list,# 그리드의 스크롤을 최하단까지 내리면 5만건씩 추가됩니다.
1501,62ba5bfdbe11ca35,ordered_list,"# SpringBoot 프로젝트 구성시 SpringStartProject로 생성합니다. 
+ (참고 URL: <a class=""link"" href=""http://www.adeveloperdiary.com/java/spring-boot/create-spring-boot-application-step-step/"">http://www.adeveloperdiary.com/java/spring-boot/create-spring-boot-application-step-step/</a>)
# WebSquare Studio Plug-in을 설치합니다."
1502,591b14a1c5fab3bf,normal,SpringBoot 1.5.2를 기준으로 작성한 환경정보는 아래와 같습니다.
1503,24b892fe371a5256,note,# WebSquare Studio는 Mozilla에서 배포한 Xulrunner Plug-in을 사용합니다. 해당 배포 버젼 Plug-in이 64-bit 시스템에서 자주 충돌을 일으키는 것으로 보고되어 32-bit IDE 사용을 권장합니다.
1504,fd4ad6ea8c2d6e39,normal,아래는 개발 환경이 이미 구축되어 있다고 가정 하에 기본적인 Spring Start Project 로 생성된 프로젝트를 기준으로 한 내용입니다. 또한 연계를 위해 SpringBoot의 messageConverters를 사용했습니다.
1505,bbc84577f4af2590,note,"<strong><em>websquare_home</em></strong> 설정 및 Java Options 등록은 방법은 <a class=""reference text"" href=""#76c690f67494b8ab"">WebSquare5 Studio</a>를 참고하십시오."
1506,82810ba306682726,ordered_list,# SpringBoot에서 <strong><em>websquare_home</em></strong>을 아래와 같이 설정하십시오.
1507,7d526d89bf718e67,note,"<strong><em>websquare_home</em></strong> 설정 및 Java Options 등록은 방법은 <a class=""reference text"" href=""#76c690f67494b8ab"">WebSquare5 Studio</a>를 참고하십시오."
1508,cb51afc4d44e1490,ordered_list,# WebSquare 엔진을 설치하십시오.
1509,e4eed4da64f5d964,ordered_list,# WebSquare 리소스(<strong>B</strong>) 를 <strong><em>eGovFrame Project &gt; src &gt; main &gt; resources &gt; static</em></strong> 하위로 복사합니다.
1510,d59238912f01ff1d,ordered_list,# <strong><em>{Project}/pom.xml</em> </strong> 파일을 편집 하여 WebSquare 실행에 필요한 <strong><em>lib</em> </strong> 폴더 하위 Library 를 등록합니다.
1511,f50f30abb1d88f37,ordered_list,# WebSquare Servlet을 등록합니다. SpringBoot에서 Servlet 등록 시 @configuration 어노테이션으로 해당 Servlet을 java 클래스로 작성해야 합니다.
1512,c65e94c92151c6fc,note,JackSon 연계시에는 Jackson 라이브러리만 pom.xml로 선언하십시오. @ResponseBody를 통해 파라미터를 받을 수 있습니다.
1513,c5108935cbbcc408,ordered_list,# Controller Class를 아래와 같이 구현하십시오.
1514,78fc00911329fab5,ordered_list,# 아래 URL을 호출하여 화면이 정상적으로 표시되는지 확인합니다.
1515,370e883f44e15ba5,unordered_list,* <strong>호출 URL</strong>: localhost:8080/websquare/websquare.html?w2xPath=/sample1.xml
1516,2b1ecf48d2b91e97,note,"<a class=""link"" href=""https://inswave.com/confluence/download/attachments/9667849/WebSquareSpringBoot.zip?version=1&amp;modificationDate=1550040657262&amp;api=v2"">샘플 파일 다운로드</a>"
1517,1621f40a5d8b9c84,normal,"전자정부 프레임워크는 Spring 기반으로 적성되었습니다. Spring 프레임워크 연동은 전자정부 프레임워크 연동과 매우 유사합니다. Spring 프레임워크 연동은 <a class=""reference"" href=""#53a43f26d6016362"">전자정부 프레임워크 연동</a> 부분을 참조하십시오."
1518,9c116b79061ee268,normal,스트러츠 연계는 데이터의 구조체로서 ActionForm(Java Beans구조)을 사용하는 Struts 1 버전을 기준으로 설명합니다.
1519,493f31bbceca0225,unordered_list,"* 스트러츠 프레임워크는 MVC 기반의 Web Application Framework로서, 웹스퀘어와의 연계를 위해서는 다음과 같은 연계 작업이 필요합니다.
* RequestProcessor class를 구현하여 Controller단의 request data 변환 및 View단의 response data 변환을 처리할 수 있도록 합니다.
* 스트러츠에서 데이터의 구조체로 사용되는 VO인 ActionForm에 데이터가 연계되도록 Annotation 방식으로 Action Class에 지정합니다."
1520,51ba717fa95463bf,normal,"WebSquare 는 서버와의 Data 연동을 위하여 Submission 이라는 통신 객체를 생성하고 , HTTP Ajax 방식에 기반한 표준 포맷의 데이터를 송수신 합니다. 본 가이드는 서버사이드에서 WebSquare 화면과 데이터 연동을 하는데 있어 서버측에서 사용하는 Java Object 형태의 데이터와 통신 데이터 사이의 변환을 처리하기 위하여 제공되는 WebSquare Data Adapter 의 사용법을 다룹니다."
1521,0f6c951c91f1ba16,unordered_list,"* WebSquare Data Adapter는 J2EE 표준 규약을 준수하는 Web Application Server에서 동작하는 Java Library 형태로 제공되며, HTTP 통신상의 HttpServletRequest, HttpServletResponse 객체를 핸들링하는 형태로 제공되며, 클라이언트와 연계되는 통신 데이터를 변환하는 역할을 합니다."
1522,3ac1e20163e88f4f,unordered_list,* 클라이언트 데이터(클라이언트-서버 간의 통신)는 HTTP기반의 Ajax 통신에서 표준방식으로 사용되는 xml과 json 타입의 텍스트 기반 데이터 Format을 지원합니다.
1523,37b7dc6e02f2fa4e,unordered_list,* 서버사이드에서 사용되는 데이터의 형태는 Java Object 형태의 Map/List 객체 타입과 POJO형태인 Java Beans(VO) 타입을 지원합니다.
1524,8e8da430d222eb1f,unordered_list,* HttpServletRequest에 포함되어 전달된 request data(XML or JSON String)를 추출하여 서버사이드에서 사용할 Java Object(Map or VO) 타입으로 변환처리를 수행합니다.
1525,92c0b4d42649e6ab,unordered_list,"* 설정을 통하여 통신데이터(XML, JSON)와 서버사이드의 데이터 type(Map/List, VO)을 정의할 수 있으며, 통신데이터의 경우 설정을 하지 않으면 기본적으로 request의 Content-Type(media-type)에 따라 동작합니다."
1526,3f2b1a892a7b78e5,unordered_list,* 서버사이드에서 출력할 데이터를 Java Object(Map or VO) 타입에서 String(XM or JSON) 타입으로 변환처리를 수행합니다.
1527,03e367a8437c93ba,unordered_list,"* RequestAdapter와 동일하게, 설정을 통하여 통신데이터(XML, JSON)와 서버사이드의 데이터 type(Map/List, VO)을 정의할 수 있으며, 통신데이터의 경우 설정을 하지 않으면 기본적으로 request의 Content-Type(media-type)에 따라 동작합니다."
1528,e4f4b41660032e16,unordered_list,"* convert method를 통하여 변환된 String data를 return 받을 수 있으며, convertAndSend method를 사용하면, HttpServletResponse의 OutputStream으로 직접 write를 합니다. (설정을 통하여 GZipStream으로의 압출 전송도 지원합니다.)"
1529,5dd8cb827d7ab444,unordered_list,"* DefaultAdapterServlet을 통하여 Request/Response 데이터 변환을 수행합니다.
* WebS Context의 설정파일인 web.xml에 등록하여 활성화합니다.
* 변환된 데이터를 전달하여 업무 클래스로 분기하는 것은 Adapter Servlet Controller를 구현하여야 합니다.
* Adapter Servlet Controller는 Adapter Servlet으로부터 넘어온 input data를 받아 업무클래스를 호출하고, 업무클래스로부터 넘어온 output data를 다시 Adapter Servlet으로 넘겨주는 역할을 합니다. 업무 클래스를 판단/분기하고 실행하는 처리는 Adapter Servlet Controller의 영역에 해당하며, IAdapterServeletController interface를 implements하여 구현합니다.
* 구현한 Adapter Servlet Controller는 설정파일에 등록하여 Adapter Servlet이 인식할 수 있도록 합니다.
* Adapter Servlet Controller를 동록하는 방법은 두가지가 있다. (web.xml에 등록하는 방식을 권장함.)
** WebSquare의 설정파일인 websquare.xml에 등록할 수 있으며, 모든 WebSquare Adapter Servlet에 적용됩니다.
** Web Application Server의 context 설정파일인 web.xml에 WebSquare Adapter Servlet을 등록 시에 해당 Servlet의 init parameter로 Controller를 등록할 수 있다. 이렇게 등록된 경우에는 각 Servlet 단위로 Controller를 별개로 배치할 수 있으며, 이 설정은 websquare.xml의 설정보다 우선권을 갖습니다."
1530,17700ae27cff8e59,unordered_list,"* Filter는 J2EE 표준 스펙에서 제공되는 기능으로, 특정 URL 호출에서 대하여 메인프로세스에 대한 Request 전처리, Response 후처리의 기능을 제공합니다.
* AdapterFilter를 적용하면 특정 URL의 호출에 대하여 Request 메인프로세스(Servlet실행) 이전에 Data 변환을 수행하여 전달하여 주고, Response 프로세스 수행 후 Data 변환 후 Client로 데이터를 전송합니다.
* 제공되는 AdapterFilter를 Web Context 설정(web.xml)에 적용하여, URL 패턴에 따라 적용된 범위를 설정할 수 있으며 Web Application 구조에 종속되지 않고 전후처리기의 개념으로 별도의 모듈로 적용할 수 있습니다.
* AdapterFilter를 통하여 Request 데이터를 전달받는 Servlet은 이미 변환된 Java Object 타입의 데이터를 전달받게 되며, 이 데이터는 HttpServletRequest 의 attribute로 전달된다. Response 데이터도 마찬가지로 HttpServletRequest의 attribute로 Java Object 를 전달하면 AdapterFilter에서 변환처리를 수행하여 client 로 전달합니다.
* 주의: J2EE 표준 스펙에서 Filter는 다중으로 적용가능하며, 여러 Filter를 다중으로 설정할 경우, WebSquare AdapterFilter를 가장 앞서서 수행하도록 설정하여야 합니다. (Request Data Stream 추출에 대한 최우선처리가 되어야 함)"
1531,0b48c3340677db71,unordered_list,* Request/Response Adapter는 내부적으로 Request/Response Converter를 통하여 데이터 변환을 수행합니다. 기본 Request/Response Converter는 다음과 같은 규칙으로 데이터의 변환을 수행합니다.
1532,9c9a675cbcb8c1f9,headline,주의: VO(Beans) 형태로 데이터를 연동하는 경우의 데이터 Type 제약사항
1533,9693c829f4c7421c,ordered_list,"# 각 VO Class 내의 Member Field에는 대응되는 getter, setter method가 반드시 존재하여야 하며, Member Field의 Type과 setter method의 parameter Type, getter method의 return Type은 반드시 일치하여야 합니다.

# 사용할 수 있는 Member Field 의 Class Type은 아래와 같다. 이 외의 Type은 기본적으로 지원되지 않습니다.
+ - String
+ - int, Integer
+ - float, Float
+ - double, Double
+ - BigDeciaml
+ - java.util.Date
+
** 이 외는 기본적으로 String으로 casting된 형태로 적용되므로, 원치 않는 동작이 발생할 수 있습니다.

# boolean Type의 Member Field의 경우 getter method의 prefix는 'is'로 시작합니다. 그 외 Type(Boolean Type 포함)의 getter method의 prefix는 'get'이다. setter method는 모두 'set' prefix를 갖습니다. (Eclipse 의 generate getter/setter의 규칙과 동일)"
1534,99bead817d3e4b2e,pre,"private boolean useSession;
public boolean getUseSession() (X) -&gt; boolean type이므로 is prefix로 정의하여야 합니다.
public booleanisUseSession() (O)

예외) Member Field의 이름 자체가 소문자 'is' prefix를 가진 경우, getter method는 Member Field 와 동일한 이름을 가지며, setter method 는 'ls'를 제거하고, 'set' prefix를 붙인다. (Member Field 명이 'is'가 없는 것과 동일한 형태가 된다.)

private boolean isSession;
public boolean islsSesstion() (X)
public boolean isSession() (O) -&gt; getter method 의 이름도 동일하게 isSession이 되어야 합니다.
Public void setlsSession(boolean session) (X)
Public void seSession(boolean session) (O) -&gt; 'is'를 제거

private boolean lsSession;
public boolean isSession() (X)
public boolean islsSession() (O) -&gt; Member Field 가 대문자 'ls'로 시작하면, 원래의 규칙을 따른다."
1535,a92854d3dba5981c,unordered_list,"* Type에 따라 혼동이 발생할 수 있으므로, 되도록이면 Member Field명 자체에 'is' prefix를 쓰지 않는 형태로 사용하기를 권장함."
1536,2bb24268e017a7f2,ordered_list,"# Data Type 의 경우 String 형태의 문자열 데이터를 지정된 data format에 따라 변환하는 방식으로 제공하며, format은 설정을 통하여 변경할 수 있다. Format은 Java Date Format의 기준을 따른다.
+ (default: 'yyyMMdd', 7장 Configuration 참고)"
1537,fc0b008b9b4f445f,unordered_list,"* VO의 경우 데이터 변환 시에 해당 VO 객체에 대한 Class Type을 명시적으로 지정해 주어야만 VO 객체를 생성하여 값을 처리할 수 있습니다.

* Request 시에 xml/json format의 데이터를 VO 객체로 변환하기 위하여 VO Class의 type에 대한 정의를 Converter로 전달해 주어야 정상적으로 VO 객체를 생성하게 되며, 아래 3가지 방법이 제공됩니다. response VO 객체의 경우도 VO Class type을 인식해야 정상적으로 xml/json format로 변환되므로 request 용도의 VO, response용도의 VO 모두 class type을 지정합니다.

* VO 객체의 변환은 XML의 map, node, JSON의 json object에 해당됩니다. 즉, XML의 map node, JSON의 json object에 대하여 변환된 VO 클래스를 지정하며, 반복데이터인 XML의 list node, JSON의 json array의 변환타입은 각 list node, json array의 VO 객체의 타입이 아닌 내부에 반복데이터로 존재할 row 레벨의 map node, json object에 해당하는 VO 객체의 타입을 의미합니다."
1538,7cbc8dd649bf4704,unordered_list,"* 클라이언트에서 서버로 전송될 데이터 내에 VO 클래스의 정의를 포함하여 서버로 전송합니다.

* ""BEAN_DEF""라는 key로 XML의 map node, JSON의 json object에 해당하는 VO 클래스의 type을 지정합니다. ""root""는 최상위 VO 객체의 type을 지정하는 key에 해당합니다."
1539,dd5e17a6d01cc9d2,unordered_list,"* 서버에서 ReqeustAdapter 호출 시 convert method의 parameter로 Map 객체로 정의한 VO Class 정의를 전달합니다.

* ""root""는 최상위 VO 객체의 type을 지정하는 key에 해당합니다."
1540,ada5814c4e2a8f43,unordered_list,"* Annotation을 사용하기 위해서는 JDK1.5 이상의 환경이어야 합니다.

* Annotation의 정의를 위하여 WebSquare의 websquare.system.adapter.annotation.BEAN_DEF Annotation interface가 제공됩니다.

* MVC Web Application Framework 구조의 경우 데이터 변환을 수행할 Controller 영여겡서 수행할 Model 클래스에 Annotation 을 정의하고 접근 가능한 구조여야 합니다.
+ (예: Spring 의 Controller 객체, Struts의 Action 객체 등)"
1541,43cc07081ec98a8b,unordered_list,"* WebSquare Adapter의 구조에서 Request/Response Converter를 통하여 데이터 변환이 수행되며, 별도로 COnverter 를 명시적으로 지정하지 않으면, 기본 Converter가 사용됩니다.

* 기본 Converter에서 제공되는 Data Format이 아닌 별도의 Data Format을 적용할 목적으로 Custom Converter를 구현하여 적용할 수 있는 구조가 제공됩니다.

* 단, Custom Converter를 적용할 경우 데이터 변환에 대한 일체의 작업은 직접 구현해야 합니다."
1542,419cfbbc431b36fb,unordered_list,"* IRequestConverter interface를 구현상속 받아 임의의 RequestConverter를 구현합니다.

* WebSquare의 서버 설정 파일인 websquare.xml 상에 구현한 converter를 설정합니다.

* 설정 파일에 등록하지 않고 RequestAdapter의 convert method를 호출 시 parameter로 전달하여 동적으로 호출하는 형태로도 사용 가능합니다."
1543,8de34e44215f8a22,unordered_list,"* IResponseConverter interface를 구현상속 받아 임의의 ResponseCOnverter를 구현합니다.

* WebSquare의 서버 설정 파일인 websquare.xml 상에 구현한 converter를 설정합니다.

* 설정 파일에 등록하지 않고 ResponseAdapter의 convert, convertAndSend method를 호출 시 parameter로 전달하여 동적으로 호출하는 형태로도 사용 가능합니다."
1544,3bbfff651fc7f744,unordered_list,"* WebSquare Data Adapter의 대부분의 기능은 설정파일 상에서 설정이 가능하다, 단, 여기에서 의미 하는 설정은 기본 Converter의 동작에 대한 설정에 해당하며, Custom Converter를 구현한 경우에는 데이터 변환 관련 설정들은 적용이 되지 않습니다.

* 설정은 WebSquare의 서버 설정 파일인 websquare.xml에 적용합니다. 적용하지 않은 경우 default값으로 동작합니다."
1545,0a73bd6a0ba7ac8d,pre,"- adapter/request/parameterKey : Form Parameter로 전송 시 parameter key(default: xmlValue)
- adapter/request/attributeKey : Filter 통과 시 HttpServletRequest attribute key 
  (defalut: WQ_VALUE_DATA)
- adapter/request/convertType: 데이터 변환 포맷 정의"
1546,c1be2c3b05ed4a81,unordered_list,"* server: map/bean (default: map)
* client: xml/json/없음 (default: 없음)
+ -&gt; 설정하지 않으면 request 의 Content-Type에 따라 동작합니다.
+ (application/xml, application/json)"
1547,27b76d559b8d16fe,normal,- adapter/response/convertType: 데이터 변환 포맷 정의
1548,9c8e707738a6d4bd,unordered_list,"* server: map/bean (default: map)
* client: xml/json/없음 (default: 없음)
+ -&gt; 설정하지 않으면 request의 Content-Type에 따라 동작합니다.
+ (application/xml, application/json)"
1549,0e439ef2b54f0b81,pre,"- adapter/response/charset: response data의 character set(default: UTF-8)
- adapater/response/customConverter: custom response converter 지정( default: 없음)
   -&gt; 설정하지 않으면 기본 Converter로 동작합니다.
- adapter/response/compress: Response 데이터 압축 여부 (default: false, 압축하지 않음)
- adapter/response/immediateToStream: convertAndSend method 호출 시 output String을 생성하면서 바로 OutputStream에 write 할 것인지 여부. IResponseConverter의 convert method의 argument로 OutputStream을 넘겨준 경우에 해당함. (default: true)
- adapter/xml/mapNode: xml map node명 (default: map)
- adapter/xml/listNode: xml list node명 (default: list)
- adapter/xml/valueNode: xml value attribute명 (default: value)"
1550,85011a765551c221,unordered_list,* use 속성: use=false인 경우 node의 text 값을 value로 사용합니다. (default: false)
1551,4897cdc8f1127e54,pre,"- adapter/xml/convertAttributeToNode: request xml의 attribute를 node data로 치환 여부(default: true)
- adapter/xml/attributePrefix: request xml의 attribute를 node data로 치환할 경우 node명의 prefix(default: 없음)
- adapter/xml/attributePostfix: request xml의 attribute를 node data로 치환할 경우 node명의 postfix(default: 없음)
- adapter/xml/encoding: xml response xml 생성 시 encoding 처리 여부 (default: true)
- adapter/xml/useIndent: response xml 생성 시 indentation 처리 여부 (default: false)
- adapter/servlet/controller: Adapter 를 servlet 형태로 적용할 경우, Adapter Servlet에서 호출할 Adapter Servlet Controller 클래스를 지정합니다.
- Adapter/bean/dateFormat: VO 에서 Date 타입의 멤버변수에 대하여 date format을 지정"
1552,7ae4e771ede12887,unordered_list,"* request: Java Date Format (default: 'yyyyMMdd')
* response: Java Date Format (default: 'yyyyMMdd')"
1553,8512735509404424,normal,의도치 않은 전역 변수 선언이 있는지 확인하십시오.
1554,dcce9b2165398287,normal,"<kbd>var</kbd> 선언 없이 변수를 생성할 경우, 전역 변수가 생성됩니다. 함수 내에서만 필요한 변수가 전역으로 선언될 경우, 함수 종료 후에도 참조가 가능하여 메모리 누수가 발생할 수 있습니다."
1555,4f716300d9adc3c5,normal,객체에 적접한 API 사용 여부 및 수식 형태를 확인하십시오. API나 수식을 올바른 형태로 사용하지 않을 경우 에러가 발생하거나 잘못된 값이 반환될 수 있습니다.
1556,7ce211082155c33f,normal,객체 형태에 적합한 수식을 사용했는지 확인하십시오.
1557,b5bf71655b54c5a1,normal,"공통 소스의 경우, 사용하는 객체의 Lifecycle을 확인하여 재사용하거나 혹은 사용하지 않을 경우 삭제하십시오."
1558,e717f5de00ee1050,normal,공통에서 자주 호출되는 함수는 최소한의 자원 사용으로 결과를 반환할 수 있도록 작성하십시오.
1559,bf071a22e26f6f02,normal,코드 분량과 코드 실행에 필요한 자원을 고려하여 최대한 가독성이 높은 형태로 코드를 작성하십시오.
1560,c9c0f8e15c54358b,normal,데이터 형태에 적합한 수식을 사용해야 합니다.
1561,1e0acab1e437c19e,normal,선언되는 변수의 사용성에 따라 선언 위치와 사용 방법을 결정하십시오.
1562,a1da30dceaacb7cd,normal,수정 내용은 아래와 같습니다.
1563,e2b2ebe8e48aca42,ordered_list,"# CodeTable은 입력값 검증을 위해 참조되는 입력가능한 문자의 집합 스트링이므로 top에서만 선언. (메모리 절약)
# IFrame이 참조하는 API는 top의 String을 반환하는 API로 생성. (반환값은 slice(0)을 통해 복사된 string.)
# 컬럼 값에 허용 가능한 문자들을 IFrame 내의 API를 이용하여 하나의 String으로 생성.
# 컬럼 값에서 하나의 char 씩 가져와서 가능한 문자 String에 존재하는지 확인."
1564,6e4ed66b6bbfa38e,normal,String이 아닌 Object 형식의 리턴 값은 사용하지 마십시오. 브라우저에 따라 메모리 누수가 발생할 수 있습니다.
1565,d400126cf050f75a,normal,공통 소스는 최대한 빠른 시간에 결과 값을 반환할 수 있어야 합니다.
1566,4d9050585056adae,normal,"DataList나 DatdaMap의 경우, 데이터 변경이 발생할 때마다 이벤트도 함께 발생합니다. 다른 컴포넌트에 영향을 주는 이벤트일 경우, 한번에 데이터를 변경할 것을 권장합니다."
1567,8fcc0d40d0a022ba,normal,"메모리와 성능을 고려한 개발은 프로젝트의 성공 여부를 결정하는 요소 중 하나입니다. 특히, 특히 공통 소스는 모든 업무 화면에 영향을 줄 수 있기 때문에 메모리 및 성능에 영향이 없도록 최대한 간결하게 작성하심시오."
1568,223ffcc6b0f07284,normal,메모리 사용량이 증가는 메모리 부족을 의미하며 이는 곧 스크립트 수행 속도 저하로 이어집니다. 브라우저에 HTML 태그가 느리게 렌더링되어 브라우저의 백화 현상이 발생하거나 심할 경우 브라우저가 정상 동작하지 않습니다.
1569,76c14ba0e2db4c1c,normal,메모리 관리는 브라우저 사용성 및 개발 프로그램의 성능의 핵심입니다.
1570,2b27edd42b2fed7c,unordered_list,"* WebSquare5는 각 컴포넌트 별로 API를 제공하며 개발자는 각 컴포넌트에 대해 이벤트를 등록할 수 잇습니다. 제공된 API를 사용하여 개발할 것을 권장합니다. 
* 공개 API와 이벤트는 <a class=""link"" href=""http://docs.inswave.com"">WebSquare 기술문서</a>에서 확인할 수 있습니다. 
* API 문서에 공개되지 않았지만 브라우저 개발자 도구에서만 확인된 API는 향후 변경 가능성이 있습니다. 해당 API 사용시 스크립트 에러가 발생할 수 있으며 사이트에서 문제 확인 및 디버깅이 어렵고 프로그램 수정이 필요한 경우도 발생할 수 있습니다."
1571,4003879386d4d384,unordered_list,"* jQuery에서 제공하는 API를 이용하여 컴포넌트를 검색하는 것은 간편하지만 검색 대상이 많은 경우 속도 저하가 발생할 수 있습니다. 또한 검색 후 수행되는 스크립트에 따라 검색을 위해 사용한 Object가 릴리즈 되지 않을 수도 있습니다.
* jQuery를 이용하여 이벤트를 등록할 경우 일부 브라우저에서는 컴포넌트(HTML Tag)에 등록된 이벤트를 먼저 삭제해야 컴포넌트 삭제시 컴포넌트에 연계된 Object들이 릴리즈 되는 경우가 있습니다."
1572,408ee148fff818e7,unordered_list,"* WebSquare에서는 업무 화면에서 함수 또는 상수 값 선언 시 객체의 속성으로 설정하여 사용할 것을 권장합니다. 화면 unload 시점에 선언된 객체의 속성으로 등록된 함수 및 상수를 제거하여 메모리 누수를 방지하십시오. 
* 업무화면 내에서 사용하는 전역 변수 또한 지정된 객체의 속성으로 등록해서 사용하십시오."
1573,bb1079f27f0c9eb8,normal,업무화면에서 통신 객체(Submission)를 생성하여 필요한 통신 객체를 수행하는 것을 권장합니다.
1574,a0ebb3767ce039d5,normal,업무 화면에서 필요한 통신 객체를 미리 생성해 놓는 것은 소스 가독성이나 Workflow 연계를 위해서도 필요한 중요한 작업입니다.
1575,dd118f1d13c2e65e,normal,동적으로 Submission을 생성하는 경우 동일한 id의 Submission이 존재하는지 확인하십시오. 동일한 ID를 사용할 경우 기존 Submission의 ID를 수정하거나 삭제하십시오.
1576,cff8050b4201abe8,normal,Submission 실행시 비동기(Asynchronous) 모드의 통신을 권장합니다.
1577,01f081a828df62de,normal,"<strong><span class=""r_italic_span"">config.xml </span></strong>파일에 <kbd>&lt;warningSyn&gt;</kbd> 항목이 <strong><span class=""r_systemfont_span""><span class=""r_blue001_span"">""true""</span></span></strong>로 설정된 경우, 동기(synchronous) 모드의 Submission에 대해 경고 메시지가 표시됩니다."
1578,60a227eb1623b573,normal,WebSquare는 Submission을 이용한 통신을 권장합니다. 그러나 사용자가 직접 통신 관련 설정을 해야하는 경우를 위해 <kbd>$p.ajax</kbd> API를 제공합니다.
1579,3039aac29b4daaa4,normal,"아래 에제의 경우, 사용자가 직접 제어할 수 있도록 응답 결과 객체를 반환하고 있습니다. 그러나 업무 화면의 콜백 함수로 그대로 넘기기 때문에 업무 화면에서 변수 등에 직접 할당할 경우 통신 완료 후 응답 객체가 메모리에서 릴리즈되지 않을 수 있습니다."
1580,0fd448d050c9ac5e,normal,"Closure는 전역이 아닌 지역 변수 선언이 가능하여 공통 모듈에서 많이 사용합니다. 단, Closure 안에서 Object 형태의 외부 객체를 직접 참조하지 않도록 주의하십시오. 메모리에서 릴리즈 되지 않을 수 있습니다."
1581,84105738a67d20a5,normal,"특히 Closure 함수를 비동기 형태로 호출할 경우, 객체를 직접 다른 변수에 할당하면 참조 관계가 발생합니다. 이 경우, 함수 실행이 완료되더라도 메모리에서 제거되지 않을 수 있습니다."
1582,daf05755d8a78f91,normal,아래 에제에서 <strong>test2</strong>는 <strong>test</strong>와 직접 참조 관계가 이루어져 <strong>test</strong> 값 변경에 따라 <strong>test2</strong> 값이 변경됩니다. 즉 <strong>test2</strong>와 참조 관계가 발생하여 <strong>test</strong> 사용이 끝난 뒤에도 메모리에서 제거되지 않습니다.
1583,737743735555131a,normal,"따라서 일반적으로 String 타입으로 파라미터를 전달하나, 직접 Object형식으로 파라미터를 전달해야만 하는 경우 반드시 초기화를 수행하여 호출된 함수에서 전역변수로 재사용되는 것을 방지하십시오."
1584,80ce498100bc3bcc,normal,"DataCollection은 개발도구에서 생성하거나 API를 통해서 생성할 수 있습니다. 단, 업무화면에서는 유지보수를 위해 개발도구에서 DataCollection 선언 한 뒤 스크립트에서 사용하는 것을 권장합니다."
1585,e550e4b62315f252,caution,DataCollection을 API를 이용하여 생성할 때 동일한 id가 이미 존재하는 경우 삭제 후 생성하십시오.
1586,559c040429e20f30,normal,"DataList는 <kbd>removeAll</kbd>, DataMap은 <kbd>reset</kbd> API를 이용하여 등록된 데이터를 삭제하십시오."
1587,c7a163c1d82fa928,normal,일반적인 네이밍 규칙에 어긋난 변수명 역시 메모리 누스를 유발합니다. 일부 브라우저(Internet Explorer)에서 변수명이 숫자로 이루어진 경우 메모리 누수 현상이 발생하는 경우가 있습니다. 일반적인 변수명 사용 규칙에 따라 영문으로 시작하는 변수명을 사용하십시오.
1588,f1393977ebd21051,normal,"WebSquare에서 제공하는 컴포넌트는 id를 지정해야 합니다. 단, 이벤트 등록이나 스크립트에서 호출할 필요가 없는 경우 id를 생략할 수 있습니다."
1589,d5e2e10f30f47ccc,unordered_list,"* 팝업에서 opener의 함수를 호출하는 경우, 호출된 함수가 정상적으로 완료되어 참조 관계가 끝난 뒤에 팝업을 종료해야 합니다.
* 팝업의 호출 순서에 따라 역으로 팝업을 종료하십시오 즉 A → B → C 순서로 호출했다면 C → B → A 순서로 종료해야 합니다.
* Popup 결과는 기본 자료형(일반적으로 String)으로 반환하십시오. Object (JSON 등) 형식으로 직접 전달할 경우 메모리 누수가 발생할 수 있다. (<a class=""reference"" href=""#272c136efb9b572d"">타 Frame으로 객체 전달</a> 참조.)
* 최신 ECMAScript 표준은 아래의 6개의 자료형을 정의합니다.
** 기본 자료형(Primitive)인 여섯가지 데이터 타입: Boolean, Null, Undefined, Number, String, Symbol"
1590,731a968f8f502cf9,unordered_list,"* 다른 Frame의 함수 호출 시 String 타입의 객체 형태로 파라미터를 전달하십시오. String 타입이 아닌 JSON 객체 등을 직접 전달하여 다른 Frame의 객체에 할당할 경우 일부 브라우저에서 메모리 누수 현상이 발생합니다.
* 다른 Frame간 전달되는 Object의 타입은 팝업 형식의 호출에만 국한된 것이 아니고 IFrame으로 구성된 화면에도 적용됩니다. Frame 간의 파라미터 전달 방식은 String 타입의 객체를 파라미터로 전달하십시오."
1591,7182b24027703792,normal,"JavaScript는 느슨한 타입(loosely typed) 언어, 혹은 동적(dynamic) 언어입니다. 즉, 변수 타입을 미리 선언할 필요가 없고 프로그램이 처리되는 과정에서 자동으로 파악 변환되기도 합니다. 공통함수가 객체 타입에 따른 대응을 못하고 에러가 발생하는 경우 스크립트가 중지되고 브라우저에 따라 성능 및 메모리에 영향을 받습니다."
1592,f58eced6f7db47b1,normal,"JavasSript는 느슨한 타입(loosely typed) 언어로 변수 선언을 위해 사용하는 <kbd>var</kbd> 문자를 누락해도 스크립트는 정상적 수행됩니다. 단, 이 경우 해당 변수는 전역에 선언되어, 함수 종료 후에도 계속 참조가 가능하고 자동 릴리즈가 되지 않습니다. SPA 방식으로 이동하는 화면인 경우 이는 메모리 누수 현상으로 이어집니다."
1593,39611d1890bef42f,normal,"각 업무 페이지의 SelectBox나 CheckBox와 같은 공통 코드(혹은 코드성 데이터)가 존재합니다. 이 같은 공통 코드는 업무 페이지의 데이터를 불러오기 전에 먼저 조회해야 합니다. 비동기(asynchronous) 통신을 사용할 경우 공통 코드 조회가 완료되기 전에 업무 페이지의 데이터가 먼저 로드될 수 있습니다. 이 경우 SelectBox, CheckBox와 같은 공통 코드가 제대로 표현되지 않습니다."
1594,c22cff67281750d5,normal,아래의 방법을 권장합니다.
1595,bff42682aae8587a,unordered_list,"* orkflow 혹은 동기 통신을 사용하십시오.
* 동기 통신을 통해 함수 구현 시 하나의 request에 (각 업무 페이지에서 필요한) 코드 여러 개를 한번에 조회하십시오.
* MDI 혹은 WindowContainer를 사용할 경우 한번 조회한 공통 코드는 공통 영역에 저장하십시오."
1596,ad10bf68a64e8cde,normal,"WebSquare5로 렌더링된 화면은 대부분의 작업을 브라우저에 위임합니다. 즉, XML 파일을 HTML Tag 로 변환하여 브라우저가 변환된 HTML을 해석하도록 위임합니다."
1597,ff94e7afb2e53812,normal,아래와 같은 최적화 작업을 수행하여 웹사이트 성능을 최적화하십시오.
1598,20b43e6c307b48a9,definition_list,"Expires 헤더 추가
정적인 자원(stylesheet, image, script 등)의 비효율적인 처리는 성능 저하로 연결됩니다. 
+ 해당 자원들 헤더에 Expires 정보를 추가하여 캐시 처리를 하십시오. 
Gzip 압축
외부 파일 및 Response 데이터를 압축하여 성능을 높일 수 있습니다. 
+ 대부분의 브라우저가 Gzip 압축 전송을 지원하므로 Gzip 압축을 권장합니다."
1599,83351a9097c68f60,normal,IFrame 수가 지나치게 많은 경우 메모리 점유율이 올라갑니다. IFrame 대신 WFrame을 사용을 권장합니다.
1600,c83d3f98d1c773f8,normal,"TabControl 컴포넌트는 <strong><kbd>frameMode</kbd></strong> 속성값으로 <kbd>iframe</kbd>과 <kbd>wframe</kbd>을 제공하며, 해당 속성값에 따라 컨텐츠를 렌더링합니다. 단, <strong><kbd>iframe</kbd></strong> 을 설정할 경우 탭 수에 비례하여 브라우저의 메모리 점유가 증가합니다. 따라서 메인 층에서 사용하는 경우에만 속성값을 <strong><kbd>iframe</kbd></strong>으로 지정하길 권장합니다. <strong><kbd>src</kbd></strong> 속성은 컨텐츠에 웹스퀘어5 컴포넌트를 직접 구성하지 않고 content 영역을 XML 파일을 불러 렌더링합니다."
1601,105dc40f7f0396d9,normal,다음은 잘못 사용한 코드 예입니다.
1602,88ecaafb1d3d0816,normal,"대부분의 프로젝트에서는 현재 시간 (서버 시간), 사용자 정보, 또는 사용자 권한을 조회하기 위해 동기 요청을 사용합니다. 한 화면에서 동기 요청을 여러 번 호출하는 것은 성능 저하로 이어질 수 있습니다."
1603,aa102e732246beee,normal,"<span class=""r_red_highlight_span""><strong>하나의 요청으로 처리 가능한 함수</strong></span>를 구현하십시오."
1604,21d13f626d6bc555,normal,"초기 화면은 시스템 관점에서는 리소스 다운로드와 실행 및 그 외 준비로 시간이 많이 소요되는 단계이지만, 사용자 입장에서는 시스템의 진입 단계로 빠른 응답속도가 제공되어야 하는 중요한 화면입니다. 따라서 네트워크를 통해 리소스가 수집되는 단계를 이해하여 리소스 로딩에 대한 튜닝 작업이 반드시 필요합니다."
1605,90bf2a04ad4c2d8a,normal,Network 패널의 주어진 입력 항목에 대한 전체 타이밍 정보를 확인할 수 있습니다.
1606,57ff409b33281f27,normal,위와 같은 정보는 아래의 console 명령으로 추출할 수 있습니다.
1607,41f546e17194cf09,command,"performance.getEntriesByType('resource').filter(item =&gt; item.name.includes(""config.xml""))"
1608,8e55dcdcf548af91,unordered_list,"* 확인된 가장 일반적인 문제는 큐에 저장되거나 지연된 일련의 항목으로 이런 현상이 나타나면 단일 클라이언트에서 너무 많은 리소스를 가져오고 있다는 의미입니다.
* HTTP 1.0/1.1 연결의 경우, Chrome은 호스트당 최대 6개의 TCP 연결을 적용합니다. 한번에 12개의 항목을 요청하는 경우, 첫 6개부터 먼저 시작되고 나머지 절반은 큐에 저장됩니다.
* 첫 절반 중 하나가 완료되면 큐에 대개중인 첫 번째 항목이 요청 프로세스를 시작합니다."
1609,335420711eda1018,normal,"느린 TTFB는 긴 대기 시간 즉 녹색이 많이 나타나는 경우입니다. 이 시간은 200ms 미만이 좋습니다. 이 시간이 길다면, 그 원인은 아래와 같습니다."
1610,0fca976b18003c90,ordered_list,"# 클라이언트와 서버 사이의 네트워크 상태가 잘못된 경우
# 서버 애플리케이션의 응답이 느린 경우"
1611,7205630aa48e6f82,normal,Object에 지정된 id를 이용하여 검색하는 것이 가장 빠른 속도를 보장합니다.
1612,8da7c0a8c931f7c2,definition_list,"Anchor 컴포넌트 접근 방법
<kbd>"".grp_shbox. btn_shbox_hide”</kbd>
+ <kbd>“.btn_shbox_hide”</kbd>
+ <kbd>“#btn_shbox”</kbd>
+ <kbd>“a.btn_shbox_hide”</kbd>"
1613,b5a1d5cc36289d77,definition_list,"<span class=""r_blue_span"">가장 빨리 접근하는 방법: </span><span class=""r_blue_span""><kbd>“<strong><em>#btn_shbox</em></strong>”</kbd></span>"
1614,1608b134a021fd50,normal,아래와 같이 컴포넌트에 id 속성이 없는 경우에는 가장 가까운 상위 컴포넌트의 id 속성으로부터 자식 셀렉터를 이용하여 <kbd>“#link_area .link_text”</kbd>로 지정하는 방법이 더 빠릅니다.
1615,3c0be694428afef6,normal,"클래스 셀렉터는 jquery 셀렉터 중 검색 시간이 가장 많이 소요됩니다. 태그 명을 사용하거나 클래스로 셀렉터를 지정해야 하는 경우, 태그 명 추가를 권장합니다."
1616,373e86f1614a1e56,normal,위의 예제에서 <kbd>“#link_area .link_text”</kbd>보다 <kbd>“#link_area a”</kbd>가 더 빠릅니다. 따라서 <kbd>“#link_area a.link_text”</kbd>와 같이 태그 명을 추가하는 것이 좋습니다.
1617,a2c94bdca5afc281,normal,동일한 Object에 여러 개의 작업을 실행하는 경우 검색된 결과에 여러 개의 메소드를 붙여서 순차적으로 호출하는 “메서드 체인”을 사용하십시오. 태그를 다시 검색하는 과정을 생략할 수 있어 상당한 속도 개선을 기대할 수 있습니다.
1618,d2a76433a9679e76,normal,"메서드 체인을 이용할 수 없는 경우, 셀렉터 검색 결과를 캐싱(변수에 저장 후 재사용)하여 재검색을 생략하고 그 결과 처리 속도를 올릴 수 있습니다. 아래는 검색 결과를 <kbd>“linkText”</kbd>에 저장하여 사용하는 예제입니다."
1619,aac9e2cf51a73628,normal,아래 예제와 같이 셀렉터의 검색 범위를 지정하여 검색 속도를 개선할 수도 있습니다.
1620,03b619cc01b66554,normal,"아래는 공통 셀렉터인 <kbd>$(""#link_area li"")</kbd>를 변수 <kbd>“linkText”</kbd>에 저장하여 셀렉터 뒤에 검색대상인 linkText를 지정하여 변수의 범위 내에서 검색하는 예제입니다. HTML 전체에서 검색하는 보통의 지정 방법과 비교하여 검색 속도를 개선할 수 있습니다."
1621,f9bb801666e5a7c4,normal,"재귀 호출형 함수는 호출할 때 마다 스택 메모리가 생성되는며, 이는 재귀 조건이 달성된 후에야 제거됩니다. 그 결과 메모리가 계속 쌓이는 문제가 있습니다. 재귀로 호출된 함수가 많은 경우 스택 메모리 한계로 인해 스택오버플로우(stack overflow) 및 브라우저 멈춤현상이 발생합니다. 일반적인 반복문은 스택에 쌓이지 않지만 일정 시간 후에는 스크립트 수행 속도가 점점 떨어지고 스크립트 타임아웃(script timeout) 현상이 발생할 수 있습니다. 특히 모바일 브라우저는 5초 이내에 스크립트 타임아웃이 발생하기 때문에 무거운 로직을 반복문으로 처리하는 것은 자제해야 합니다."
1622,47dfd70a309557a6,normal,"DataCollection의 데이터 변경은 이벤트 발생으로 이어지며, 이는 곧 (<kbd>ref</kbd>로 연결된 Component 등) 관련된 객체들에 대해서도 추가 작업이 필요함을 의미합니다. 따라서 셀단위로 데이터를 반복 설정하는 것보다 데이터를 한번에 설정할 것을 권장합니다."
1623,12ed90aef164c15f,normal,여러 행을 추가하는 경우 Array를 만들어 Data를 추가한 후 한번에 DataCollection에 추가하는 것이 가능합니다.
1624,3045ba40c11c41de,normal,"반복문 내에서 건당 작업이 필요한 경우, DataCollection 변경 시 발생하는 이벤트를 중지하고 변경이 완료된 후 이벤트가 발생하도록 처리하십시오."
1625,5dda051a606c1316,unordered_list,* GridView 컴포넌트는 많은 양의 데이터를 DataCollection에 저장하고 이를 화면에 Table 형식으로 표시합니다. 이를 위헤 각 셀에 지정된 타입에 따라 스트립트 수행 및 렌더링이 반복적으로 발생합니다. 데이터 요청부터 GridView에 데이터라 렌더링되는 시간은 셀이 많은 수록 증가하고 증가폭도 늘어납니다.
1626,5085de88b66dc92b,normal,메모리의 사용량 역시 셀이 많을수록 증가폭이 늘어납니다.
1627,3dde7ffd5a035bf1,normal,"아래는 1초 내 메모리 증가분은 100M를 기준으로 허용하는 것입니다. 아래 테이블에 따라, 약 400,000 Cell을 기준으로 제한하는 것을 권장합니다."
1628,3de9ec75249f1362,normal,"WebSquare 엔진, 공통 CSS, 공통 JavaScript 등 여러 화면에서 공통으로 사용되는 모듈과 화면 소스의 Lifecycle을 분리하여 화면 로딩 및 전환 속도를 높이는 기능입니다. WindowContainer 및 TabControl는 WebSquare 엔진, 공통 CSS, 공통 JavaScript 등 여러 화면에서 공통으로 사용되는 모듈을 미리 로딩하여 화면 로딩 및 전환 속도를 높일 수 있습니다."
1629,361617869d7fc4cb,normal,"IFrame은 분리된 전역메모리 영역(window)을 사용하여 개발은 용이하지만 메모리 및 성능이 떨어질 수 있습니다. 이를 보완하기 위해 WebSquare5 SP2는 WFrame을 제공합니다. 개발 생산성 향상과 메모리 및 성능 향상을 위해 WFrame들은 전역메모리 영역(window)을 공유하지만 각 WFrame은 분리된 지역변수를 참조합니다. (<a class=""reference"" href=""#d16512c60c41febd"">Scope</a> 참조.)"
1630,f0d8e3757760168d,normal,본 단락은 성능 저하가 발생할 경우 그 원인 및 해결 방안을 분류하여 정리한 것입니다.
1631,480533db506be937,note,"외부 자바스크립트 파일에 대한 HTTP 요청시 성능 부담이 증가합니다. 
크기가 25kb인 파일 4개보다 100kb 파일 하나를 더 빨리 내려받기 때문에 외부 자바스크립트 파일 개수를 최소화할 것을 권장합니다."
1632,1d95d699a59b8c0d,normal,TabControl 컴포넌트는 여러 화면을 탭으로 구성할 때 사용하는 컴포넌트입니다.
1633,57f57f98a4a0d4f7,normal,각 탭에 표시하는 화면의 복잡도(컴포넌트의 수)를 바탕으로 브라우저가 그려야 하는 모든 컴포넌트를 고려해야 합니다.
1634,1684de957f55b294,normal,<strong><kbd>alwaysDraw</kbd> </strong>속성은 아래와 같이 TabControl 컴포넌트가 포함하는 모든 탭의 컴포넌트의 렌더링 여부를 결정합니다.
1635,9abe3eced96f58a9,caution,"<kbd>alwaysDraw=""<span class=""r_blue_span"">false</span>""</kbd> 설정을 사용할 경우, 초기 랜더링 후 첫 번째 탭을 제외한 나머지 탭의 컴포넌트는 객체화가 되지 않습니다."
1636,edf1756c3b101756,normal,"IE 브라우저에서 JavaScript 기반 파서(<strong><span class=""r_italic_span"">xmlsax.js</span></strong>, <strong><span class=""r_italic_span"">xmlw3cdom.js</span></strong>)를 사용할 경우, ActiveX 기반 내장 XML 파서와 비교하여 렌더링 속도가 최대 30배 저하됩니다."
1637,129d50dd0bdaddc3,definition_list,"IE 브라우저의 렌더링 속도 저하 원인
(1) JavaScript 기반 파서를 사용하도록 <span class=""r_italic_span""><strong>config.xml</strong></span> 파일에 설정된 경우
+ (2) IE 브라우저의 ActiveX 기반 내장 XML 파서를 사용하지만, 실행 시 오류가 발생한 경우"
1638,ba8cc2c2b2b33704,normal,현재 사용 중인 XML 파서는 WebSquare 로그를 통해 확인할 수 있습니다.
1639,43c191fee618cad0,normal,IE 브라우저 화면에서 Ctrl키 + 마우스 우클릭 후 <strong>로그보기</strong>를 선택하십시오.
1640,3792374e07db05a9,normal,"<strong><span class=""r_italic_span"">config.xml</span></strong> 파일에서 <kbd>useActiveXObject</kbd> 설정을 확인합니다."
1641,c6b0b061b19fe56b,normal,"아래와 같이 <kbd>useActiveXObject=""<span class=""r_red_highlight_span"">false</span>""</kbd>인 경우, IE 브라우저는 JavaScript 기반 파서(<strong><span class=""r_italic_span"">xmlsax.js</span></strong>, <strong><span class=""r_italic_span"">xmlw3cdom.js</span></strong>)를 사용합니다."
1642,db02e13acc49176b,normal,"<kbd>useActiveXObject</kbd> 설정을 <kbd><span class=""r_blue001_span"">true</span></kbd>로 변경하거나 다음과 같이 해당 설정을 주석으로 처리하십시오."
1643,7778bbd5135940c8,normal,"JavaScript 기반 파서(<strong><span class=""r_italic_span"">xmlsax.js</span></strong>, <strong><span class=""r_italic_span"">xmlw3cdom.js</span></strong>) 사용 설정이 <strong><span class=""r_italic_span"">config.xml</span> </strong>파일에 없어도, 일부 PC에서 렌더링 속도가 느릴 수 있습니다."
1644,b84062238fcd7bc9,normal,이는 주로 IE 브라우저의 ActiveX 기반 내장 XML 파서에 문제가 있는 경우입니다.
1645,8b6788ad21b9d707,normal,위의 비권장인 경우와 동일한 로그가 확인될 경우 IE 브라우저를 초기화하거나 재설치하십시오.
1646,fa81b15a342f2bcd,normal,"화면에서 Ctrl + 마우스 오른쪽 버튼을 클릭 후, <strong>[로그보기]</strong>를 선택합니다."
1647,39541f4a7351f4d2,normal,<kbd>$p.log()</kbd>함수를 이용한 로그는 다음과 같은 형태로 생성됩니다.
1648,54bdeddc30a85c5e,normal,<kbd>06:03:13.838 00032 013248 websquare] convertTypeB</kbd> 라는 로그는 아래와 같이 해석할 수 있습니다.
1649,0e2e66c2e0431c41,normal,메모리 누수 및 성능 관련 문제가 발생할 경우 아래 내용을 확인하십시오.
1650,1a4b1ccd73a7e31e,normal,"Upload나 MultiUpload 컴포넌트를 이용하여 파일을 업로드할 경우, <strong><em>WEBSQUARE_HOME</em> </strong> 의 <strong><em>config</em> </strong> 폴더에 있는 <strong><em>websquare.xml</em> </strong> 에 아래와 같은 설정을 추가하십시오."
1651,e7c9cff83fdb8b99,normal,"파일 업로드 경로를 기본 설정으로 충족할 수 없는 경우, 아래의 방법으로 경로를 재정의하십시오."
1652,a9c4e6f5bc25768b,ordered_list,"# <code>websquare.upload.handl.AbstractUploadFileDefiner</code>를 상속받습니다.
# 리턴값이 <code>String</code>인 <code>getFileName</code>과 <code>getFilePath</code>를 구현합니다."
1653,919b4d1ee3ad7d3d,normal,"실제 생성되는 파일은 ""getFilePath의 결과값 + File.separator+getFileName의 결과값""입니다. 아래 예제의 useDir과 같은 사용자 파라미터를 화면에서 파라미터로 전달할 수 있으며, Server는 MultipartParameterMap을 통해 String Array로 반환하여 사용합니다."
1654,8ee4909e3f825471,normal,"DRM과의 연계가 필요한 경우, DRM 암호화 해제 후 파일을 반환하는 클래스를 아래와 같이 구현하십시오."
1655,8271b11ff69b2bac,ordered_list,"# <code>websquare.upload.handl.AbstractUploaDecrypter</code> 를 상속받습니다.
# 리턴값이 <code>File</code>인 <code>decrypt</code>를 구현합니다."
1656,c4419cf91c27f4a7,normal,"Editor 컴포넌트를 이용하여 이미지를 업로드하거나 추가할 경우, <strong><em>WEBSQUARE_HOME</em> </strong> 의 <strong><em>config</em> </strong> 폴더에 있는 <strong><em>websquare.xml</em> </strong> 에 아래와 같은 설정을 추가하십시오."
1657,1379a56575374967,normal,"이미지를 업로드 경로를 기본 설정으로 충족할 수 없는 경우, 아래의 방법으로 경로를 다시 정의하십시오."
1658,eaae6bc71903df31,ordered_list,"# <code>websquare.upload.handl.AbstractUploadImageDefiner</code>를 상속받습니다.
# 리턴값이<code> String</code>인 <code>getFileName</code>과 <code>getFilePath</code>를 구현합니다."
1659,82e165474f7ccbfd,normal,"실제 생성되는 파일은 ""<code>getFilePath</code>의 결과값+<code>File.separator</code>+<code>getFileName</code>의 결과값""입니다."
1660,cb0510a09571c309,normal,"GridView 컴포넌트에 Excel 파일을 업로드할 경우, <strong><em>WEBSQUARE_HOME</em> </strong> 의 <strong><em>config</em> </strong> 폴더에 있는 <strong><em>websquare.xml</em> </strong> 에 아래의 설정을 추가하십시오."
1661,3f9a89be2c7085e7,normal,"DRM과의 연계가 필요한 경우, DRM 암호화 해제 후 파일을 반환하는 클래스를 아래와 같이 구현하십시오."
1662,a489110cf7aca6e3,ordered_list,"# <code>websquare.upload.handl.AbstractUploaDecrypter</code> 를 상속받습니다.
# 리턴값이 <code>File</code>인 <code>decrypt</code>를 구현합니다."
1663,b9d3196ebf4bff0e,normal,셀 데이터의 가공이 필요한 경우 아래의 방법으로 dataConvertor를 구현하십시오.
1664,2860c15dfc0e0918,ordered_list,"# <code>websquare.http.controller.grid.excel.write.ICellDataProvider</code>를 상속받습니다.
# 리턴값이 <code>String</code>인 <code>convertValue</code>를 구현합니다."
1665,6c12c48a94109fb6,normal,다음은 셀 데이터가 tag를 포함한 경우 tag를 삭제하는 예제입니다.
1666,d596013309d1446d,definition_list,"관련 클래스
<kbd>AbStractCellDataProvider</kbd>: GridView에 엑셀 파일을 업로드할 때, 위변조 검증 로직이 참조할 수 있는 셀 정보(행/열 인덱스) 및 HTTP Servlet Request 정보를 제공."
1667,6e004fdbde501124,definition_list,"구현 방법
<kbd>AbStractCellDataProvider</kbd> 클래스를 extend하여 <kbd>convertValue</kbd> 함수를 구현.
+ 이후 관련 설정을 <strong><span class=""r_italic_span"">websquare.xml</span></strong>에 추가."
1668,b2f2baf2f1be39be,normal,"<strong><span class=""r_italic_span"">websquare.xml</span></strong>에 아래 설정을 추가하십시오."
1669,0d2fc27d9e05df72,note,GridView의 엑셀 파일 업로드/다운로드시 셀 데이터를 가공에 사용되는 <kbd>ICellDataProvider</kbd>는 현재의 셀의 값만 제공.
1670,f9a152313dd2bf30,normal,"GridView 컴포넌트에 CSV 파일을 업로드할 경우, <strong><em>WEBSQUARE_HOME</em> </strong> 의 <strong><em>config</em> </strong> 폴더에 있는 <strong><em>websquare.xml</em> </strong> 에 아래의 설정을 추가하십시오."
1671,80964d449342b036,normal,"물리적으로 저장되는 경로는 baseDir / [subDir] / folderName 이 되며, uploadMode 에 따른 folderName 다음과 같습니다."
1672,dbfd5de842b2f080,unordered_list,"* uploadMode : session, random 값을 갖는다.
## session : session에 folderName이라면 변수로 값이 존재 할 경우 해당 값으로 폴더명을 정의합니다. session에 folderName이 존재 하지 않을 경우, websquare.xml에서 folderName 설정값을 읽어 폴더명을 정의합니다. folderName 설정이 존재 하지 않은 경우는 random으로 폴더명을 정의합니다. ( ex) folderName_3939393939 )

## random : websquare.xml에서 folderName 설정값을 읽어 폴더명을 정의합니다.
* folderName 설정이 존재 하지 않은 경우는 random으로 폴더명을 정의합니다
* ( ex) folderName_3939393939 )

* baseDir : 기본 업로드 폴더

* baseDir의 하위노드 : baseDir의 하위에 폴더를 지정하려고 할 때 노드를 정의 하고 value값을 설정합니다.
+ 업무적으로 업로드 폴더를 분리하는 경우 사용합니다.
+ 하위디렉토리 정의 후 w2:upload 컴포넌트에 subDir Attribute를 정의합니다.

* folderName : 업로드 되는 폴더명. uploadMode와 연계해서 사용 한다.

* duplicatedFilePostFix : upload시 동일한 파일이 있을 경우 파일명 뒤에 붙여지는 prefix

* firstFilePostFix : true인 경우 신규파일이라도 duplicatedFilePostFix를 붙입니다."
1673,466972a441735783,unordered_list,"* firstFilePostFix 설정값이 true인 경우 신규파일이라도 duplicatedFilePostFix를 붙입니다. 
+ false이면 중복파일명이 없는 신규파일명은 원래 파일명을 따르고, 중복파일명이면 duplicatedFilePostFix값을 붙어 파일명을 정의합니다"
1674,990915b2244eea37,normal,"websquare.xml이 아래와 같이 설정되어 있을 경우, subDir은 w2:upload 컴포넌트의 속성을 선택합니다."
1675,00f4f7f8f582f62d,normal,"이 경우 업무1은 D:\uptest1\up\ 경로로 파일이 올라 가고, 업무2는 D:\uptest2\up\ 경로로 파일이 업로드 됩니다."
1676,857c868ed951f79b,normal,subDir속성에 값이 없는 경우에는 D:\upload\up\의 경로로 업로드 됩니다
1677,1bec93ed6fc28b97,unordered_list,"* fileDefiner : websquare 에서 제공하는 업로드 설정이 아닌 파일 경로와, 파일명을 재설정하는 사용자 정의 
+ class (full-package)"
1678,dd01fd70f41c4af5,unordered_list,* AbstracUploadFileDefiner 을 상속 구현한다.
1679,3dc34b255b64d771,normal,editor 컴포넌트 사용시 이미지를 업로드하는 경우 참조하는 설정으로 Upload 설정과 동일합니다.
1680,15dabf48f5e05b77,normal,"WebSquare5는 <code><kbd>$p.download(url경로)</kbd> </code>API를 제공합니다. 웹에서 Excel 파일을 다운로드하거나 모바일에서 Excel 파일을 보기를 위해 사용하며, Excel 파일 경로는 아래와 같이 context-root부터의 절대 경로로 지정해야 합니다."
1681,fa1a22f2ef0c7409,normal,"Excel 이외의 파일을 다운로드하거나 URL로 접근할 수 없거나 혹은 추가 로직이 필요한 경우, 이를 JSP나 servlet으로 구현할 수 있습니다. 모바일은 Cordova가 plugin으로 제공하는 <code>FileTransfer</code>를 이용하십시오."
1682,d801caed58fd8726,normal,"<kbd>WebSquare.net.download( actionUrl , XML , sendMethod );</kbd>를 통해 다운로드를 수행할 경우, 아래의 방법으로 JSP로 파라미터를 전달할 수 있습니다."
1683,82b085f663ad4392,ordered_list,"# 내부적으로 IFrame을 만들고 form-submit 하는 방식으로 서블릿을 호출합니다.
# 두번째 인자로 파라미터(string)를 전달할 수 있습니다.
# 해당 인자는 xmlValue의 값으로 전달되기 때문에 서블릿에서는 아래 형태로 패러미터값을 가져올 수 있습니다.
+ <kbd>String req = request.getParameter(""xmlValue"")</kbd>;
# 파러미터는 xmlValue의 값으로만 전달됩니다. 2개 이상의 정보를 전달할 경우에는 XML/JSON 형태 문자열로 전달합니다. 서버에서는 해당 문자열을 객체화하여 사용할 수 있습니다."
1684,9ffc208e58080a93,normal,"GridView 컴포넌트에서 Excel 파일을 다운로드할 경우, <strong><em>WEBSQUARE_HOME</em> </strong> 의 <strong><em>config</em> </strong> 폴더에 있는 <strong><em>websquare.xml</em> </strong> 에 아래의 설정을 추가하십시오."
1685,742cb664a50c8357,normal,"DRM 암호화가 필요한 경우, DRM 암호화 클래스를 아래와 같이 구현하십시오."
1686,d0b0cfe666ff938d,ordered_list,"# <code>websquare.upload.handl.AbstractDownloadEncrypter </code>를 상속합니다.
# 파일을 암호화하여 stream에 file을 write 합니다."
1687,b36d1e6bf8fc3e02,normal,"GridView 컴포넌트에서 CSV 파일을 다운로드할 경우, <strong><em>WEBSQUARE_HOME</em> </strong> 의 <strong><em>config</em> </strong> 폴더에 있는 <strong><em>websquare.xml</em> </strong> 에 아래의 설정을 추가하십시오."
1688,47042f02f43d55a5,definition_list,"정의
직관적인 GUI를 통해 다수의 복잡한 비동기 통신을 쉽게 호출할 수 있는 기능<span class=""mark index"">Workflow</span>입니다. 사용자는 각 비동기 호출의 결과에 대한 처리 로직만 간단히 구현하면 됩니다."
1689,3ff1a9bb2f9422cd,definition_list,"용어
<strong>Workflow</strong>: 여러 건의 Submission을 처리하는 순서를 정의한 것
+ <strong>WorkflowCollection<span class=""mark index"">WorkflowCollection</span></strong>: Workflow의 그룹
+ <strong>Step</strong>: 여러 건의 작업 처리 순서를 정의한 것"
1690,3cdbcf1293444ad5,definition_list,"특징
비동기 통신 프로그래밍이 용이
+ +Promise workflow 사용이 용이
+ Submission의 비동기 처리가 용이"
1691,ad31fa967ec2e31e,definition_list,"기능
정의된 submission 및 submissionCallback의 실행순서를 보장합니다. (실행 순서에 대한 제약은 없음.)
+ 실행 순서의 유효성을 확인합니다."
1692,dd64ec8668022118,ordered_list,"# Submission 뷰를 클릭합니다.
# Workflow에 포함할 Submission들을 우클릭한 후 [Workflow 추가]를 선택합니다.
+ (혹은 Component 뷰에서 WorkflowCollection 아이콘을 우클릭한 후 [Workflow 추가]를 선택합니다.)"
1693,86dbb6ae09e79162,ordered_list,# Workflow Manager 창에서 Workflow의 기본 정보를 설정하고 및 Service List를 생성합니다.
1694,59f4c82f17feda2d,ordered_list,"# <a class=""reference text"" href=""#0b9bb588b15d29a7"">Script 탭</a>을 클릭합니다.
# <strong><code>resolveCallback</code></strong> 및 <strong><code>rejectCallback </code></strong>함수를 정의합니다."
1695,7bf64d13c4759143,note,"각 API에 대한 좀 더 자세한 설명 및 사용법은 <a class=""link"" href=""https://docs.inswave.com/websquare/websquare.html?w2xPath=/support/api/ws5_sp3/api.xml"">API 가이드</a>를 참고하십시오."
1696,c8cb80b840c58f63,normal,영문으로 시작하는 변수명을 사용하십시오.
1697,ae01420b7db09a3c,normal,"JavaScript는 느슨한 타입(loosely typed) 언어, 혹은 동적(dynamic) 언어입니다. 즉, 변수 타입을 미리 선언할 필요가 없고 프로그램이 처리되는 과정에서 자동으로 파악 변환되기도 합니다. 공통함수가 객체 타입에 따른 대응을 못하고 에러가 발생하는 경우 스크립트가 중지되고 브라우저에 따라 성능 및 메모리에 영향을 받습니다."
1698,ce1dce9c35f239a1,normal,"JavasSript는 느슨한 타입(loosely typed) 언어로 변수 선언을 위해 사용하는 <kbd>var</kbd> 문자를 누락해도 스크립트는 정상적 수행됩니다. 단, 이 경우 해당 변수는 전역에 선언되어, 함수 종료 후에도 계속 참조가 가능하고 자동 릴리즈가 되지 않습니다. SPA 방식으로 이동하는 화면인 경우 이는 메모리 누수 현상으로 이어집니다."
1699,cce5346e576a97e2,normal,"대부분의 프로젝트에서는 현재 시간 (서버 시간), 사용자 정보, 또는 사용자 권한을 조회하기 위해 동기 요청을 사용합니다. 한 화면에서 동기 요청을 여러 번 호출하는 것은 성능 저하로 이어질 수 있습니다."
1700,12b616ca80fe2e35,normal,"<span class=""r_red_highlight_span""><strong>하나의 요청으로 처리 가능한 함수</strong></span>를 구현하십시오."
1701,ce7767048f396a02,unordered_list,"* WebSquare에서는 업무 화면에서 함수 또는 상수 값 선언 시 객체의 속성으로 설정하여 사용할 것을 권장합니다.
* 화면 unload 시점에 선언된 객체의 속성으로 등록된 함수 및 상수를 제거하여 메모리 누수를 방지하십시오.
* 업무화면 내에서 사용하는 전역 변수 또한 지정된 객체의 속성으로 등록해서 사용하십시오."
1702,4174f82a35b33be7,normal,"웹스퀘어를 통한 웹 표준 개발 시, 아래 내용을 준수하십시오."
1703,608746b6aed15a01,unordered_list,"* 브라우저 객체(DOM)를 직접 제어하는 모든 API의 사용을 <span class=""r_red_highlight_span""><strong>금지합니다</strong></span>. 
** 예를 들어 웹스퀘어에서 제공된 컴포넌트로 그려진 객체(DOM)에 대해 <kbd>getElementById();</kbd> 혹은<kbd>createElement();</kbd> 함수를 <span class=""r_red_highlight_span""><strong>사용하지 마십시오</strong></span>. 
** <kbd>document.write</kbd> 와 같은 함수를 <span class=""r_red_highlight_span""><strong>사용하지 마십시오</strong></span>. 
* 브라우저 Event의 직접 제어를 <span class=""r_red_highlight_span""><strong>금지합니다</strong></span>. 
* XMLHttpRequest를 직접 생성하고 조작하는 API는 사용하지 마십시오. 
* 웹스퀘어가 제공하는 <span class=""r_blue001_span"">Submission을 이용</span>하십시오. API를 이용할 경우, <kbd><span class=""r_blue001_span"">WebSquare.ModelUtil.executeSubmission();</span></kbd>을 사용하십시오. 
* prototype.js나 jquery.js와 같은 오픈소스 JavaScript Framework를 <span class=""r_red_highlight_span""><strong>동시에 사용할 수 없습니다</strong></span>. 
* prototype <span class=""r_red_highlight_span""><strong>확장은 금지합니다</strong></span>."
1704,63892e047d4f3d33,note,"프로그램 구현을 위해 아래 내용이 꼭 필요한 경우, 웹스퀘어 지원 인력과 먼저 확인하십시오."
1705,7c9371019a272a7f,normal,최상의 메모리 및 성능을 위해 아래 내용을 확인하십시오.
1706,28adcf0efa510127,normal,모바일 기기의 해상도가 다양하므로 @media속성을 이용해 최적화된 css를 구성하여 각 기기에 맞는 화면을 구성하십시오.
1707,ab3c97942ccb5a44,normal,"meta태그의 viewport를 이용해서 기기의 최대가로크기를 정하거나 줌레벨, 사용자 확대축소 방지 여부 등을 설정할 수 있습니다. meta 태그는 websquare.html(jsp)에 넣어야 합니다."
1708,dacd2b1f7b1fe0a1,normal,각종 모바일 기기에 따라 키보드나 마우스 같은 장치 유무가 다르기 때문에 마우스나 키보드 사용을 전제하지 마십시오.
1709,3958e827be1f7906,normal,"모바일에서 body를 제외하고, overflow:hidden으로 사용하는 것을 권장합니다. 스크롤이 필요한 경우 scrollView 컴포넌트를 사용하여 스크롤을 사용할 수 있습니다."
1710,2224ed4624e9b02b,normal,스마트 폰들은 기본적으로 터치 기반입니다. 더블-클릭 등의 이벤트를 사용하지 마십시오. 마우스 이벤트의 경우 기기마다 다르게 동작할 수 있습니다.
1711,699be6691c828710,normal,iPhone의 경우 보안을 위해 허용된 디렉터리의 파일만 첨부 가능합니다.
1712,c563db485ace88d5,normal,기기에 따라 flash나 silverlight 등의 플러그인 사용이 제한됩니다.
1713,8a3ec4217a06e539,normal,"기기에 따라 IFrame으로 화면을 구성 하게 되면, focus, blur 관련 동작이 일반 브라우저와 다르게 동작합니다. 경우에 따라 Input 간 포커싱이 정상적으로 동작하지 않을 수 있습니다."
1714,71ea874749f48f59,normal,모바일의 경우 팝업을 권장하지 않습니다. 팝업은 새 창(window.open)으로 생성되어 화면 전환이 이루어집니다. 대신 레이어 형태어 팝업 및 링크를 사용하십시오.
1715,5798bad394d5a0cc,unordered_list,"* ifame
* xsl
* ckEditor
* chart(iphone에서만 동작함)
* upload
* muliupload
* flash
* applet
* active
* multiselect
* slideHide
* tabContainer
* windowContainer"
1716,026fc615d3c1f629,unordered_list,"* 확인된 가장 일반적인 문제는 큐에 저장되거나 지연된 일련의 항목으로 이런 현상이 나타나면 단일 클라이언트에서 너무 많은 리소스를 가져오고 있다는 의미입니다.
* HTTP 1.0/1.1 연결의 경우, Chrome은 호스트당 최대 6개의 TCP 연결을 적용합니다. 한번에 12개의 항목을 요청하는 경우, 첫 6개부터 먼저 시작되고 나머지 절반은 큐에 저장됩니다.
* 첫 절반 중 하나가 완료되면 큐에 대개중인 첫 번째 항목이 요청 프로세스를 시작합니다."
1717,6e459aa2e12c2975,normal,"느린 TTFB는 긴 대기 시간 즉 녹색이 많이 나타나는 경우입니다. 이 시간은 200ms 미만이 좋습니다. 이 시간이 길다면, 그 원인은 아래와 같습니다."
1718,a0d81b24059d09c1,ordered_list,"# 클라이언트와 서버 사이의 네트워크 상태가 잘못된 경우
# 서버 애플리케이션의 응답이 느린 경우"
1719,588decea1be595c8,normal,WebSquare는 Submission을 이용한 통신을 권장합니다. 그러나 사용자가 직접 통신 관련 설정을 해야하는 경우를 위해 <kbd>$p.ajax</kbd> API를 제공합니다.
1720,bf77f434e36014c2,normal,"아래 에제의 경우, 사용자가 직접 제어할 수 있도록 응답 결과 객체를 반환하고 있습니다. 그러나 업무 화면의 콜백 함수로 그대로 넘기기 때문에 업무 화면에서 변수 등에 직접 할당할 경우 통신 완료 후 응답 객체가 메모리에서 릴리즈되지 않을 수 있습니다."
1721,c21b359b73fa8083,normal,"Closure는 전역이 아닌 지역 변수 선언이 가능하여 공통 모듈에서 많이 사용합니다. 단, Closure 안에서 Object 형태의 외부 객체를 직접 참조하지 않도록 주의하십시오. 메모리에서 릴리즈 되지 않을 수 있습니다."
1722,d72ea8ee9b316120,normal,"특히 Closure 함수를 비동기 형태로 호출할 경우, 객체를 직접 다른 변수에 할당하면 참조 관계가 발생합니다. 이 경우, 함수 실행이 완료되더라도 메모리에서 제거되지 않을 수 있습니다."
1723,a433d195673f0316,normal,아래 에제에서 <strong>test2</strong>는 <strong>test</strong>와 직접 참조 관계가 이루어져 <strong>test</strong> 값 변경에 따라 <strong>test2</strong> 값이 변경됩니다. 즉 <strong>test2</strong>와 참조 관계가 발생하여 <strong>test</strong> 사용이 끝난 뒤에도 메모리에서 제거되지 않습니다.
1724,3e7efe4008f92a17,normal,LinkedDataList는 DataList 데이터를 필터링하여 아래와 같은 컴포넌트의 선택 항목으로 표시할 때 주로 사용하십시오.
1725,f7f82808491e8a9d,unordered_list,"* AutoComplete
* CheckBox
* CheckComboBox
* MultiSelect
* Radio
* SelectBox"
1726,43a093509e56c17e,note,"<strong>권장 사용법</strong>

DataList의 데이터는 1,000 건 이하를 권장하며 최대 10,000건까지 지원합니다."
1727,b35a543cce377e9d,normal,LinkedDataList는 GridView와 직접 바인딩하는 것을 권장하지 않습니다.
1728,d562df8b9eec0040,pre,"GridView 조회시 허용 가능한 메모리의 크기는 임계치의 50%내로 사용하는 것을 권장.
그리드의 조회 건수는 약 400,000 Cell을 기준으로 제한하는 것을 권장"
1729,525249e697415478,normal,"visibleRowNum 속성을 통해 페이지 당 표시할 행을 지정할 수 있습니다. 단, 최적의 성능을 위해 <kbd>50</kbd>행 이하를 권장합니다."
1730,562063d628703363,normal,"아래와 같이 세 가지 종류의 팝업을 생성할 수 있습니다. 단, <kbd>type</kbd>을 <kbd>wframePopup</kbd>으로 설정한 WFrame 팝업을 대부분의 경우 권장합니다."
1731,7f3ec7c14b366b3b,unordered_list,"* 다른 Frame의 함수 호출 시 String 타입의 객체 형태로 파라미터를 전달하십시오. String 타입이 아닌 JSON 객체 등을 직접 전달하여 다른 Frame의 객체에 할당할 경우 일부 브라우저에서 메모리 누수 현상이 발생합니다.
* 다른 Frame간 전달되는 Object의 타입은 팝업 형식의 호출에만 국한된 것이 아니고 IFrame으로 구성된 화면에도 적용됩니다. Frame 간의 파라미터 전달 방식은 String 타입의 객체를 파라미터로 전달하십시오."
1732,dda995f282196430,normal,"TabControl 컴포넌트는 <strong><kbd>frameMode</kbd></strong> 속성값으로 <kbd>iframe</kbd>과 <kbd>wframe</kbd>을 제공하며, 해당 속성값에 따라 컨텐츠를 렌더링합니다. 단, <strong><kbd>iframe</kbd></strong> 을 설정할 경우 탭 수에 비례하여 브라우저의 메모리 점유가 증가합니다. 따라서 메인 층에서 사용하는 경우에만 속성값을 <strong><kbd>iframe</kbd></strong>으로 지정하길 권장합니다. <strong><kbd>src</kbd></strong> 속성은 컨텐츠에 웹스퀘어5 컴포넌트를 직접 구성하지 않고 content 영역을 XML 파일을 불러 렌더링합니다."
1733,8d3fb6186de456e9,normal,다음은 잘못 사용한 코드 예입니다.
1734,d64190bd976ce377,normal,IFrame 수가 지나치게 많은 경우 메모리 점유율이 올라갑니다. IFrame 대신 WFrame을 사용을 권장합니다.
1735,f8de5ce39813e667,normal,"WFrame을 사용하여 화면을 구성할 경우, 각 화면 내 컴포넌트의 ID는 항상 변합니다. 즉, <kbd>input1</kbd> 객체는 연결되는 WFrame에 따라 <kbd>wframe1_input1</kbd>이 될 수도 있고 <kbd>wframe2_wframe22_input1</kbd>이 될 수도 있습니다. 따라서 id selector 대신 class selector 사용을 권장합니다."
1736,7d911930718573ff,caution,"<strong>class명 중복 주의</strong>

class selector를 사용할 경우 부모 화면에 정의된 스타일 이름과 겹치지 않도록 주의하십시오. 이름이 겹칠 경우 부모 화면의 class를 덮어 쓰게 되어 부모 화면의 스타일이 변경됩니다. 
class명이 겹치지 않도록 화면 ID를 class명 뒤에 붙이는 방법을 권장합니다."