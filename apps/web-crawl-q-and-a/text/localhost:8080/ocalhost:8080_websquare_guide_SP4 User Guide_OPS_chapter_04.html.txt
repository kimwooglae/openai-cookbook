
디버깅4.디버깅4.1로그4.1.1기본 로그아래와 같이 $p.log API를 이용하여 기본 로그를 출력할 수 있습니다.코드 4-1.로그 출력 예$p.log( ":::: WebSquare ::::" );그림 4-1.기본 로그 출력4.1.1.1로그 구조$p.log()함수를 이용한 로그는 다음과 같은 형태로 생성됩니다.코드 4-2.로그 형태시간 이전로그출력후경과시간 첫로그출력후경과시간 로그출력기] 로그메시지코드 4-3.로그 예시06:03:13.838 00032 013248 websquare] convertTypeB위의 로그는 아래와 같이 해석할 수 있습니다.표 4-1.로그 해석항목설명06:03:13.838로그생성시간32ms이전로그출력 후 경과시간13.248s첫로그출력 후 경과시간websquare로그출력기convertTypeB메시지4.1.2브라우저 콘솔 로그브라우저에서 console 객체를 지원해야 확인 가능합니다. 아래와 같이 console.log 메소드를 이용하십시오.코드 4-4.로그 확인console.log( ":::: Console Log ::::" );그림 4-2.브라우저 콘솔 로그IE 지원IE8 이상에서 지원됩니다.4.1.3브라우저 개발자 도구 (Chrome & IE 기준)브라우저 실행 후 [F12]를 누르거나 브라우저 메뉴를 통해 개발자 도구를 실행할 수 있습니다. 주요 디버깅 관련 메뉴는 아래와 같습니다.표 4-2.주요 디버깅 메뉴메뉴설명ElementsDOM 탐색기. 브라우저에 그려진 HTML과 적용된 CSS 확인.Console콘솔.WebSquare 로그 또는 console 객체를 이용한 로그 확인.Network네트워크.서버와 주고 받은 통신 내역 확인.아래의 방법으로 브라우저에서 로그를 확인할 수 있습니다.아래 경로에 있는 config.xml 파일을 엽니다. 파일 경로: /WebContent/websquare/config.xml아래와 같이 설정하십시오. <debug value="true" remoteConsole="false" console="true"/>브라우저에서 F12 단축키를 누릅니다. 화면을 실행한 후 Console 탭을 선택합니다.그림 4-3.로그 확인4.1.4확인할 로그 타입 지정config.xml 파일에서 개발자 도구 Console 창에서 출력할 로그 타입을 지정할 수 있습니다.코드 4-5.정상 로그와 오류 로그를 모두 출력<WebSquare>
    <debug value=“true” console=“true”>
</WebSquare코드 4-6.오류 로그만 출력<WebSquare>
    <debug value=“true” errorConsole=“true”>
</WebSquare그림 4-4.YouTube 동영상 (https://youtu.be/uf6voVjDnRo)4.2WebSquare5 제공 기능4.2.1디버깅용 컨텍스트 메뉴WebSquare5로 작성한 화면의 스크립트는 WebSquare5 엔진 위에서 실행됩니다. 
화면 로그는 브라우저 경고 창으로 표현되지 않고 별도로 관리됩니다. 
아래의 방법으로 로그 메시지를 확인하십시오.WebSquare5로 작성한 화면을 브라우저에 실행합니다.브라우저 상에서 [Ctrl+마우스 우클릭]합니다.[로그보기]를 선택합니다.그림 4-5.[Ctrl + 마우스 우클릭]표 4-3.주요 메뉴 설명메뉴설명로그 보기Script 오류를 확인하거나 Script에서 출력한 로그를 확인.dataCollection 보기데이터 객체의 현재 값을 확인.소스보기WebSquare화면 소스를 확인현재 화면 디버그 실행Submission을 이용한 통신의 Input, Output, Header정보를 확인전체 새로고침이벤트가 발생한 위치와 관계 없이 최상위(top) 페이지를 SPA 방식으로 재로딩. 새로고침Debug 메뉴 호출 이벤트가 발생한 위치의 페이지를 SPA 방식으로 재로딩. (URL 변경없이 body 및 script를 재로딩.)브라우저 상의 URL 재로딩 및 IFrame의 재로딩은 브라우저에서 제공하는 기능을 이용하십시오.예제 파일인터넷에서 다운로드 혹은WEBSQUARE_DEV_PACK의 GUIDE 프로젝트에서 보기(/_Debugging/Menus_Debugging/)그림 4-6.YouTube 동영상 (https://youtu.be/l8O6aKN-NwQ)4.2.2디버깅용 컨텍스트 메뉴 허용 및 차단WebSquare.logger의 enableContextMenu() 및 disableContextMenu() 함수를 사용하여 디버깅용 컨텍스트 메뉴 사용을 허용하거나 차단할 수 있습니다.코드 4-7.사용 예// 디버깅용 컨텍스트 메뉴 허용
WebSquare.logger.disableContextMenu();


// 디버깅용 컨텍스트 메뉴 차단
WebSquare.logger.enableContextMenu();위의 함수들은 config.xml 설정 파일의 <debugMenu> 항목의 설정 값에 상관 없이 사용할 있습니다. 즉, <debugMenu value="use"/> 혹은 <debugMenu value="block"/>으로 설정된 경우 모두 사용 가능합니다.예제 파일인터넷에서 다운로드 혹은WEBSQUARE_DEV_PACK의 GUIDE 프로젝트에서 보기(/WebSquare.logger/enableContextMenu_disableContextMenu_WebSquare_logger.xml)그림 4-7.YouTube 동영상 (https://youtu.be/nGZQwuYFjkg)4.2.3각 디버깅 메뉴 설명4.2.3.1로그 보기그림 4-8.로그 보기4.2.3.2DataCollection 보기현재 컴포넌트와 바인딩된 DataCollection을 확인할 수 있습니다. 아래의 방법으로 실제 메모리에 할당된 데이터를 확인하십시오.WebSquare5로 작성한 화면을 브라우저에 실행합니다.브라우저 상에서 [Ctrl+마우스 우클릭]합니다.[dataCollection 보기]를 선택합니다.그림 4-9.Ctrl + 마우스 우클릭 시그림 4-10.현재 바인딩된 DataCollection 확인4.2.3.3페이지 소스 보기WebSquare5로 작성한 화면을 브라우저에 실행합니다.브라우저 상에서 [Ctrl+마우스 우클릭]합니다.[소스보기]를 선택합니다.그림 4-11.소스 보기
