


WebSquare.uiplugin.selectbox 









PropertyEventMethod찾아보기

WebSquare.uiplugin.selectbox - 5.0_5.4826M.20230213.171915





셀렉트 박스. 선택 항목 목록을 표시.
 선택 항목 목록을 표시하여 단일 선택을 지원하는 컴포넌트.
 HTML에서 <select> 태그와 같은 기능을 제공.
 브라우저에 표현 될 때는 <select> 대신 <div> 태그를 최상위에 두고 하위에 복합 태그를 사용함에 주의. 
 <select> 태그를 사용하려면 별도의 설정이 필요함.

Type


uiplugin

Property Summary




allOption

전체 항목 표시 여부



animation

선택 항목 목록에 적용할 애니메이션 효과



appearance

선택 항목 표현 방식



chooseOption

선택 안내 메시지 표시 여부. [default:false,true] 



chooseOptionLabel

선택 안내 메시지로 표시할 텍스트의 label을 정의



chooseOptionLabelLocaleRef

클라이언트 다국어 적용시 화면에 출력하는 chooseOptionLabel의 key. 



class

HTML의 class 속성과 동일한 기능을 제공. CSS 파일이나 style 블럭에 정의한 여러 개의 class를 공백으로 구분하여 적용 가능.



closeonmouseleave

[default:false, true] subLayer로 열린 경우, 선택 항목 목록에서 마우스 커서가 빠져나갈 때 목록을 닫을지 여부



customFormatter

선택 항목 목록을 커스텀할 수 있는 사용자 정의 함수



customLabelFormatter

SelectBox의 label 값을 커스텀할 수 있는 사용자 정의 함수



dataListAutoRefresh

SelectBox의 선택 대상 목록이 DataList와 바인딩된 경우, addItem 혹은 deleteItem 함수 실행에 따른 DataList 자동 갱신 여부



delimiter

선택 항목 목록에 value와 label을 함께 표시할 때 사용하는 구분자



depthColumn

목록을 계층 구조로 보여줄 때 사용하는 속성. 



depthColumnHeight

depthColumn 기능 사용 시 목록의 높이값(px)



depthColumnPathDelimiter

depthColumn, depthColumnShowPath 기능 사용 시 label 간의 구분자로 사용할 문자열을 지정한다



depthColumnShowPath

depthColumn 기능 사용 시 selectbox에 표시할 label에 선택된 목록의 부모 목록들을 전부 포함해서 보여주는 기능.



depthColumnWidth

depthColumn 기능 사용 시 목록의 넓이값(px)



direction

항목의 열림 방향



disabled

컴포넌트 비활성 상태



disabledClass

disabled="true"인 경우 적용할 class 명



displaymessage

validate API의 검증 결과가 실패일 경우, 결과 메세지 표시 여부. [default:false, true] 



displayMode

선택 항목의 표현 방법. [default: label, value delim label, label delim value] 



emptyItem

(setValue, setSelectedIndex 등을 이용하여) 선택 항목에 없는 value나 index가 동적으로 설정하는 경우 빈 값(empty string)으로 label과 value를 설정. [default: false, true] 



emptyValue

emptyItem="true"인 경우, 설정한 value 값.



enableColumn

선택 항목 목록에서 특정 항목을 disable 처리하는 기능. disable 처리된 목록은 보이기만 할 뿐 선택이 되지 않음.



enableColumnFalseValue

enableColumn 사용 시 목록에서 특정 항목을 감추기 위한 조건에 해당하는 값



escape

<>&"를 HTML Escape 문자로 변환하여 화면에 표시



id

컴포넌트 ID. 



invalidMessage

displaymessage="true"이고 validate(); 검증 결과가 실패인 경우 표시되는 메시지.



invalidMessageFunc

validate(); 검증 결과가 실패일 경우, 결과 메시지를 동적으로 표시할 사용자 정의 함수 이름. 



itemTooltipDisplay

아이템 목록에 대한 툴팁 표시 여부



itemTooltipFormatter

itemTooltipDisplay="true"인 경우, 툴팁 내용을 변경할 사용자 함수명.



keyMoveListSync

키보드로 선택 항목 목록을 이동하면서 동시에 SelectBox의 값을 설정하는 기능 사용 여부. [default:false, true] 



labelWidthAuto

컴포넌트에 정의된 width을 무시하고 항목 중 가장 긴 텍스트에 맞게 출력. [default: false, true] 



mandatory

필수 선택 적용 여부. [default: false, true] 



nextTabID

Tab 키로 이동할 경우, Tab 키를 누를 때 선택되는 컴포넌트의 ID



optionOrder

전체 항목과 선택 항목을 동시에 사용하는 경우 출력 순서



preventKeyList

웹스퀘어 엔진 내부에서 처리하는 키 동작을 막는 기능



preventWheelEvent

마우스 휠 이벤트 금지 여부



ref

DataCollection의 value 경로. DataCollection의 value와 웹스퀘어 컴포넌트를 바인딩할 때 사용. 



refreshSelectedIndex

바인딩된 DataList가 갱신될 때, selectedIndex 값이 실제 SelectBox에서 선택된 항목과 일치시키는 설정. [default: false, true] 



renderType

브라우저에 표현될 레이아웃 구조



setDataRemoveAll

removeAll시에 data 초기화 처리 사용 여부



sortMethod

선택 항목 목록 정렬 방법



sortOption

선택 항목 목록 정렬 기준. [label, value] 



submenuSize

선택 항목 목록 크기 결정 방법



tabIndex

Tab 키를 이용하여 포커스를 변경할 경우, 해당 컴포넌트에 포커스를 주는 순서. 



textAlign

선택 항목 목록 상의 텍스트 정렬



title

HTML의 title 속성과 동일



tooltip

사용자가 컴포넌트에 마우스-오버할 때 표시되는 텍스트



tooltipClass

툴팁에 적용할 스타일 class



tooltipDisplay

사용자가 선택한 값에 대한 툴팁 표시 여부



tooltipLocaleRef

tooltip 문구가 정의되어 있을 경우 클라이언트 다국어 적용시 툴팁에 출력하는 텍스트의 key.



tooltipShowAlways

텍스트 길이에 상관 없이 마우스 오버시 툴팁을 항상 표시할 것인지의 여부. [default: false, true]



tooltipTime

툴팁 표시 시간. (단위: 초)



useItemLocale

아이템 목록 다국어 사용 여부



useLocale

다국어 사용.



userData1

사용자 정의 데이터 속성



userData2

사용자 정의 데이터 속성



userData3

사용자 정의 데이터 속성



valueNotInList

바인딩된 DataList의 목록에 없는 값을 set하는 경우(setValue API 또는 ref에 의해)에 대한 처리방식 설정. 



visibleColumn

선택 항목 목록에서 특정 항목을 감추는 기능. 



visibleColumnFalseValue

visibleColumn 사용 시 목록에서 특정 항목을 감추기 위한 조건에 해당하는 값



visibleRowNum

표현 될 항목 행수



wmode

wmode를 사용하여 선택 항목 목록을 object 태그보다 상위에 표시. [default: false, true]



Event Summary




onblur

포커스를 잃었을 때 발생



onchange

선택항목 변경 시 발생



onclick

마우스로 SelectBox를 클릭했을 때 발생



ondblclick

마우스로 SelectBox를 더블 클릭했을 때 발생



onfocus

포커스를 얻었을 때 발생



onselected

선택 항목 목록(itemTable)에서 항목이 클릭된 이후에 발생



ontooltiphide

툴팁이 사라질 때 발생



ontooltipshow

툴팁이 나타날 때 발생



onviewchange

키보드 또는 마우스 조작을 통해 값이 변경된 경우 발생.


Method Summary




addClass(
									  className
										)
								

컴포넌트에 CSS class를 추가



addItem(
									  value
									       , 
									       label
									       , 
									       index
									       , 
									       refresh
										)
								

선택 항목을 추가. index를 지정하지 않으면 하위로 추가됨.



bind(
									  eventType
									       , 
									       function
										)
								

컴포넌트에 이벤트와 핸들러 함수를 동적으로 할당



changeChooseOption(
									  newValue
									       , 
									       newLabel
										)
								

chooseOption 속성을 변경



changeClass(
									  oldClassName
									       , 
									       newClassName
										)
								

웹스퀘어 컴포넌트의 class를 변경. (웹스퀘어 컴포넌트 공통.) 



deleteItem(
									  idx
									       , 
									       refresh
										)
								

주어진 index에 해당하는 항목을 삭제



focus(
									  
										)
								

웹스퀘어 컴포넌트에 포커스를 줌



getDataListInfo(
									  
										)
								

컴포넌트와 바인딩된 DataList를 반환



getDisabled(
									  
										)
								

현재 웹스퀘어 컴포넌트에 설정된 disabled 속성 값을 반환



getGenerator(
									  
										)
								

컴포넌트가 Generator에 의해 생성된 경우, 자신을 생성한 부모 Generator 객체를 반환



getID(
									  
										)
								

웹스퀘어 컴포넌트의 ID를 반환



getInitStyle(
									  CSS
										)
								

컴포넌트의 초기 스타일을 반환



getItemCount(
									  
										)
								

선택 항목 개수를 반환



getNextTabID(
									  
										)
								

nextTabID 속성의 설정 값을 반환



getOpacity(
									  
										)
								

웹스퀘어 컴포넌트의 불투명도를 반환. (웹스퀘어 컴포넌트 공통.)



getOriginalID(
									  
										)
								

웹스퀘어 컴포넌트의 originalID를 반환. (웹스퀘어 컴포넌트 공통.)



getPluginName(
									  
										)
								

웹스퀘어 컴포넌트의 이름(pluginName)을 반환



getPosition(
									  positionName
										)
								

웹스퀘어 컴포넌트의 위치(left, top)를 반환. (웹스퀘어 컴포넌트 공통.) 



getReadOnly(
									  
										)
								

현재 웹스퀘어 컴포넌트에 설정된 readOnly 속성 값을 반환



getScope(
									  
										)
								

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)  



getScopeWindow(
									  
										)
								

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)



getSelectedIndex(
									  
										)
								

선택된 항목의 인덱스를 반환



getSize(
									  sizeName
										)
								

웹스퀘어 컴포넌트의 크기(width, height)를 반환. (웹스퀘어 컴포넌트 공통.) 



getStyle(
									  propertyName
										)
								

웹스퀘어 컴포넌트의 CSS 속성 값을 반환



getStyleValue(
									  style
										)
								

[deprecated]



getText(
									  isOriginal
										)
								

현재 선택된 항목의 label을 반환



getTitle(
									  
										)
								

컴포넌트의 title 속성 값을 반환



getUdcHome(
									  
										)
								

UDC 객체가 자신을 정의한 UDC 파일 경로를 파일명을 포함해서 반환. (웹스퀘어 컴포넌트 공통.)



getUdcRoot(
									  
										)
								

UDC 객체가 자신을 정의한  UDC 파일 경로를 반환. (웹스퀘어 컴포넌트 공통.)



getUserData(
									  key
										)
								

setUserData로 웹스퀘어 컴포넌트에 설정한 key의 value 혹은 사용자가 직접 페이지 소스(XML)에 속성으로 정의한 value를 반환



getValue(
									  
										)
								

선택된 항목의 value 값을 반환



hasClass(
									  className
										)
								

웹스퀘어 컴포넌트가 특정 class를 포함하고 있는지 확인



hide(
									  
										)
								

컴포넌트를 화면에서 보이지 않도록 숨김



removeAll(
									  isInitialize
										)
								

모든 항목을 삭제하는 기능. 



removeClass(
									  className
										)
								

웹스퀘어 컴포넌트에서 class를 삭제. (웹스퀘어 컴포넌트 공통.)



setDelimiter(
									  
										)
								

selectbox delimiter 동적 변경



setDisabled(
									  disabled
										)
								

웹스퀘어 컴포넌트의 disabled 속성을 설정



setDisplyaMode(
									  
										)
								

selectbox displayMode 동적 변경



setEnableColumn(
									  columnId
									       , 
									       enableColumnFalseValue
										)
								

enableColumn 속성을 동적으로 설정.



setEventPause(
									  evList
									       , 
									       flag
										)
								

지정한 이벤트를 중단함



setGridItemset(
									  obj
										)
								

바인딩된 gridViewItemset을 변경. 



setInitStyle(
									  property
										)
								

컴포넌트의 초기 스타일을 복구한다



setNextTabID(
									  componentID
									       , 
									       componentScope
										)
								

nextTabID 속성을 설정.



setNodeSet(
									  nodeset
									       , 
									       label
									       , 
									       value
										)
								

선택 항목 목록을 설정. 



setOpacity(
									  value
										)
								

웹스퀘어 컴포넌트의 불투명도를 설정. (웹스퀘어 컴포넌트 공통.)



setPosition(
									  left
									       , 
									       top
									       , 
									       mode
										)
								

웹스퀘어 컴포넌트의 위치(left, top)를 설정



setReadOnly(
									  readOnly
										)
								

웹스퀘어 컴포넌트의 readOnly 속성을 설정



setRef(
									  path
										)
								

ref 속성을 설정. DataCollection과 연동시 "data:"라는 prefix를 꼭 붙여야 함.



setSelectedIndex(
									  idx
										)
								

주어진 인덱스에 해당하는 항목을 선택/해제(토글링)하는 작업을 수행. 



setSize(
									  width
									       , 
									       height
										)
								

웹스퀘어 컴포넌트의 크기(width, height)를 설정



setStyle(
									  propertyName
									       , 
									       value
										)
								

웹스퀘어 컴포넌트의 CSS 속성을 설정



setText(
									  lbl
									       , 
									       isOriginal
										)
								

lbl 파라메터와 같은 label을 가지는 항목을 선택



setTitle(
									  title
										)
								

컴포넌트의 title 속성을 설정



setUserData(
									  key
									       , 
									       value
										)
								

웹스퀘어 컴포넌트에 임의의 데이터를 설정. (웹스퀘어 컴포넌트 공통.) 



setValue(
									  value
										)
								

파라메터로 넘어온 값에 해당하는 선택 항목을 선택.  



setVisibleColumn(
									  columnId
									       , 
									       visibleColumnFalseValue
										)
								

visibleColumn 속성을 동적으로 설정.



show(
									  displayType
										)
								

웹스퀘어 컴포넌트를 화면에 표시. (웹스퀘어 컴포넌트 공통.)



showChooseOption(
									  chooseOption
										)
								

chooseOption을 설정



toggleClass(
									  className
										)
								

웹스퀘어 컴포넌트에서 특정 class를 제거하거나 추가. (웹스퀘어 컴포넌트 공통.)



trigger(
									  type
									       , 
									       array
										)
								

컴포넌트에서 특정 이벤트를 발생시킴



unbind(
									  type
									       , 
									       function
										)
								

컴포넌트에서 이벤트를 제거



unbindRef(
									  
										)
								

ref 바인딩을 해제



validate(
									  
										)
								

컴포넌트의 유효성 관련 속성값을 통해 유효성 검사를 실행



validateObject(
									  
										)
								

컴포넌트의 유효성 관련 속성값을 통해 유효성 검사를 실행



visible(
									  flag
										)
								

[deprecated] 



Property Detail




allOption

전체 항목 표시 여부. label은 "-전체-" 로 value는 "all" 로 설정. [default: false, true]
(옵션 설명)
"false" (기본 값) : 전체 항목을 표시.  
"true" : 전체 항목을 표시하지 않음.


animation

선택 항목 목록에 적용할 애니메이션 효과. [default: "", show, fadeIn, slideDown] 
 (옵션 설명)
 "" (기본 값) : 전체 내역이 한번에 표시.
 "show" : 한 점에서 퍼지면서 내역을 표시.
 "fadeIn" : 전체 내역을 점점 선명하게 표시. 
 "slideDown" : 하위로 내려오면서 순차적으로 내역을 표시.


appearance

선택 항목 표현 방식. [default:minimal,full] 
(옵션 설명)
 "minimal" : 선택 항목을 한 개씩 표시. 사용자는 방향키를 이용하여 선택 항목 변경 가능.  
 "full" (기본 값) : 전체 선택 항목을 표시


chooseOption

선택 안내 메시지 표시 여부. [default:false,true] chooseOptionLabel 속성이 설정된 경우 해당 값을 표시. 단, chooseOptionLabel 속성이 설정되지 않고 chooseOption="true"인 경우, 선택 항목 목록에 "-선택-"(label)이 표시됨.  이 때 value는 ""(empty string)으로 설정됨.
 (옵션 설명)
 "true" : 선택 안내 메시지를 표시.  chooseOptionLabel 속성에 설정 된 값을 표시. 
 "false" (기본 값) : 선택 안내 메시지를 표시하지 않음. 

 (관련 속성)
 chooseOptionLabel


chooseOptionLabel

선택 안내 메시지로 표시할 텍스트의 label을 정의. chooseOption="true"인 경우 유효. 
 (관련 속성)
 chooseOption="true"


chooseOptionLabelLocaleRef

클라이언트 다국어 적용시 화면에 출력하는 chooseOptionLabel의 key. key에 해당하는 텍스트가 없을 경우 "global_undefined"가 화면에 표시됨.


class

HTML의 class 속성과 동일한 기능을 제공. CSS 파일이나 style 블럭에 정의한 여러 개의 class를 공백으로 구분하여 적용 가능.Engine 내부에서 각 컴포넌트 별로 지정된 class를 적용하나, class 속성을 이용하여 컴포넌트의 CSS를 제어 가능.


closeonmouseleave

[default:false, true] subLayer로 열린 경우, 선택 항목 목록에서 마우스 커서가 빠져나갈 때 목록을 닫을지 여부. 
 (옵션 설명)
 "false" (기본 값) 목록을 닫지 않음. 
 "true" 목록을 닫음.


customFormatter

선택 항목 목록을 커스텀할 수 있는 사용자 정의 함수. [default:""] (gridItemset 및 gridViewItemset 인 경우는 제외)


customLabelFormatter

SelectBox의 label 값을 커스텀할 수 있는 사용자 정의 함수. [default:""]


dataListAutoRefresh

SelectBox의 선택 대상 목록이 DataList와 바인딩된 경우, addItem 혹은 deleteItem 함수 실행에 따른 DataList 자동 갱신 여부. [default: false, true]  
(옵션 설명) 
 "true" : 자동 갱신. 
 "false" (기본 값) : 자동 갱신하지 않음.
(비고)
 하위 호환을 위한 설정으로 true를 권장. (config.xml 파일에 설정하여 일괄 적용.)


delimiter

선택 항목 목록에 value와 label을 함께 표시할 때 사용하는 구분자. displayMode 속성에서 참조.
 (관련 속성)
 displayMode


depthColumn

목록을 계층 구조로 보여줄 때 사용하는 속성. treeview, gridView drilldown의 deapth와 동일한 개념이다. depth값이 동일한 항목끼리 묶어서 계층 구조로 목록을 보여준다.depth값이 1인 항목들이 제일 처음 나타나며, 해당 항목을 선택하면 그 다음 depth가 2인 항목들이 나타나고 그 다음 항목을 선택하면 depth가 3인 항목이 나타나는 구조이다.
(예제) 
 selectBox1이 dataList1과 바인딩되어있고, depthColumn="depth" 이며 data가 아래와 같이 구성된 경우
 dataList1.setJSON([
 {"label" : "A", "value" : "A", "depth" : "1"},{"label" : "A-1", "value" : "A-1", "depth" : "2"},{"label" : "A-1-1", "value" : "A-1-1", "depth" : "3"},
 {"label" : "B", "value" : "B", "depth" : "1"},{"label" : "B-1", "value" : "B-1", "depth" : "2"},{"label" : "B-1-1", "value" : "B-1-1", "depth" : "3"},
 ])
 // selectbox 목록을 펼쳤을 때 처음에는 "A","B" 두 개의 항목이 나타난다.
 // "A" 항목에 마우스오버 했을 때 "A-1" 항목이 나타나고 "A-1" 항목에 마우스오버했을때 "A-1-1" 항목이 나타난다. 
 // "B" 항목에 마우스오버 했을 때 "B-1" 항목이 나타나고 "B-1" 항목에 마우스오버했을때 "B-1-1" 항목이 나타난다.
(관련 속성) depthColumnWidth, depthColumnHeight, depthColumnShowPath, depthColumnPathDelimiter


depthColumnHeight

depthColumn 기능 사용 시 목록의 높이값(px). 이 값을 지정하지 않으면 목록의 높이가 세로 스크롤이 생기지 않는 최소 높이로 자동 계산된다.
(예제) 
 
 목록의 높이값이 100px로 고정되며 세로 스크롤이 필요한 경우에는 세로 스크롤이 나타남.
(관련 속성) depthColumn


depthColumnPathDelimiter

depthColumn, depthColumnShowPath 기능 사용 시 label 간의 구분자로 사용할 문자열을 지정한다.
(예제) 
 selectBox1이 dataList1과 바인딩되어있고, depthColumn="depth", depthColumnShowPath="true", depthColumnPathDelimiter="@"이며 data가 아래와 같이 구성된 경우
 dataList1.setJSON([
 {"label" : "A", "value" : "A", "depth" : "1"},{"label" : "A-1", "value" : "A-1", "depth" : "2"},{"label" : "A-1-1", "value" : "A-1-1", "depth" : "3"},
 {"label" : "B", "value" : "B", "depth" : "1"},{"label" : "B-1", "value" : "B-1", "depth" : "2"},{"label" : "B-1-1", "value" : "B-1-1", "depth" : "3"},
 ])
 // "A-1-1" 항목 선택 시 selectbox 값이 "A@A-1@A-1-1" 형태로 표현된다.
 // "B-1" 항목 선택 시 selectbox 값이 "B@B-1" 형태로 표현된다.
(관련 속성) depthColumn, depthColumnShowPath


depthColumnShowPath

depthColumn 기능 사용 시 selectbox에 표시할 label에 선택된 목록의 부모 목록들을 전부 포함해서 보여주는 기능.seelctbox에 표현만 해 줄 뿐이며 data(ref, getValue, getText등)에는 영향을 주지 않는다. 
(예제) 
 selectBox1이 dataList1과 바인딩되어있고, depthColumn="depth", depthColumnShowPath="true", depthColumnPathDelimiter="-"이며 data가 아래와 같이 구성된 경우
 dataList1.setJSON([
 {"label" : "A", "value" : "A", "depth" : "1"},{"label" : "A1", "value" : "A1", "depth" : "2"},{"label" : "A11", "value" : "A11", "depth" : "3"},
 {"label" : "B", "value" : "B", "depth" : "1"},{"label" : "B1", "value" : "B1", "depth" : "2"},{"label" : "B11", "value" : "B11", "depth" : "3"},
 ])
 // "A11" 항목 선택 시 selectbox 값이 "A-A1-A11" 형태로 표현된다.
 // "B1" 항목 선택 시 selectbox 값이 "B-B1" 형태로 표현된다.
(관련 속성) depthColumn, depthColumnPathDelimiter


depthColumnWidth

depthColumn 기능 사용 시 목록의 넓이값(px). 이 값을 지정하지 않으면 목록의 넓이가 가로 스크롤이 생기지 않는 최소 길이로 자동 계산된다.
(예제) 
 
 목록의 넓이값이 500px 높이값이 100px로 고정되며 가로 또는 세로 스크롤이 필요한 경우에는 스크롤이 나타남.
(관련 속성) depthColumn


direction

항목의 열림 방향. [default: auto, down, up]


disabled

컴포넌트 비활성 상태. [default: false, true]  
(옵션 설명)
 "false" (기본 값) : 컴포넌트를 비활성화 하지 않음. 
 "true" : 컴포넌트를 비활성화 함.


disabledClass

disabled="true"인 경우 적용할 class 명.
(관련 속성)
 disabled="true"


displaymessage

validate API의 검증 결과가 실패일 경우, 결과 메세지 표시 여부. [default:false, true] 기본적으로 엔진 내부에 정의된 메시지를 표시. 단, invalidMessage 속성이 정의된 경우, 해당 속성으로 정의된 메시지를 표시. 
(옵션 설명)
 "true" : 검증 실패 시, 결과 메시지를 표시. 
 "false" (기본 값) :  검증 실패 시, 결과 메시지를 표시하지 않음.  
 
(관련 API)
 validate(); (함수)
 invalidMessage (속성)


displayMode

선택 항목의 표현 방법. [default: label, value delim label, label delim value] label과 value를 함께 표현하는 것이 가능. 구분자는 delimiter 속성에 정의 된 값을 사용.
(옵션 설명)
 "label" (기본 값) : label을 표시 (예시: "label")
 "value delim label" : value 구분자 label 순서로 표시 (예시: "value + 구분자 + label")
 "label delim value" : label 구분자 value 순서로 표시 (예시: "label + 구분자 + value")
 "value" : value를 표시 (예시: "value")

(관련 속성)
 delimiter


emptyItem

(setValue, setSelectedIndex 등을 이용하여) 선택 항목에 없는 value나 index가 동적으로 설정하는 경우 빈 값(empty string)으로 label과 value를 설정. [default: false, true] 빈 값으로 value가 설정된 선택 항목이 추가되거나 삭제될 경우, 첫번째 항목이 선택됨. (HTML select의 selectedIndex=-1과 동일)단, emptyValue 속성을 사용하여 빈 값이 아닌 다른 값을 value로 설정 가능. 
 (옵션 설명)
 "false" (기본 값) : 동적으로 설정된 값을 사용함. 
 "true" : 빈 값으로 설정함. 

 (관련 속성)
 emptyValue


emptyValue

emptyItem="true"인 경우, 설정한 value 값.단, emptyValue와 동일한 value를 갖는 선택항 목이 존재할 경우에도 label은 ""으로 표현됨.
 (관련 속성)
 emptyItem="true"


enableColumn

선택 항목 목록에서 특정 항목을 disable 처리하는 기능. disable 처리된 목록은 보이기만 할 뿐 선택이 되지 않음.선택 항목 목록이 DataList와 바인딩된 경우, disable 여부를 알려주는 컬럼을 지정. disable 여부를 알려주는 컬럼의 값이 enableColumnFalseValue 속성에 지정한 값과 같은 경우, 해당 행은 disable 처리됨.selectedIndex는 영향을 받지 않음. 즉 목록에 보이는 인덱스가 아닌 전체 인덱스를 기준으로 동작.해당 속성은 setEnableColumn 함수를 통해 동적으로 설정 가능. 
(예제) 
 selectBox1이 dataList1과 바인딩되어있고,
 enableColumn="col3" 및 enableColumnFalseValue="false" 설정 사용.

 아래를 실행.  
 dataList1.getCellData(row, "col3");
 위의 결과로 false가 반환될 경우, 해당 행은 목록에서 disable 처리됨.

(관련 API)
 enableColumnFalseValue (속성)
 setenableColumn (함수)


enableColumnFalseValue

enableColumn 사용 시 목록에서 특정 항목을 감추기 위한 조건에 해당하는 값. 
(옵션 설명)
 기본 값: "0", "false", "FALSE", 혹은 "F"

(예시)
 아래를 실행. 
 dataList.getCellData(row, enableColumn);
 위의 결과 값이 "0, false, FALSE, F" 중 하나에 해당되면, 해당 행은 목록에서 disable 처리됨.
 
(관련 속성)
 enableColumn


escape

<>&"를 HTML Escape 문자로 변환하여 화면에 표시.
(옵션 설명)
 "true" (기본 값) : Escape 문자로 변환하지 않음.
 "false" : Escape 문자로 변환하여 화면에 표시.


id

컴포넌트 ID. 컴포넌트 ID는 전역 객체로 할당됨. 각 컴포넌트 ID를 통해 Script에서 해당 컴포넌트에 접근 가능.


invalidMessage

displaymessage="true"이고 validate(); 검증 결과가 실패인 경우 표시되는 메시지.invalidMessageFunc 속성과 동시 적용 불가.
(관련 API)
 validate();
 displaymessage="true"

(!주의!)
 invalidMessageFunc 속성과 동시 적용 불가.


invalidMessageFunc

validate(); 검증 결과가 실패일 경우, 결과 메시지를 동적으로 표시할 사용자 정의 함수 이름. invalidMessage 속성과 동시 적용 불가. 
// (사용자 정의 함수 예)
// 아래 type에 대한 검증 실패 시, 메시지를 동적으로 생성하는 예.
// mandatory

 scwin.fn_msg = function(){ 
    var invalidType = this.getType();  // invalid type
    var invalidValue = this.getValue(); // invalid value
    switch (invalidType) {
        case "mandatory" :
            msg = "Select one.";
            break;
        default :
            msg = "Enter again.";
            break;
    }
    alert(msg);
    return msg;
 }
(관련 API)
 validate();
 invalidMessage 속성과 동시 적용 불가.


itemTooltipDisplay

아이템 목록에 대한 툴팁 표시 여부. [default: false, true] 
(옵션 설명)
 "true" : 툴팁 표시. 
 "false" (기본 값) : 툴팁 표시하지 않음.


itemTooltipFormatter

itemTooltipDisplay="true"인 경우, 툴팁 내용을 변경할 사용자 함수명.사용자 함수는 label 및 index를 인자로 받아 툴팁으로 사용할 스트링을 반환. 
(관련 속성)
 itemTooltipDisplay = "true"


keyMoveListSync

키보드로 선택 항목 목록을 이동하면서 동시에 SelectBox의 값을 설정하는 기능 사용 여부. [default:false, true] 키보드로 선택 항목 목록을 이동할 때마다 값이 변경되므로, 매번 onviewchange 이벤트가 발생.
(옵션 설명)
 "true" : SelectBox 값을 동시에 설정. 
 "false" (기본 값): SelectBox 값을 동시에 설정하지 않음.
 
(관련 이벤트)
 onviewchange 
 onselected : 동일 값 선택시에도 발생


labelWidthAuto

컴포넌트에 정의된 width을 무시하고 항목 중 가장 긴 텍스트에 맞게 출력. [default: false, true] 단, position: absolute;이고 우측에 컴포넌트가 배치된 경우, UI가 틀어질 수 있음. 우측에 컴포넌트가 없도록 디자인하거나, position: relative; 사용을 권장.
(옵션 설명)
 "false" (기본 값) : 컴포넌트에 정의된 width 값을 사용.  
 "true" : 가장 긴 텍스트에 폭을 맞추어 출력.


mandatory

필수 선택 적용 여부. [default: false, true] validate 함수를 통해 입력값을 검증할 경우 필수 입력을 확인. 
(옵션 설명)
 "false" (기본 값) : 필수 선택 적용하지 않음. 
 "true" : 필수 선택 적용.
 
(관련 함수)
 validate();


nextTabID

Tab 키로 이동할 경우, Tab 키를 누를 때 선택되는 컴포넌트의 ID.


optionOrder

전체 항목과 선택 항목을 동시에 사용하는 경우 출력 순서. [default: choose, all] 
(옵션 설명)
 "choose" (기본 값) : 선택 항목을 먼저 출력.
 "all" : 전체 항목을 먼저 출력.


preventKeyList

웹스퀘어 엔진 내부에서 처리하는 키 동작을 막는 기능. 막고자 하는 keycode 값들을 구분자 , 를 사용하여 나열한다. 모든 키를 차단하려면 all을 입력한다.
(예시)
 selectbox의 방향키관련 엔진 처리를 막고 싶을 경우 아래와 같이 설정한다. 이 경우 selectbox에 포커스된 상태에서 방향키 위아래를 눌러도 목록이 바뀌지 않는다. 
   (37=left,38=up,39=right,40=down)
 selectbox의 엔터키 관련 엔진 처리를 막고 싶을 경우 아래와 같이 설정한다. 이 경우 selectbox에 포커스된 상태에서 엔터키를 입력해도 목록이 펼쳐지지 않는다. 
   (13=enter)
 웹스퀘어의 selectbox 키 관련 처리를 전부 막고자 하는 경우에는 이 속성값을 all로 설정한다.
  (selectbox 컴포넌트의 기본 키 동작을 전부 막는다.)


preventWheelEvent

마우스 휠 이벤트 금지 여부. [default: false, true] 
(옵션 설명)
 "false" (기본 값) : 마우스 휠 이벤트 허용. 
 "true" : 마우스 휠 이벤트 금지. 

(관련 이벤트)
 mouseWheelEvent


ref

DataCollection의 value 경로. DataCollection의 value와 웹스퀘어 컴포넌트를 바인딩할 때 사용. "data:" prefix를 추가하여 data:[DataCollection ID].[Key id 또는 Column id] 형태로 지정해야 함. DataList와 바인딩된 경우, GridView에서 선택된 행의 값이 바인딩됨.
// (작성 예)
 data:dataMap1.dept

// Instance Data와 연동 할 경우 연동 할 XML 데이터의 XPath를 명시해야 함. 
// (작성 예)
 res/userInfo/dept/@value


refreshSelectedIndex

바인딩된 DataList가 갱신될 때, selectedIndex 값이 실제 SelectBox에서 선택된 항목과 일치시키는 설정. [default: false, true] 하위호환을 위한 속성으로, 신규 프로젝트에서는 이 속성을 true로 설정할 것을 권장.
(옵션 설명)
 "false" (기본 값) : DataList가 갱신되어도, selectedIndex 값을 SelectBox에서 선택된 항목에 따라 갱신하지 않음. 
 "true" : selectedIndex 값을 실제 SelectBox에서 선택된 항목과 일치시킴.


renderType

브라우저에 표현될 레이아웃 구조. [default: auto, component, native, select]
(옵션 설명) 
 "component" : <select> 태그를 사용하지 않고, 최상위 <div> 태그 하위에 table 태그를 사용하여 항목을 표현. 
 "native" : HTML <select> 태그를 사용. 모든 브라우저 환경에서 동일한 모양과 기능을 제공하며, 웹접근성 준수를 위해 title 속성을 필수로 생성해야 함.
 "select" : 단순히 <select> 태그로만 렌더링됨. 접근성을 지원하지만, 모든 브라우저에서 동일하게 표시되지 않음. 
 "auto" : 모바일 브라우저인 경우 "native", 그렇지 않을 경우 "component"로 동작.


setDataRemoveAll

removeAll시에 data 초기화 처리 사용 여부


sortMethod

선택 항목 목록 정렬 방법. sortOption 속성이 정의된 경우에만 유효. [default: ascending, descending] 
 (옵션 설명)
 "ascending" (기본 값) : 오름차순으로 선택 항목 목록을 정렬.
 "descending" : 내림차순으로 선택 항목 목록을 정렬.  

 (관련 속성)
 sortOption


sortOption

선택 항목 목록 정렬 기준. [label, value] 기본적으로 오름차순으로 정렬되며, sortMethod 속성이 설정된 경우 해당 설정을 따름. 
 (옵션 설명)
 "label" : label을 기준으로 선택 항목 목록 정렬.
 "value" : value를 기준으로 선택 항목 목록 정렬.  

 (관련 속성)
 sortMethod="ascending" 
 sortMethod="descending"


submenuSize

선택 항목 목록 크기 결정 방법. [default: fixed, auto] 
(옵션 설명)
 "fixed" (기본 값) : 기본 width 사용
 "auto" : label에 따라 자동 조정. 

(관련 속성)
 labelWidthAuto="true"


tabIndex

Tab 키를 이용하여 포커스를 변경할 경우, 해당 컴포넌트에 포커스를 주는 순서. HTML의 tabindex 속성과 동일.


textAlign

선택 항목 목록 상의 텍스트 정렬. [default: center, left, right] 
 (옵션 설명)
 "center" (기본 값) : 가운데 정렬
 "left" : 왼쪽 정렬 
 "right" : 오른쪽 정렬
 (제약 사항)
 renderType 이 "native" 혹은 "select" 인경우 해당 속성은 select 태그의 text-align이 지원가능한 브라우저(chrome, edge, firefox)에서 지원가능함.


title

HTML의 title 속성과 동일. 마우스 오버 시, title로 저장한 값이 툴팁으로 표시됨. 일반적으로 웹접근성 지원용으로 설정.


tooltip

사용자가 컴포넌트에 마우스-오버할 때 표시되는 텍스트. 웹스퀘어가 제공하는 툴팁으로, 컴포넌트의 추가 정보를 명시.


tooltipClass

툴팁에 적용할 스타일 class. 툴팁을 표시할 경우(tooltipDisplay="true") 유효. 
 (관련 속성)
 tooltipDisplay="true"


tooltipDisplay

사용자가 선택한 값에 대한 툴팁 표시 여부. [default: false, true] 
(옵션 설명)
 "true" : 툴팁 표시. 
 "false" (기본 값) : 툴팁 표시하지 않음.


tooltipLocaleRef

tooltip 문구가 정의되어 있을 경우 클라이언트 다국어 적용시 툴팁에 출력하는 텍스트의 key.key에 해당하는 텍스트가 없을 경우 "global_undefined"가 화면에 표시됨.


tooltipShowAlways

텍스트 길이에 상관 없이 마우스 오버시 툴팁을 항상 표시할 것인지의 여부. [default: false, true]"true"로 설정할 경우 데이터가 공백("")인 경우를 제외하고는 항상 데이터를 툴팁으로 표시함.


tooltipTime

툴팁 표시 시간. (단위: 초)툴팁을 표시할 경우(tooltipDisplay="true")에만 유효. 
 (관련 속성)
 tooltipDisplay="true"


useItemLocale

아이템 목록 다국어 사용 여부.


useLocale

다국어 사용.선택 항목의 label에 표현되는 값을 클라이언트의 다국어 key를 이용하여 표현.(세부 내용은 다국어 설정 가이드 - 클라이언트 편을 참고.)
(옵션 설명)
 "false" (기본 값): 클라이언트의 다국어 key를 이용하지 않음. 
 "true" : 클라이언트의 다국어 key를 이용하여 다국어 지원. 

(관련 속성)
 chooseOptionLabel에 대해서도 다국어 key가 필요함. (chooseOptionLabelLocaleRef)


userData1

사용자 정의 데이터 속성. getUserData("userData1") API를 통해 설정한 값을 얻어올 수 있음. 
 // 속성 값 얻어오기 예시
 getUserData("userData1");


userData2

사용자 정의 데이터 속성. getUserData("userData2") API를 통해 설정한 값을 얻어올 수 있음. 
 // 속성 값 얻어오기 예시
 getUserData("userData2");


userData3

사용자 정의 데이터 속성. getUserData("userData3") API를 통해 설정한 값을 얻어올 수 있음. 
 // 속성 값 얻어오기 예시
 getUserData("userData3");


valueNotInList

바인딩된 DataList의 목록에 없는 값을 set하는 경우(setValue API 또는 ref에 의해)에 대한 처리방식 설정. renderType="component"인 경우에만 지원한다.renderType이 "native" 또는 "component"인 경우에는 속성 설정과 관계없이 "default"로 동작
 (옵션 설명)
 "default" (기본 값) : 해당 값을 무시한 다음, emptyItem 속성이 true이면 빈값을 보여주고 emptyItem 속성이 false이면 첫번째 항목 선택. 
 "keepValue" : 해당 값을 유지. 목록에는 포함시키지 않으며 getValue()시 해당 값을 얻어온다. selectedIndex=-1 로 설정된다. 선택된 값이 변경되면 해당 값은 완전히 사라진다.


visibleColumn

선택 항목 목록에서 특정 항목을 감추는 기능. 선택 항목 목록이 DataList와 바인딩된 경우, 표시 여부를 알려주는 컬럼을 지정. 표시 여부를 알려주는 컬럼의 값이 visibleColumnFalseValue 속성에 지정한 값과 같은 경우, 해당 행은 선택 항목 목록에 표시되지 않음. selectedIndex는 영향을 받지 않음. 즉 목록에 보이는 인덱스가 아닌 전체 인덱스를 기준으로 동작.해당 속성은 setVisibleColumn 함수를 통해 동적으로 설정 가능. 
(예제) 
 selectBox1이 dataList1과 바인딩되어있고,
 visibleColumn="col3" 및 visibleColumnFalseValue="false" 설정 사용.

 아래를 실행.  
 dataList1.getCellData(row, "col3");
 위의 결과로 false가 반환될 경우, 해당 행은 선택 항목 목록에 표시되지 않음. 

(관련 API)
 visibleColumnFalseValue (속성)
 setVisibleColumn (함수)


visibleColumnFalseValue

visibleColumn 사용 시 목록에서 특정 항목을 감추기 위한 조건에 해당하는 값. 
(옵션 설명)
 기본 값: "0", "false", "FALSE", 혹은 "F"

(예시)
 아래를 실행. 
 dataList.getCellData(row, visibleColumn);
 위의 결과 값이 "0, false, FALSE, F" 중 하나에 해당되면, 해당 행은 선택 항목 목록에 표시되지 않음.
 
(관련 속성)
 visibleColumn


visibleRowNum

표현 될 항목 행수. "1"로 설정하는 것은 비권장.


wmode

wmode를 사용하여 선택 항목 목록을 object 태그보다 상위에 표시. [default: false, true]선택 항목 목록이 object(ActiveX, Flash 등)에 가려질 경우 사용. 본 컴포넌트가 아닌 object(ActiveX, Flash 등)태그에 wmode 사용할 것을 권장. 
 (옵션 설명)
 "true" : wmode 사용.
 "false" (기본 값) : wmode 사용하지 않음.





Event Detail




onblur

포커스를 잃었을 때 발생.

Parameter

nametypedescription


eObject이벤트 객체





onchange

선택항목 변경 시 발생

Parameter

nametypedescription


infoJSONoldValue, newValue를 포함한 JSON을 반환한다.
 info.oldValue : 이전 값
 info.newValue : 변경된 값


Sample
// 컴포넌트 태그 안에 event가 있는 경우
<![CDATA[
    var oldValue = info.oldValue;
    var newValue = info.newValue;
]]>


onclick

마우스로 SelectBox를 클릭했을 때 발생.

Parameter

nametypedescription


eObject이벤트 객체





ondblclick

마우스로 SelectBox를 더블 클릭했을 때 발생.

Parameter

nametypedescription


eObject이벤트 객체





onfocus

포커스를 얻었을 때 발생.

Parameter

nametypedescription


eObject이벤트 객체





onselected

선택 항목 목록(itemTable)에서 항목이 클릭된 이후에 발생
Sample

scwin.selectbox1_onselected = function() {
}


ontooltiphide

툴팁이 사라질 때 발생.



ontooltipshow

툴팁이 나타날 때 발생.



onviewchange

키보드 또는 마우스 조작을 통해 값이 변경된 경우 발생.스크립트를 통해 값이 변경된 경우에는 발생하지 않음. (native onchange 이벤트와 유사함.)

Parameter

nametypedescription


infoJSONoldValue, newValue, oldSelectedIndex, newSelectedIndex를 포함한 객체를 반환.
 info.oldValue : 이전 value
 info.newValue : 변경된 value
 info.oldSelectedIndex : 이전 index 
 info.newSelectedIndex : 변경된 index


Sample
<![CDATA[
    var oldValue = info.oldValue;
    var newValue = info.newValue;
    var oldSelectedIndex = info.oldSelectedIndex;
    var newSelectedIndex = info.newSelectedIndex;
]]>



Method Detail




addClass(
									  className
										)
							

컴포넌트에 CSS class를 추가. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


classNameStringY추가할 class의 이름



Sample
// (예제)
// input1 컴포넌트에 oddClass라는 class를 추가    
input1.addClass("oddClass");


addItem(
									  value
									       , 
									       label
									       , 
									       index
									       , 
									       refresh
										)
							

선택 항목을 추가. index를 지정하지 않으면 하위로 추가됨.단, chooseOption 및 allOption 속성을 사용할 경우 해당 항목도 index에 포함됨.


Parameter

nametyperequireddescription


valueStringY항목의 value


labelStringY항목의 label


indexNumberN항목의 index


refreshBooleanN항목이 dataList(또는 instance)와 연동된 경우, dataList(instance)의 자동 갱신 여부. 값이 명시되지 않은 경우(undefined) selectbox의 dataListAutoRefresh 속성 값을 따름.




Return

typedescription


Number추가된 항목의 index


Sample
// 아래와 같이 항목을 추가하지 않고 chooseOption 속성을 true로 정의한 경우




// index를 지정하지 않고 항목 추가
selectbox1.addItem( 'M', '남성' );    //"-선택-" 항목 하위로(제일 마지막에) 추가된다. 항목의 순서는 "-선택-","남성" 가 된다.
// (반환 값) 1

//index를 0으로 지정하여 항목 추가
selectbox1.addItem( 'F', '여성' );    //0번째에 항목이 추가되어 "-선택-" 항목 위에 추가된다. 항목의 순서는 "여성","-선택-","남성" 가 된다.
// (반환 값) 0


bind(
									  eventType
									       , 
									       function
										)
							

컴포넌트에 이벤트와 핸들러 함수를 동적으로 할당. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


eventTypeStringY할당할 이벤트


functionFunctionY이벤트에 대한 핸들러 함수.



Sample
// (예제 1)
// input1의 onclick 이벤트에 대한 핸들러 함수를 직접 정의하여 할당. 
input1.bind("onclick", function(e){ alert(input1.getValue();}));

// (예제 2)
// 미리 commObj.ev_click 함수를 정의.
var commObj = {};
commObj.ev_click = function(e){
    alert("click :: "+this.id);
};

// input1 컴포넌트에 onclick 이벤트와 정의한 핸들러 함수를 동적으로 할당. 
input1.bind("onclick", commObj.ev_click );


changeChooseOption(
									  newValue
									       , 
									       newLabel
										)
							

chooseOption 속성을 변경.
(관련 속성)
chooseOption


Parameter

nametyperequireddescription


newValueStringY변경할 chooseOption의 value


newLabelStringY변경할 chooseOption의 label



Sample
// (예제) value "0", label "선택"으로 변경
selectbox1.changeChooseOption("0","선택");


changeClass(
									  oldClassName
									       , 
									       newClassName
										)
							

웹스퀘어 컴포넌트의 class를 변경. (웹스퀘어 컴포넌트 공통.) 기본적으로 addClass를 통해 추가된 class만 변경 가능. 웹스퀘어 컴포넌트의 class 속성에 직접 정의된 class를 삭제하려면 config.xml 파일에 아래 설정을 추가해야 함. 
// config.xml에 아래 설정을 추가. 
<removeDefaultClass value="true" />


Parameter

nametyperequireddescription


oldClassNameStringY변경할 class


newClassNameStringY새로 사용할 class



Sample
// inputBox 컴포넌트에 class가 속성으로 직접 정의됨.


// config.xml 파일에 아래를 추가.

    <removeDefaultClass value="true" />


// class를 변경 가능. 
// (tmpInputClass class를 tmpInputWarninClass로 변경.)
input1.changeClass("tmpInputClass","tmpInputWarninClass");


deleteItem(
									  idx
									       , 
									       refresh
										)
							

주어진 index에 해당하는 항목을 삭제. chooseOpion 및 allOption 속성이 true인 경우, 해당 항목도 index에 포함됨.


Parameter

nametyperequireddescription


idxNumberY삭제할 항목의 index


refreshBooleanN항목이 dataList(또는 instance)와 연동된 경우, dataList(instance)의 자동 갱신 여부. 값이 명시되지 않은 경우(undefined) selectbox의 dataListAutoRefresh 속성 값을 따름.




Return

typedescription


JSON삭제된 항목의 정보가 담긴 JSON
 label : 항목의 label.
 value : 항목의 value.


Sample
//아래와 같이 chooseOption 속성과 항목이 정의 된 경우



남성
M


여성
F




// 1번째 index 항목 삭제
var returnValue = selectbox1.deleteItem(1); 
// 0번째 index의 항목은 chooseOption 속성 설정으로 인한 "-선택-"임으로 그 하위의 "남성"가 삭제. 
// (반환 값) {label: "남성", value: "M"}


focus(
									  
										)
							

웹스퀘어 컴포넌트에 포커스를 줌. (웹스퀘어 컴포넌트 공통.)





getDataListInfo(
									  
										)
							

컴포넌트와 바인딩된 DataList를 반환.



Return

typedescription


Objectnodeset, label, value id를 객체로 반환


Sample
// 사용 예
selectbox1.getDataListInfo();


getDisabled(
									  
										)
							

현재 웹스퀘어 컴포넌트에 설정된 disabled 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Booleandisabled 속성 값


Sample
// 컴포넌트의 disabled 속성 값 확인 예제
var returnValue = componentId.getDisabled();
// (반환 값 예시) false


getGenerator(
									  
										)
							

컴포넌트가 Generator에 의해 생성된 경우, 자신을 생성한 부모 Generator 객체를 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Object부모 Generator 객체


Sample
//부모 Generator가 자식으로 Trigger를 생성한 예제
  

// 아래 예제의 경우 trigger1을 클릭하면 generator1 객체가 console에 표시됨. 
 scwin.trigger1.onclick = function(){ console.log(this.getGenerator());} 



getID(
									  
										)
							

웹스퀘어 컴포넌트의 ID를 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


String웹스퀘어 컴포넌트 ID


Sample
// 동적으로 웹스퀘어 컴포넌트를 받을 경우, 아래와 같이 ID 확인 가능.
function fn_validCheck(tmpObj){
    var compID = tmpObj.getID();
}
// 위의 예제 에서 tmpObj가 "input1" ID를 가지고 있는 경우,
// (반환 값) "input1"


getInitStyle(
									  CSS
										)
							

컴포넌트의 초기 스타일을 반환. initStyle 속성을 true로 설정한 컴포넌트만 유효하게 동작한다.(웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


CSSStringN속성 (지정하지 않으면 모든 정보 출력)






getItemCount(
									  
										)
							

선택 항목 개수를 반환. chooseOption, allOption 속성이 적용 된 경우 해당 항목도 개수에 포함됨.



Return

typedescription


Number항목 수


Sample
// 아래와 같이 selectBox가 chooseOption 속성을 사용하는 경우,
// 항목의 개수는 선택 항목 개수와 chooseOption 개수를 더한 값.



남성
M


여성
F




var returnValue = selectbox1.getItemCount();
// (반환 값) 3


getNextTabID(
									  
										)
							

nextTabID 속성의 설정 값을 반환.
(관련 속성)
nextTabID


Sample
// 사용 예
var nextTabID = selectbox1.getNextTabID();


getOpacity(
									  
										)
							

웹스퀘어 컴포넌트의 불투명도를 반환. (웹스퀘어 컴포넌트 공통.)엔진 내부적으로 CSS의 opacity 속성 값을 반환.



Return

typedescription


IntegerOpacity 값


Sample
// inputBox 컴포넌트에 opacity CSS를 적용.

        
// inputBox 컴포넌트의 opacity 값을 반환. 
var returnValue = input1.getOpacity(); 
// returnValue는 0 ~ 1 사이의 실수.
// (반환 값) "0.2"


getOriginalID(
									  
										)
							

웹스퀘어 컴포넌트의 originalID를 반환. (웹스퀘어 컴포넌트 공통.)originalID는 Scope 기능을 사용할 경우 존재. scope="true"인 WFrame를 사용할 경우, WFrame 내부의 컴포넌트 ID는 원래 사용자가 정의한 값(originalID) 앞에 prefix(wframeID + "_")가 추가되는 방식으로 변경됨.  originalID는 이 때, prefix가 추가되기 전 ID를 의미.



Return

typedescription


String컴포넌트의 originalID


Sample
// WFrame을 사용하는 다중 화면 구조 예시

// WFrame을 포함한 메인 화면 (main.xml) 
 

// 메인 화면 WFrame에 연결되는 소스 화면 (text.xml)


// text.xml 화면의 내부 스크립트에서 ID 및 originalID 확인하는 예제.
// getID 실행 
textbox1.getID(); // 실행 결과는 "wframe1_textbox1"
 
// getOriginalID 실행 
textbox1.getOriginalID(); // 실행 결과는 "textbox1"


getPluginName(
									  
										)
							

웹스퀘어 컴포넌트의 이름(pluginName)을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


String웹스퀘어 컴포넌트의 이름 (pluginName)


Sample
// 아래와 같이 공통 함수에서 동적으로 웹스퀘어 객체를 받는 경우, 컴포넌트 종류에 따른 분기 처리가 가능.
var commObj = {};

commObj.fn_makeReqData = function(tmpObj){
    var tmpID = tmpObj.getID(); // 컴포넌트 ID
    var tmpCompType = tmpObj.getPluginName();   // 컴포넌트 이름

    if(tmpCompType == "input"){
        //..로직..
    }else if(tmpCompType == "gridView"){
        //..로직 ..
    }else{
        //..로직..
    }
};


getPosition(
									  positionName
										)
							

웹스퀘어 컴포넌트의 위치(left, top)를 반환. (웹스퀘어 컴포넌트 공통.) 위치 값이 %로 설정된 경우, 픽셀로 변환된 값을 반환.


Parameter

nametyperequireddescription


positionNameStringY[left, top] 위치 종류




Return

typedescription


Number컴포넌트의 위치 값


Sample
// 아래와 같이 input 컴포넌트에 CSS 속성 margin이 적용된 경우,


// (예제) 위의 inputBox 컴포넌트의 top 값을 확인     
var returnValue = input1.getPosition("top"); 

// 픽셀 단위의 위치 값이 반환됨.

// (반환 값) 10


getReadOnly(
									  
										)
							

현재 웹스퀘어 컴포넌트에 설정된 readOnly 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Boolean현재 설정되어있는 readOnly 속성


Sample
// 컴포넌트의 readOnly 속성 값 확인 예제
var returnValue = componentId.getReadOnly();
// (반환 값 예시) false


getScope(
									  
										)
							

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)  scope="true"인 WFrame의 자식 컴포넌트가 아닌 경우, null을 반환.



Return

typedescription


ObjectWFrame 객체 또는 null


Sample
// (예제)
// 메인페이지에 wframe1이 있고, wframe1 내부에 wframe11이 존재. 
// 그리고, wframe11 내부에 textbox1이 존재.
   
textbox1.getScope(); 
// (반환 값) wframe11 객체


getScopeWindow(
									  
										)
							

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)scope="true"인 WFrame의 자식 컴포넌트가 아닌 경우, 전역 window 객체를 반환.



Return

typedescription


ObjectWFrame 객체의 scope 객체 또는 전역 window 객체


Sample
// (예제)
// 메인페이지에 wframe1이 있고, wframe1 내부에 wframe11이 존재. 
// 그리고, wframe11 내부에 textbox1이 존재.
   
var scope = textbox1.getScopeWindow();
scope.wframe11 === textbox1.getScope(); // true


getSelectedIndex(
									  
										)
							

선택된 항목의 인덱스를 반환. chooseOption 및 allOption 속성이 적용된 경우 해당 항목도 인덱스에 포함됨.



Return

typedescription


Number선택된 항목의 인덱스


Sample
// SelectBox가 chooseOption 속성을 사용하는 경우,



남성
M


여성
F




var returnValue = selectbox1.getSelectedIndex();
// (반환 값) 1


getSize(
									  sizeName
										)
							

웹스퀘어 컴포넌트의 크기(width, height)를 반환. (웹스퀘어 컴포넌트 공통.) %로 설정된 경우, 픽셀로 변환된 값을 반환.


Parameter

nametyperequireddescription


sizeNameStringY크기 값의 종류. sizeName 별 계산 방법은 아래 표를 참고. 
height : element.clientHeight
innerHeight : element.clientHeight + padding
outerHeight : element.clientHeight + padding + border
outerMarginHeight : element.clientHeight + padding + border + margin
width : element.clientWidth
innerWidth : element.clientWidth + padding
outerWidth : element.clientWidth + padding + border
outerMarginWidth : element.clientWidth + padding + border + margin




Return

typedescription


Number컴포넌트의 크기 값


Sample
var returnValue = componentId.getSize("width");
// (반환 예) 100 
// 픽셀 단위의 크기 값이 반환됨. 
// %로 설정된 경우, 픽셀로 변환된 값이 반환됨.


getStyle(
									  propertyName
										)
							

웹스퀘어 컴포넌트의 CSS 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


propertyNameStringY반환할 CSS 속성




Return

typedescription


StringCSS 속성 값


Sample
//아래와 같이 input 컴포넌트가 정의 된 경우


// (예제) 위의 inputBox 컴포넌트의 width 값을 확인   
var returnValue = input1.getStyle("width");

// (반환 값) "144px"


getStyleValue(
									  style
										)
							

[deprecated]getStyle 사용 권장.웹스퀘어 컴포넌트에 적용된 해당 CSS 속성 값을 반환.


Parameter

nametyperequireddescription


styleStringY반환하려는 CSS 속성.




Return

typedescription


Stringstyle 해당 CSS 속성 값 (색을 반환하는 경우, HexCode로 반환됨.)





getText(
									  isOriginal
										)
							

현재 선택된 항목의 label을 반환.


Parameter

nametyperequireddescription


isOriginalBooleanNlabel 값 종류. [default:true, false] 
 "true" : formatter가 적용되지 않은 label 값 반환.
 "false" : formatter가 적용 된 label 값 반환.




Return

typedescription


String현재 선택된 항목의 label


Sample
// label이 "남성"인 항목이 선택 된 경우
var returnValue = selectbox1.getText();
// (반환 값) "남성"


getTitle(
									  
										)
							

컴포넌트의 title 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Stringtitle 속성 값.


Sample
// 아래와 같이 input 컴포넌트의 title 속성이 "이름 입력"으로 정의된 경우


var tmpTitle = input1.getTitle();
// (반환 값 예시) "이름 입력"


getUdcHome(
									  
										)
							

UDC 객체가 자신을 정의한 UDC 파일 경로를 파일명을 포함해서 반환. (웹스퀘어 컴포넌트 공통.)파일명은 마지막 .xml까지 포함. .xml을 제외한 경로는 getUdcRoot를 사용해서 반환.UDC 객체가 아닌 컴포넌트에서 호출된 경우에는 undefined가 반환됨.



Return

typedescription


StringUDC 파일 경로. (UDC가 아닌 경우, undefined가 반환됨.)


Sample
// 예제
// UDC 파일 경로는 /a/b/udc.xml 
// 화면 XML은  /a/c/main.xml 
// UDC 객체의 ID는 udc1
  
udc1.getUdcHome(); 
// (실행 결과) /a/b/udc.xml


getUdcRoot(
									  
										)
							

UDC 객체가 자신을 정의한  UDC 파일 경로를 반환. (웹스퀘어 컴포넌트 공통.)파일명을 포함하지 않음. 파일명을 포함한 경로는 getUdcHome을 사용해서 반환.UDC 객체가 아닌 컴포넌트에서 호출된 경우에는 undefined가 반환됨.



Return

typedescription


StringUDC 파일 경로. (UDC가 아닌 경우, undefined가 반환됨.)


Sample
// 예제
// UDC 파일 경로는 /a/b/udc.xml 
// 화면 XML은  /a/c/main.xml 
// UDC 객체의 ID는 udc1
  
udc1.getUdcHome();    
// (실행 결과) /a/b/


getUserData(
									  key
										)
							

setUserData로 웹스퀘어 컴포넌트에 설정한 key의 value 혹은 사용자가 직접 페이지 소스(XML)에 속성으로 정의한 value를 반환. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


keyStringY데이터의 key




Return

typedescription


Stringkey에 해당하는 value


Sample
// Input 컴포넌트에 사용자 속성(setTest)을 설정하는 예제


// 위에서 설정한 setTest을 값을 반환하는 예제. 
input1.getUserData("setTest");
// (반환 값) "Hello"

//setUserData를 통해 'valueTest'(key)와 'WebSquare'(data)로 설정하는 예제. 
input1.setUserData("valueTest","WebSquare");

// 위에서 설정한 setTest을 값을 반환하는 예제. 
input1.getUserData("WebSquare");
// (반환 값) "WebSquare"


getValue(
									  
										)
							

선택된 항목의 value 값을 반환.



Return

typedescription


String선택된 항목의 value


Sample
// value가 "M"인 항목이 선택 된 경우.
 var returnValue = selectbox1.getValue();
// (반환 값) "M"


hasClass(
									  className
										)
							

웹스퀘어 컴포넌트가 특정 class를 포함하고 있는지 확인. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


classNameStringY검색할 class 이름




Return

typedescription


Booleanclass의 포함 여부


Sample
// inputBox 컴포넌트에 class가 속성으로 직접 정의됨.

        
var returnValue = input1.hasClass("tmpInputClass");
// (반환 값) true


hide(
									  
										)
							

컴포넌트를 화면에서 보이지 않도록 숨김.





removeAll(
									  isInitialize
										)
							

모든 항목을 삭제하는 기능. chooseOption 및 allOption 항목이 정의 된 경우 isInitialize값을 true로 적용하면 해당 항목은 삭제되지 않음.


Parameter

nametyperequireddescription


isInitializeBooleanNchooseOption 및 allOption 항목의 삭제 여부. 
"true" : chooseOption 및 allOption 항목을 삭제하지 않음.
"false" (기본 값): chooseOption 및 allOption 항목을 삭제함.



Sample
// chooseOption, allOption의 항목을 포함한 모든 항목이 삭제
selectbox1.removeAll();

// chooseOption, allOption의 항목을 제외한 항목이 삭제
selectbox1.removeAll(true);


removeClass(
									  className
										)
							

웹스퀘어 컴포넌트에서 class를 삭제. (웹스퀘어 컴포넌트 공통.)기본적으로 addClass를 통해 추가된 class만 삭제 가능. 컴포넌트의 속성으로 직접 정의된 class를 삭제하기 위해서는 config.xml 파일에 아래 설정을 추가해야 함. 
 // config.xml 파일에 아래 설정 추가 
 <removeDefaultClass value="true" />


Parameter

nametyperequireddescription


classNameStringY삭제 할 class명



Sample
// inputBox의 속성으로 class가 직접 정의된 경우,


// config.xml 파일에 아래 항목을 추가.

    <removeDefaultClass value="true" />


// removeClass를 통해 삭제 가능. 
input1.removeClass("tmpInputClass");


setDelimiter(
									  
										)
							

selectbox delimiter 동적 변경





setDisabled(
									  disabled
										)
							

웹스퀘어 컴포넌트의 disabled 속성을 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


disabledBooleanYdisabled 상태. 
true: disabled 속성 활성화
false: disabled 속성 비활성화



Sample
// 컴포넌트의 disabled 속성을 활성화.
componentId.setDisabled(true);


setDisplyaMode(
									  
										)
							

selectbox displayMode 동적 변경





setEnableColumn(
									  columnId
									       , 
									       enableColumnFalseValue
										)
							

enableColumn 속성을 동적으로 설정.enableColumn 속성으로 설정된 컬럼은 Select와 바인딩된 DataList의 컬럼 중 선택 항목으로의 disable 여부에 대한 설정 값을 가지고 있음.enableColumn 속성은 Select의 선택 항목 목록 중 특정 항목을 disable 시키기 위한 용도로 사용됨.selectedIndex는 영향을 받지 않고 항상 전체 목록을 기준으로 동작.
(관련 속성)  
 enableColumn
 enableColumnFalseValue


Parameter

nametyperequireddescription


columnIdStringYenableColumn으로 설정할 컬럼의 ID. (disable 시킬 항목에 대한 데이터를 가지고 있는 컬럼)


enableColumnFalseValueStringN목록을 disable 시키기 위한 조건에 해당하는 값.



Sample
// Select는 DataList와 바인딩되어 있음.
select1.setEnableColumn(col3, false);
// (실행 결과) DataList에서 col3 컬럼의 값을 false로 갖는 행은 Select의 선택 목록에 disable 처리되어 표시됨.


setEventPause(
									  evList
									       , 
									       flag
										)
							

지정한 이벤트를 중단함. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


evListStringN중단할 이벤트 목록. (null을 지정할 경우 해당 컴포넌트의 모든 사용자 이벤트가 중단되거나 중단 해제됨.)


flagBooleanY이벤트 중단 여부. 
true: 중단
false: 중단 해제.



Sample
// (예제 1)
// onclick 이벤트를 중단. 
input1.setEventPause("onclick", true); 

// (예제 2)
// onfocus 및 onblur 이벤트의 중단을 해제.
input1.setEventPause("onfocus,onblur", false); 

// (예제 3)
// input1에 등록된 모든 사용자 이벤트를 중단.
input1.setEventPause(null, true);


setGridItemset(
									  obj
										)
							

바인딩된 gridViewItemset을 변경. 기존에 존재하는 gridViewItemset을 삭제하고 새로 구성.


Parameter

nametyperequireddescription


objJSON||XMLY새로 구성할 gridViewItemset에 대한 정보를 담은 객체. (JSON 혹은 XML 객체만 가능.)
 obj.nodeset : DataList의 id. "data:"로 시작해야 함.
 obj.label : label로 지정할 컬럼의 ID.
 obj.value : value로 지정할 컬럼의 ID.
 obj.width : gridViewItemset의 가로 길이.
 obj.height : gridViewItemset의 세로 길이.
 obj.item : 각 컬럼의 설정을 담은 JSON 배열.



Sample
var obj = {
        "nodeset" : "data:dataList2",
        "label" : "col1",
        "value" : "col2",
        "width" : 400,
        "height" : 300, 
        "item" : [{"ref" : "col1", "header" : "label"},{"ref" : "col2", "header" : "value"},{"ref" : "col3", "header" : "dummy"}]
        };
selectbox1.setGridItemset(obj);


setInitStyle(
									  property
										)
							

컴포넌트의 초기 스타일을 복구한다. initStyle 속성을 true로 설정한 컴포넌트만 유효하게 동작한다 (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


propertyStringNCSS 속성 (지정하지 않으면 모든 속성의 초기 값으로 복구.)



Sample
// (예제)
group1.setInitStyle();


setNextTabID(
									  componentID
									       , 
									       componentScope
										)
							

nextTabID 속성을 설정.두번째 인자로 nextTabID에 해당하는 컴포넌트가 위치한 frame의 ID를 넘겨주면 scope를 설정할 수 있음.
(관련 속성)
nextTabID


Parameter

nametyperequireddescription


componentIDStringYnextTabID로 설정할 컴포넌트의 ID


componentScopeStringNnextTabID로 설정할 컴포넌트의 scope



Sample
// 사용 예
selectbox1.setNextTabID("input2", "wframe1");


setNodeSet(
									  nodeset
									       , 
									       label
									       , 
									       value
										)
							

선택 항목 목록을 설정. DataList와 바인딩할 경우 nodeset 파라미터는 "data:"로 시작해야 함.


Parameter

nametyperequireddescription


nodesetStringYDataList의 ID. "data:"로 시작해야 함. (혹은 InstanceData의 XPath)


labelStringNlabel로 설정할 컬럼의 ID. 할당하지 않으면 기존 값이 그대로 적용됨. (혹은 label에 설정할 nodeset 하위의 XPath)


valueStringNvalue로 설정할 컬럼의 ID. 할당하지 않으면 기존 값이 그대로 적용됨. (혹은 value에 설정할 nodeset 하위의 XPath)



Sample
// DataList 정의.







zero
0


one
1




// (예제 1) DataList1과 바인딩하고 label은 lbl 컬럼을, value는 code컬럼을 사용.   
selectbox1.setNodeSet('data:dataList1','lbl','code');

// (예제 2) DataList2와 바인딩하고 label 및 value는 예전 컬럼 정보를 사용. 
selectbox1.setNodeSet('data:dataList2');    
// (결과) 기존에 할당된 label의 lbl과 value의 code는 그대로 유지되고 dataList만 변경됨.


setOpacity(
									  value
										)
							

웹스퀘어 컴포넌트의 불투명도를 설정. (웹스퀘어 컴포넌트 공통.)엔진 내부적으로 CSS 속성인 opacity(불투명도)를 설정.


Parameter

nametyperequireddescription


valueNumberYOpacity 값 (0과 1 사이의 실수)



Sample
// (예제) 불투명도를 0.45로 설정
componentId.setOpacity(0.45);


setPosition(
									  left
									       , 
									       top
									       , 
									       mode
										)
							

웹스퀘어 컴포넌트의 위치(left, top)를 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


leftNumberY설정할 left 위치 값 또는 null.


topNumberY설정할 top 위치 값 또는 null.


modeStringN위치 설정 방법. [default: absolute, delta] 
absolute: 입력된 값을 위치로 설정.
delta: 현재 위치에 입력된 left 및 top 값을 추가.



Sample
// (예제) 컴포넌트의 top만 100px로 설정.
componentId.setPosition(null, 100);


setReadOnly(
									  readOnly
										)
							

웹스퀘어 컴포넌트의 readOnly 속성을 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


readOnlyBooleanYreadOnly 속성 활성화 여부. ( "true" : 활성화, "false" : 비활성화)



Sample
// 컴포넌트의 readOnly 속성을 true로 설정하는 예.
componentId.setReadOnly(true);


setRef(
									  path
										)
							

ref 속성을 설정. DataCollection과 연동시 "data:"라는 prefix를 꼭 붙여야 함.명시하지 않을 경우, InstanceData의 XPath로 인식됨.


Parameter

nametyperequireddescription


pathStringYref의 경로



Sample
// dataMap1의 hobby key와 selectbox1 컴포넌트의 value를 바인딩하는 경우
selectbox1.setRef("data:dataMap1.hobby");

// InstanceData의 "res/userData/hobby"와 연동 할 경우.
selectbox1.setRef("res/userData/hobby");


setSelectedIndex(
									  idx
										)
							

주어진 인덱스에 해당하는 항목을 선택/해제(토글링)하는 작업을 수행. chooseOption 및 allOption 속성이 정의 된 경우 해당 항목도 인덱스에 포함됨.


Parameter

nametyperequireddescription


idxNumberY항목의 인덱스



Sample
// SelectBox가 chooseOption 속성을 사용하는 경우,



남성
M


여성
F




// 아래를 실행하면, chooseOption="true"임으로 "남성" 항목이 선택됨.
selectbox1.setSelectedIndex(1);


setSize(
									  width
									       , 
									       height
										)
							

웹스퀘어 컴포넌트의 크기(width, height)를 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


widthNumberY새로 설정할 컴포넌트의 width 값 또는 null


heightNumberY새로 설정할 컴포넌트의 height 값 또는 null



Sample
// (예제) 컴포넌트의 height만 100px로 설정.
componentId.setSize(null,100);


setStyle(
									  propertyName
									       , 
									       value
										)
							

웹스퀘어 컴포넌트의 CSS 속성을 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


propertyNameStringY설정할 CSS 속성


valueStringY해당 CSS 속성에 적용할 값



Sample
// (예제 1) 컴포넌트의 width를 200px로 설정
componentId.setStyle("width", "200px");

// (예제 2) 배경색을 olive로 변경
componentId.setStyle("background-color","olive");


setText(
									  lbl
									       , 
									       isOriginal
										)
							

lbl 파라메터와 같은 label을 가지는 항목을 선택.


Parameter

nametyperequireddescription


lblStringY선택하고자 하는 항목의 label


isOriginalBooleanNformat이 적용되지 않은 원래 값으로 label을 찾을 것인지에 대한 여부. [default:true, false]
 "true" (기본 값) : format이 적용되지 않은 값을 사용.
 "false" : format이 적용된 값을 사용.



Sample
// label이 "남성"로 정의 된 경우.
selectbox1.getText('남성');


setTitle(
									  title
										)
							

컴포넌트의 title 속성을 설정.


Parameter

nametyperequireddescription


titleStringY속성으로 설정할 값.



Sample
 // title 속성을 "test"로 설정하는 예제

 selectbox1.setTitle("test");


setUserData(
									  key
									       , 
									       value
										)
							

웹스퀘어 컴포넌트에 임의의 데이터를 설정. (웹스퀘어 컴포넌트 공통.) 컴포넌트에 설정 가능한 key를 입력해야 함. 설정 가능한 key가 아닌 경우, 해당 내용이 로그에 출력됨.


Parameter

nametyperequireddescription


keyStringY설정할 데이터의 key


valueStringY설정한 데이터의 value



Sample
// 컴포넌트에 'data'라는 key로 'WebSquare'라는 value를 설정하는 예제.

componentId.setUserData("data", "WebSquare");

// 컴포넌트에 설정이 불가능한 key를 임력할 경우, key 설정이 불가능. 
 
componentId.setUserData("title", "WebSquare");
// 아래와 같이 로그가 출력됨. 
// !!!WARNING - [title] can't be defined as UserData.


setValue(
									  value
										)
							

파라메터로 넘어온 값에 해당하는 선택 항목을 선택.  여러 항목을 한번에 설정할 경우 공백(space)를 이용하여 구분. 주어진 값에 대한 선택 항목이 없는 경우, 아무 동작이 일어나지 않음.


Parameter

nametyperequireddescription


valueStringY선택하려는 항목의 value




Return

typedescription


Boolean설정 결과


Sample
// label이 "남성"이고 value가 "M"인 항목이 정의 된 경우
selectbox1.setValue("M");   
// (결과) "남성" 항목이 선택됨.


setVisibleColumn(
									  columnId
									       , 
									       visibleColumnFalseValue
										)
							

visibleColumn 속성을 동적으로 설정.visibleColumn 속성으로 설정된 컬럼은 Select와 바인딩된 DataList의 컬럼 중 선택 항목으로의 표시 여부에 대한 설정 값을 가지고 있음.visibleColumn 속성은 Select의 선택 항목 목록 중 특정 항목을 감추기 위한 용도로 사용됨.selectedIndex는 영향을 받지 않고 항상 전체 목록을 기준으로 동작.
(관련 속성)  
 visibleColumn
 visibleColumnFalseValue


Parameter

nametyperequireddescription


columnIdStringYvisibleColumn으로 설정할 컬럼의 ID. (감출 항목에 대한 데이터를 가지고 있는 컬럼)


visibleColumnFalseValueStringN목록을 감추기 위한 조건에 해당하는 값.



Sample
// Select는 DataList와 바인딩되어 있음.
select1.setVisibleColumn(col3, false);
// (실행 결과) DataList에서 col3 컬럼의 값을 false로 갖는 행은 Select의 선택 목록에 표시되지 않음.


show(
									  displayType
										)
							

웹스퀘어 컴포넌트를 화면에 표시. (웹스퀘어 컴포넌트 공통.)CSS display 속성을 주어진 값으로 설정하고 "visibility: show;"를 적용.


Parameter

nametyperequireddescription


displayTypeStringN적용할 CSS display 속성의 값.   
block : display: block;을 적용. (기본 값)
inline : display: inline;을 적용.
none : display: none;을 적용.
"" : show 수행 이전의 display 속성 값으로 복구.



Sample
// (예제) display: block; CSS를 설정.
componentId.show();  

// (예제) 위제 설정한 display 속성 값을 취소하고 원래의 display 값을 복구.
componentId.show("");


showChooseOption(
									  chooseOption
										)
							

chooseOption을 설정.


Parameter

nametyperequireddescription


chooseOptionbooleanY설정값



Sample
// (예제)
selectbox1.showChooseOption(true);


toggleClass(
									  className
										)
							

웹스퀘어 컴포넌트에서 특정 class를 제거하거나 추가. (웹스퀘어 컴포넌트 공통.)웹스퀘어 컴포넌트가 파라미터로 주어진 class를 포함한 경우, 해당 class를 제거. 웹스퀘어 컴포넌트에 파라미터로 주어진 class가 없는 경우, 해당 class를 추가. 기본적으로 addClass를 통해 추가된 class만 삭제 가능. 웹스퀘어 컴포넌트의 속성으로 직접 정의된 class를 삭제하기 위해서는 config.xml 파일에 아래 설정을 추가. 
 // config.xml 파일에 아래 설정 추가
 <removeDefaultClass value="true" />


Parameter

nametyperequireddescription


classNameStringY추가/삭제할 class



Sample
// inputBox 컴포넌트에 class가 속성으로 직접 정의됨.


//config.xml 파일에 아래를 추가.

    <removeDefaultClass value="true" />


// tmpInputClass class를 삭제.
input1.toggleClass("tmpInputClass");

// (위에서 삭제된) tmpInputClass class를 다시 추가.
input1.toggleClass("tmpInputClass");


trigger(
									  type
									       , 
									       array
										)
							

컴포넌트에서 특정 이벤트를 발생시킴. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


typeStringY발생시킬 이벤트


arrayArrayN이벤트 핸들러에 전달할 파라미터 배열



Sample
// (예제 1)
// input1 컴포넌트에 onclick 이벤트를 발생시킴.
input1.trigger("onclick");

// (예제 2)
// input1에 onviewchange 이벤트를 발생시키고 핸들러 함수에 (1,2) 인자를 전달하여 호출.
input1.trigger("onviewchange", [1,2]);


unbind(
									  type
									       , 
									       function
										)
							

컴포넌트에서 이벤트를 제거. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


typeStringN제거할 이벤트. (생략할 경우 해당 컴포넌트의 모든 이벤트를 제거.)


functionFunctionN제거할 이벤트의 핸들러 함수. (생략할 경우 해당 위에 지정한 이벤트에 등록된 모든 핸들러 함수를 제거.)



Sample
// (예제 1)
// input1에 등록된 모든 이벤트를 제거.
input1.unbind();

// (예제 2)
// input1의 onviewchange 이벤트에 대한 모든 핸들러 함수를 제거.
input1.unbind("onviewchange");

// (예제 3)
// input1의 onviewchange 이벤트에 대한 func1 이벤트 핸들러 함수를 제거.
input1.unbind("onviewchange", func1);


unbindRef(
									  
										)
							

ref 바인딩을 해제.





validate(
									  
										)
							

컴포넌트의 유효성 관련 속성값을 통해 유효성 검사를 실행.
(관련 속성)
 displaymessage="true"
(유효성 검증 속성)
 mandatory


Sample
// chooseOption 및 mandatory 속성을 지정.



남성
M


여성
F




var returnValue = selectbox1.validate();
// (반환 값) - false 사용자가 아무 것도 선택하지 않은 상태. ("-선택-"(chooseOption="true")이 선택된 상태))
// (반환 값)- true (SelectBox에서 항목을 선택한 상태)

// displaymessage="true" 속성을 지정하고 유효성 검사에서 false가 반환될 경우,
// 엔진에서 내부에서 설정한 "필수 입력 항목입니다"가 표시됨.


validateObject(
									  
										)
							

컴포넌트의 유효성 관련 속성값을 통해 유효성 검사를 실행.
(관련 속성)
 displaymessage="true"

(유효성 관련 속성)
 mandatory
 minLength
 maxLength 
 minByteLength
 maxByteLength



Return

typedescription


Objectobject 유효성 검사 결과 객체
    object.callerId 유효성 검사 대상 컴포넌트 ID
    object.type 유효성 검사 항목
   object.value 유효성 검사 결과 값


Sample
//아래와 같이 chooseOption과 mandatory 속성이 적용 된 selectbox가 정의 된 경우.









var returnObj = selectbox1.validateObject();
// (반환 값 - selectbox의 값이 없을 경우 ) returnObj 객체 반환 

returnObj.callerId = "selectbox1" returnObj.type = "mandatory" returnObj.value = ""
// (반환 값 - selectbox의 값이 있을 경우) 비어있는 객체가 반환

// displaymessage="true" 설정을 사용할 경우, 검사에 실패하면 Engine에 설정된 메시지가 alert으로 표시됨. 
// (alert 메세지 예시) 필수 입력 항목입니다


visible(
									  flag
										)
							

[deprecated] show/hide 혹은 setStyle 사용을 권장.엔진 내부적으로 CSS visibility 속성을 설정.


Parameter

nametyperequireddescription


flagBooleanY설정할 CSS visibility 속성 값 
true : visibility: visible;
false : visibility: hidden;










Copyrights Inswave Systems Co., Ltd.



