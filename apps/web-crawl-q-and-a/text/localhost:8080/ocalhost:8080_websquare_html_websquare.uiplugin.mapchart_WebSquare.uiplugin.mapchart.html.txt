


WebSquare.uiplugin.mapchart 









PropertyEventMethod찾아보기

WebSquare.uiplugin.mapchart - 5.0_5.4826M.20230213.171915





맵차트. 데이터를 지도로 표현. 
 데이터를 시각적인 형태(지도)로 표현하는 컴포넌트.   
 d3을 이용해 대한민국의 전국 지도 데이터를 다양한 형태로 시각화하여 표현 가능.

Type


uiplugin

Property Summary




accessibility

[default:false] 웹 접근성을 지원하기 위해 select 태그를 이용하여 별도의 정보 제공 유무



dataLists

지도와 연동할 dataList들을 ,를 구분자로 나열한다



dataMapPath

지도를 표현하는 json데이터가 위치한 폴더 경로



dataMapRatio_level0

[default:simp1]전국지도에 대한 간략화 비율 설정



dataMapRatio_level1

[default:simp1]시,군 지도대한 간략화 비율 설정



dataMapRatio_level2

[default:simp1] 읍,면,동 지도에대한 간략화 비율 설정



event_deselect

[default:onmouseout] 이벤트가 발생한 지점의 지도에 선택이 해제된 효과를 표현하는 이벤트를 지정한다



event_drag

[default:ondrag] 지도의 drag 기능을 사용할 것인지에 대한 여부



event_drilldown

[default:onclick] 이벤트가 발생한 지점의 지도 내부로 들어갈 이벤트를 지정한다



event_drillup

[default:oncontextmenu] 현재 지도의 상위지도로 이동하는 처리를 실행할 이벤트를 지정한다



event_select

[default:onmouseover] 이벤트가 발생한 지점의 지도에 선택된 효과를 표현하는 이벤트를 지정한다



event_tooltipoff

[default:onmouseout] tooltip을 감출 이벤트를 지정한다



event_tooltipon

[default:onmouseover] 이벤트가 발생한 지점의 지도의 정보를 tooltip을 띄워 보여줄 이벤트를 지정한다



event_zoom

[default:onzoom] 지도의 확대,축소 기능을 사용할 것인지에 대한 여부



id

컴포넌트 ID. 



setTooltipStrFunc

tooltip을 보여줄 때, 사용자 정의 string을 가져오기 위한 함수명



showMunicipalityLabel

[default:true, false] 지도에 지역명을 표시 할지 여부



startMap

[default:0] 처음 화면에 그려질 지도에 대한 지도코드값을 입력한다



userData1

사용자 정의 데이터 속성



userData2

사용자 정의 데이터 속성



userData3

사용자 정의 데이터 속성



zoomMax

[default:5] 지도 확대 시 최대화 비율 한계값을 설정한다



zoomMin

[default:0



Event Summary




onaftermapchange

지도가 변경된 후에 발생하는 이벤트



onbeforemapchange

지도가 변경되기 직전에 발생하는 이벤트



onmapclick

지도의 특정 영역이 click된 경우에 발생하는 이벤트



onmapdatachange

지도와 연동된 dataLists들 중 하나의 dataList 데이터가 변경(초기화,초기값설정,삽입,삭제 포함)된 경우 발생하는 이벤트



onmapdblclick

지도의 특정 영역이 dblclick된 경우에 발생하는 이벤트



onmapmousemove

지도의 특정 영역이 mousemove된 경우에 발생하는 이벤트



onmapmouseout

지도의 특정 영역이 mouseout된 경우에 발생하는 이벤트



onmapmouseover

지도의 특정 영역이 mouseover된 경우에 발생하는 이벤트


Method Summary




addClass(
									  className
										)
								

컴포넌트에 CSS class를 추가



addMapEvent(
									  evName
									       , 
									       func
										)
								

지도에 필요한 이벤트를 직접 추가한다



addPattern(
									  patternData
										)
								

svg에 하나의 패턴을 만들기 위한 함수



bind(
									  eventType
									       , 
									       function
										)
								

컴포넌트에 이벤트와 핸들러 함수를 동적으로 할당



changeClass(
									  oldClassName
									       , 
									       newClassName
										)
								

웹스퀘어 컴포넌트의 class를 변경. (웹스퀘어 컴포넌트 공통.) 



changeMap(
									  code
										)
								

인자로 넘겨준 code에 해당하는 지도가 그려지도록 화면을 변경한다



changeMapPath(
									  mapPath
										)
								

인자로 넘겨준 path의 지도로 변경한다



createPattern(
									  userPatternData
									       , 
									       useDefaultPattern
										)
								

svg에 적용할 패턴을 생성한다



drillup(
									  
										)
								

현재 지도의 부모 지도가 그려지도록 지도를 변경한다



focus(
									  
										)
								

웹스퀘어 컴포넌트에 포커스를 줌



getCurrentMap(
									  
										)
								

현재 그려진 지도의 코드값을 가져온다



getDisabled(
									  
										)
								

현재 웹스퀘어 컴포넌트에 설정된 disabled 속성 값을 반환



getGenerator(
									  
										)
								

컴포넌트가 Generator에 의해 생성된 경우, 자신을 생성한 부모 Generator 객체를 반환



getID(
									  
										)
								

웹스퀘어 컴포넌트의 ID를 반환



getInitStyle(
									  CSS
										)
								

컴포넌트의 초기 스타일을 반환



getOpacity(
									  
										)
								

웹스퀘어 컴포넌트의 불투명도를 반환. (웹스퀘어 컴포넌트 공통.)



getOriginalID(
									  
										)
								

웹스퀘어 컴포넌트의 originalID를 반환. (웹스퀘어 컴포넌트 공통.)



getParentMap(
									  
										)
								

현재 지도의 부모 지도의 코드값을 가져온다



getPluginName(
									  
										)
								

웹스퀘어 컴포넌트의 이름(pluginName)을 반환



getPosition(
									  positionName
										)
								

웹스퀘어 컴포넌트의 위치(left, top)를 반환. (웹스퀘어 컴포넌트 공통.) 



getReadOnly(
									  
										)
								

현재 웹스퀘어 컴포넌트에 설정된 readOnly 속성 값을 반환



getScope(
									  
										)
								

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)  



getScopeWindow(
									  
										)
								

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)



getSize(
									  sizeName
										)
								

웹스퀘어 컴포넌트의 크기(width, height)를 반환. (웹스퀘어 컴포넌트 공통.) 



getStyle(
									  propertyName
										)
								

웹스퀘어 컴포넌트의 CSS 속성 값을 반환



getStyleValue(
									  style
										)
								

[deprecated]



getTitle(
									  
										)
								

컴포넌트의 title 속성 값을 반환



getUdcHome(
									  
										)
								

UDC 객체가 자신을 정의한 UDC 파일 경로를 파일명을 포함해서 반환. (웹스퀘어 컴포넌트 공통.)



getUdcRoot(
									  
										)
								

UDC 객체가 자신을 정의한  UDC 파일 경로를 반환. (웹스퀘어 컴포넌트 공통.)



getUserData(
									  key
										)
								

setUserData로 웹스퀘어 컴포넌트에 설정한 key의 value 혹은 사용자가 직접 페이지 소스(XML)에 속성으로 정의한 value를 반환



hasClass(
									  className
										)
								

웹스퀘어 컴포넌트가 특정 class를 포함하고 있는지 확인



hide(
									  
										)
								

웹스퀘어 컴포넌트를 화면에서 숨김. (웹스퀘어 컴포넌트 공통.)



removeClass(
									  className
										)
								

웹스퀘어 컴포넌트에서 class를 삭제. (웹스퀘어 컴포넌트 공통.)



setDisabled(
									  disabled
										)
								

웹스퀘어 컴포넌트의 disabled 속성을 설정



setEventPause(
									  evList
									       , 
									       flag
										)
								

지정한 이벤트를 중단함



setInitStyle(
									  property
										)
								

컴포넌트의 초기 스타일을 복구한다



setOpacity(
									  value
										)
								

웹스퀘어 컴포넌트의 불투명도를 설정. (웹스퀘어 컴포넌트 공통.)



setPosition(
									  left
									       , 
									       top
									       , 
									       mode
										)
								

웹스퀘어 컴포넌트의 위치(left, top)를 설정



setReadOnly(
									  readOnly
										)
								

웹스퀘어 컴포넌트의 readOnly 속성을 설정



setScale(
									  scale
										)
								

지도의 배율을 설정하는 함수



setSize(
									  width
									       , 
									       height
										)
								

웹스퀘어 컴포넌트의 크기(width, height)를 설정



setStyle(
									  propertyName
									       , 
									       value
										)
								

웹스퀘어 컴포넌트의 CSS 속성을 설정



setUserData(
									  key
									       , 
									       value
										)
								

웹스퀘어 컴포넌트에 임의의 데이터를 설정. (웹스퀘어 컴포넌트 공통.) 



show(
									  displayType
										)
								

웹스퀘어 컴포넌트를 화면에 표시. (웹스퀘어 컴포넌트 공통.)



toggleClass(
									  className
										)
								

웹스퀘어 컴포넌트에서 특정 class를 제거하거나 추가. (웹스퀘어 컴포넌트 공통.)



trigger(
									  type
									       , 
									       array
										)
								

컴포넌트에서 특정 이벤트를 발생시킴



unbind(
									  type
									       , 
									       function
										)
								

컴포넌트에서 이벤트를 제거



visible(
									  flag
										)
								

[deprecated] 



Property Detail




accessibility

[default:false] 웹 접근성을 지원하기 위해 select 태그를 이용하여 별도의 정보 제공 유무.


dataLists

지도와 연동할 dataList들을 ,를 구분자로 나열한다.


dataMapPath

지도를 표현하는 json데이터가 위치한 폴더 경로. 기본값은 externalJS/mapchart


dataMapRatio_level0

[default:simp1]전국지도에 대한 간략화 비율 설정. simp1은 원래지도를 Visvalingam, weighted area 1%로 축약한 것. simp01은 Visvalingam, weighted area 0.1%로 축약한 것. simp16은 Douglas-Peucker 16%로 축약한 것.


dataMapRatio_level1

[default:simp1]시,군 지도대한 간략화 비율 설정. simp1은 원래지도를 Visvalingam, weighted area 1%로 축약한 것. simp008은 Visvalingam-effective Area로 0.08%로 축약한 것. simp16은 Douglas-Peucker 16%로 축약한 것.


dataMapRatio_level2

[default:simp1] 읍,면,동 지도에대한 간략화 비율 설정. simp1은 원래지도를 Visvalingam, weighted area 1%로 축약한 것. simp008은 Visvalingam-effective Area로 0.08%로 축약한 것. simp16은 Douglas-Peucker 16%로 축약한 것.


event_deselect

[default:onmouseout] 이벤트가 발생한 지점의 지도에 선택이 해제된 효과를 표현하는 이벤트를 지정한다. none을 입력하면 해당 처리를 실행할 이벤트를 지정하지 않는다.


event_drag

[default:ondrag] 지도의 drag 기능을 사용할 것인지에 대한 여부. none으로 설정하면 마우스 drag를 통한 지도 이동 기능을 사용하지 않는다.


event_drilldown

[default:onclick] 이벤트가 발생한 지점의 지도 내부로 들어갈 이벤트를 지정한다. none을 입력하면 해당 처리를 실행할 이벤트를 지정하지 않는다.


event_drillup

[default:oncontextmenu] 현재 지도의 상위지도로 이동하는 처리를 실행할 이벤트를 지정한다. none을 입력하면 해당 처리를 실행할 이벤트를 지정하지 않는다.


event_select

[default:onmouseover] 이벤트가 발생한 지점의 지도에 선택된 효과를 표현하는 이벤트를 지정한다. none을 입력하면 해당 처리를 실행할 이벤트를 지정하지 않는다.


event_tooltipoff

[default:onmouseout] tooltip을 감출 이벤트를 지정한다. none을 입력하면 해당 처리를 실행할 이벤트를 지정하지 않는다.


event_tooltipon

[default:onmouseover] 이벤트가 발생한 지점의 지도의 정보를 tooltip을 띄워 보여줄 이벤트를 지정한다. none을 입력하면 해당 처리를 실행할 이벤트를 지정하지 않는다.


event_zoom

[default:onzoom] 지도의 확대,축소 기능을 사용할 것인지에 대한 여부. none으로 설정하면 마우스 휠을 통한 zoom기능을 사용하지 않는다.


id

컴포넌트 ID. 컴포넌트 ID는 전역 객체로 할당됨. 각 컴포넌트 ID를 통해 Script에서 해당 컴포넌트에 접근 가능.


setTooltipStrFunc

tooltip을 보여줄 때, 사용자 정의 string을 가져오기 위한 함수명


showMunicipalityLabel

[default:true, false] 지도에 지역명을 표시 할지 여부


startMap

[default:0] 처음 화면에 그려질 지도에 대한 지도코드값을 입력한다. 기본값은 0으로 전국지도. (ex : 11입력시 처음 그려질 때 서울지도가 나타난다.)


userData1

사용자 정의 데이터 속성. getUserData("userData1") API를 통해 설정한 값을 얻어올 수 있음. 
 // 속성 값 얻어오기 예시
 getUserData("userData1");


userData2

사용자 정의 데이터 속성. getUserData("userData2") API를 통해 설정한 값을 얻어올 수 있음. 
 // 속성 값 얻어오기 예시
 getUserData("userData2");


userData3

사용자 정의 데이터 속성. getUserData("userData3") API를 통해 설정한 값을 얻어올 수 있음. 
 // 속성 값 얻어오기 예시
 getUserData("userData3");


zoomMax

[default:5] 지도 확대 시 최대화 비율 한계값을 설정한다.


zoomMin

[default:0.2] 지도 축소 시 최소화 비율 한계값을 설정한다.





Event Detail




onaftermapchange

지도가 변경된 후에 발생하는 이벤트. 최초 실행시에도 한 번 발생한다.
Sample
<![CDATA[
 alert(this.getCurrentMap() + "," + this.getParentMap());
]]>


onbeforemapchange

지도가 변경되기 직전에 발생하는 이벤트. 이벤트 핸들러 함수에서 false를 리턴하여 지도 변경 동작을 취소할 수 잇다.

Parameter

nametypedescription


infoJSONoldMapCode, newMapCode를 포함한 JSON을 반환한다.
 info.oldMapCode : 변경되기 직전의 지도의 코드값 (현재 화면에 그려진 지도)  
 info.newMapCode : 변경하고자 할 지도의 코드값


Sample
<![CDATA[
    if( info.newMapCode.length >= 5) {
        return false;   // 변경되고자 하는 지도가 2단계 이하 단계인 경우 지도 변경 동작을 취소한다. 즉 지도의 최대 depth를 1단계(전국 - 시,도 범위까지)까지만 허용한다.   
    }
]]>


onmapclick

지도의 특정 영역이 click된 경우에 발생하는 이벤트

Parameter

nametypedescription


propertiesJSONcode, name, name_eng, base_year를 포함한 JSON을 반환한다.
 properties.code : 지역 코드 값 
 properties.name : 지역 이름 (한글) 
 properties.name_eng : 지역 이름 (영문)
 properties.base_year : 지도 데이터 날짜


Sample
<![CDATA[
    if( properties.code.length === 5) {
        this.changeMap(properties.code);
    }
]]>


onmapdatachange

지도와 연동된 dataLists들 중 하나의 dataList 데이터가 변경(초기화,초기값설정,삽입,삭제 포함)된 경우 발생하는 이벤트
Sample
<![CDATA[
 switch(dataListId) {
 case "dataList_mapchart_color" : scwin.updateMapchartColor(dataListId); break; 
 case "dataList_mapchart_flag1" : scwin.updataeMapchartFlag(dataListId); break;
 }
]]>


onmapdblclick

지도의 특정 영역이 dblclick된 경우에 발생하는 이벤트

Parameter

nametypedescription


propertiesJSONcode, name, name_eng, base_year를 포함한 JSON을 반환한다.
 properties.code : 지역 코드 값 
 properties.name : 지역 이름 (한글) 
 properties.name_eng : 지역 이름 (영문)
 properties.base_year : 지도 데이터 날짜


Sample
<![CDATA[
    if( properties.code.length === 5) {
        this.changeMap(properties.code);
    }
]]>


onmapmousemove

지도의 특정 영역이 mousemove된 경우에 발생하는 이벤트

Parameter

nametypedescription


propertiesJSONcode, name, name_eng, base_year를 포함한 JSON을 반환한다.
 properties.code : 지역 코드 값 
 properties.name : 지역 이름 (한글) 
 properties.name_eng : 지역 이름 (영문)
 properties.base_year : 지도 데이터 날짜


Sample
<![CDATA[
    if( properties.code.length === 5) {
        this.changeMap(properties.code);
    }
]]>


onmapmouseout

지도의 특정 영역이 mouseout된 경우에 발생하는 이벤트

Parameter

nametypedescription


propertiesJSONcode, name, name_eng, base_year를 포함한 JSON을 반환한다.
 properties.code : 지역 코드 값 
 properties.name : 지역 이름 (한글) 
 properties.name_eng : 지역 이름 (영문)
 properties.base_year : 지도 데이터 날짜


Sample
<![CDATA[
    if( properties.code.length === 5) {
        this.changeMap(properties.code);
    }
]]>


onmapmouseover

지도의 특정 영역이 mouseover된 경우에 발생하는 이벤트

Parameter

nametypedescription


propertiesJSONcode, name, name_eng, base_year를 포함한 JSON을 반환한다.
 properties.code : 지역 코드 값 
 properties.name : 지역 이름 (한글) 
 properties.name_eng : 지역 이름 (영문)
 properties.base_year : 지도 데이터 날짜


Sample
<![CDATA[
    if( properties.code.length === 5) {
        this.changeMap(properties.code);
    }
]]>



Method Detail




addClass(
									  className
										)
							

컴포넌트에 CSS class를 추가. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


classNameStringY추가할 class의 이름



Sample
// (예제)
// input1 컴포넌트에 oddClass라는 class를 추가    
input1.addClass("oddClass");


addMapEvent(
									  evName
									       , 
									       func
										)
							

지도에 필요한 이벤트를 직접 추가한다. d3이 지원하는 이벤트만 효과가 있다.


Parameter

nametyperequireddescription


evNameStringY추가하고자 할 이벤트


funcfuncY추가하고자 할 이벤트 핸들러 함수



Sample
 mapchart1.addMapEvent("onkeydown", scwin.mapchart1_onkeydown);


addPattern(
									  patternData
										)
							

svg에 하나의 패턴을 만들기 위한 함수


Parameter

nametyperequireddescription


patternDataobjectY패턴에 대한 정보를 가지고 있는 JSON 객체



Sample
var pattern = {"type":"line", "size":4, "stroke":"#BDBDBD", "strokeWidth":1};
mapchart1.addPattern(pattern);


bind(
									  eventType
									       , 
									       function
										)
							

컴포넌트에 이벤트와 핸들러 함수를 동적으로 할당. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


eventTypeStringY할당할 이벤트


functionFunctionY이벤트에 대한 핸들러 함수.



Sample
// (예제 1)
// input1의 onclick 이벤트에 대한 핸들러 함수를 직접 정의하여 할당. 
input1.bind("onclick", function(e){ alert(input1.getValue();}));

// (예제 2)
// 미리 commObj.ev_click 함수를 정의.
var commObj = {};
commObj.ev_click = function(e){
    alert("click :: "+this.id);
};

// input1 컴포넌트에 onclick 이벤트와 정의한 핸들러 함수를 동적으로 할당. 
input1.bind("onclick", commObj.ev_click );


changeClass(
									  oldClassName
									       , 
									       newClassName
										)
							

웹스퀘어 컴포넌트의 class를 변경. (웹스퀘어 컴포넌트 공통.) 기본적으로 addClass를 통해 추가된 class만 변경 가능. 웹스퀘어 컴포넌트의 class 속성에 직접 정의된 class를 삭제하려면 config.xml 파일에 아래 설정을 추가해야 함. 
// config.xml에 아래 설정을 추가. 
<removeDefaultClass value="true" />


Parameter

nametyperequireddescription


oldClassNameStringY변경할 class


newClassNameStringY새로 사용할 class



Sample
// inputBox 컴포넌트에 class가 속성으로 직접 정의됨.


// config.xml 파일에 아래를 추가.

    <removeDefaultClass value="true" />


// class를 변경 가능. 
// (tmpInputClass class를 tmpInputWarninClass로 변경.)
input1.changeClass("tmpInputClass","tmpInputWarninClass");


changeMap(
									  code
										)
							

인자로 넘겨준 code에 해당하는 지도가 그려지도록 화면을 변경한다.


Parameter

nametyperequireddescription


codeStringY변경하고자 하는 지도의 코드값



Sample
mapchart1.changeMap("11");  // 현재 지도를 서울 지도로 변경한다.


changeMapPath(
									  mapPath
										)
							

인자로 넘겨준 path의 지도로 변경한다.


Parameter

nametyperequireddescription


mapPathStringY변경하고자 하는 지도의 path



Sample
mapchart1.changeMapPath("mapdata/2016");    // 현재 지도를 mapdata/2016 디렉토리 안의 지도로 변경한다.


createPattern(
									  userPatternData
									       , 
									       useDefaultPattern
										)
							

svg에 적용할 패턴을 생성한다.


Parameter

nametyperequireddescription


userPatternDataobjectY패턴에 대한 정보를 가지고 있는 JSON 객체들의 배열


useDefaultPatternbooleanN컴포넌트 내부에 있는 pattern 사용 여부



Sample
var patternArray = [{"type":"line", "size":4, "stroke":"#BDBDBD", "strokeWidth":1}];
mapchart1.createPattern(patternArray);


drillup(
									  
										)
							

현재 지도의 부모 지도가 그려지도록 지도를 변경한다. 현재 지도가 최상위 지도(전국지도)인 경우에는 아무 동작을 하지 않는다.


Sample
mapchart1.drillup();


focus(
									  
										)
							

웹스퀘어 컴포넌트에 포커스를 줌. (웹스퀘어 컴포넌트 공통.)





getCurrentMap(
									  
										)
							

현재 그려진 지도의 코드값을 가져온다.



Return

typedescription


String현재 그려진 지도의 코드값


Sample
 var currentMap = mapchart1.getCurrentMap();
 if(currentMap.length === 5) { mapchart1.changeMap(currentMap.slice(0,2)); }  // 현재 지도의 상위 지도로 지도를 변경한다.


getDisabled(
									  
										)
							

현재 웹스퀘어 컴포넌트에 설정된 disabled 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Booleandisabled 속성 값


Sample
// 컴포넌트의 disabled 속성 값 확인 예제
var returnValue = componentId.getDisabled();
// (반환 값 예시) false


getGenerator(
									  
										)
							

컴포넌트가 Generator에 의해 생성된 경우, 자신을 생성한 부모 Generator 객체를 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Object부모 Generator 객체


Sample
//부모 Generator가 자식으로 Trigger를 생성한 예제
  

// 아래 예제의 경우 trigger1을 클릭하면 generator1 객체가 console에 표시됨. 
 scwin.trigger1.onclick = function(){ console.log(this.getGenerator());} 



getID(
									  
										)
							

웹스퀘어 컴포넌트의 ID를 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


String웹스퀘어 컴포넌트 ID


Sample
// 동적으로 웹스퀘어 컴포넌트를 받을 경우, 아래와 같이 ID 확인 가능.
function fn_validCheck(tmpObj){
    var compID = tmpObj.getID();
}
// 위의 예제 에서 tmpObj가 "input1" ID를 가지고 있는 경우,
// (반환 값) "input1"


getInitStyle(
									  CSS
										)
							

컴포넌트의 초기 스타일을 반환. initStyle 속성을 true로 설정한 컴포넌트만 유효하게 동작한다.(웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


CSSStringN속성 (지정하지 않으면 모든 정보 출력)






getOpacity(
									  
										)
							

웹스퀘어 컴포넌트의 불투명도를 반환. (웹스퀘어 컴포넌트 공통.)엔진 내부적으로 CSS의 opacity 속성 값을 반환.



Return

typedescription


IntegerOpacity 값


Sample
// inputBox 컴포넌트에 opacity CSS를 적용.

        
// inputBox 컴포넌트의 opacity 값을 반환. 
var returnValue = input1.getOpacity(); 
// returnValue는 0 ~ 1 사이의 실수.
// (반환 값) "0.2"


getOriginalID(
									  
										)
							

웹스퀘어 컴포넌트의 originalID를 반환. (웹스퀘어 컴포넌트 공통.)originalID는 Scope 기능을 사용할 경우 존재. scope="true"인 WFrame를 사용할 경우, WFrame 내부의 컴포넌트 ID는 원래 사용자가 정의한 값(originalID) 앞에 prefix(wframeID + "_")가 추가되는 방식으로 변경됨.  originalID는 이 때, prefix가 추가되기 전 ID를 의미.



Return

typedescription


String컴포넌트의 originalID


Sample
// WFrame을 사용하는 다중 화면 구조 예시

// WFrame을 포함한 메인 화면 (main.xml) 
 

// 메인 화면 WFrame에 연결되는 소스 화면 (text.xml)


// text.xml 화면의 내부 스크립트에서 ID 및 originalID 확인하는 예제.
// getID 실행 
textbox1.getID(); // 실행 결과는 "wframe1_textbox1"
 
// getOriginalID 실행 
textbox1.getOriginalID(); // 실행 결과는 "textbox1"


getParentMap(
									  
										)
							

현재 지도의 부모 지도의 코드값을 가져온다.



Return

typedescription


String현재 지도의 부모 지도의 코드값


Sample
 mapchart1.changeMap(mapchart1.getParentMap()) 과 mapchart1.drillup()의 동작은 같다;


getPluginName(
									  
										)
							

웹스퀘어 컴포넌트의 이름(pluginName)을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


String웹스퀘어 컴포넌트의 이름 (pluginName)


Sample
// 아래와 같이 공통 함수에서 동적으로 웹스퀘어 객체를 받는 경우, 컴포넌트 종류에 따른 분기 처리가 가능.
var commObj = {};

commObj.fn_makeReqData = function(tmpObj){
    var tmpID = tmpObj.getID(); // 컴포넌트 ID
    var tmpCompType = tmpObj.getPluginName();   // 컴포넌트 이름

    if(tmpCompType == "input"){
        //..로직..
    }else if(tmpCompType == "gridView"){
        //..로직 ..
    }else{
        //..로직..
    }
};


getPosition(
									  positionName
										)
							

웹스퀘어 컴포넌트의 위치(left, top)를 반환. (웹스퀘어 컴포넌트 공통.) 위치 값이 %로 설정된 경우, 픽셀로 변환된 값을 반환.


Parameter

nametyperequireddescription


positionNameStringY[left, top] 위치 종류




Return

typedescription


Number컴포넌트의 위치 값


Sample
// 아래와 같이 input 컴포넌트에 CSS 속성 margin이 적용된 경우,


// (예제) 위의 inputBox 컴포넌트의 top 값을 확인     
var returnValue = input1.getPosition("top"); 

// 픽셀 단위의 위치 값이 반환됨.

// (반환 값) 10


getReadOnly(
									  
										)
							

현재 웹스퀘어 컴포넌트에 설정된 readOnly 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Boolean현재 설정되어있는 readOnly 속성


Sample
// 컴포넌트의 readOnly 속성 값 확인 예제
var returnValue = componentId.getReadOnly();
// (반환 값 예시) false


getScope(
									  
										)
							

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)  scope="true"인 WFrame의 자식 컴포넌트가 아닌 경우, null을 반환.



Return

typedescription


ObjectWFrame 객체 또는 null


Sample
// (예제)
// 메인페이지에 wframe1이 있고, wframe1 내부에 wframe11이 존재. 
// 그리고, wframe11 내부에 textbox1이 존재.
   
textbox1.getScope(); 
// (반환 값) wframe11 객체


getScopeWindow(
									  
										)
							

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)scope="true"인 WFrame의 자식 컴포넌트가 아닌 경우, 전역 window 객체를 반환.



Return

typedescription


ObjectWFrame 객체의 scope 객체 또는 전역 window 객체


Sample
// (예제)
// 메인페이지에 wframe1이 있고, wframe1 내부에 wframe11이 존재. 
// 그리고, wframe11 내부에 textbox1이 존재.
   
var scope = textbox1.getScopeWindow();
scope.wframe11 === textbox1.getScope(); // true


getSize(
									  sizeName
										)
							

웹스퀘어 컴포넌트의 크기(width, height)를 반환. (웹스퀘어 컴포넌트 공통.) %로 설정된 경우, 픽셀로 변환된 값을 반환.


Parameter

nametyperequireddescription


sizeNameStringY크기 값의 종류. sizeName 별 계산 방법은 아래 표를 참고. 
height : element.clientHeight
innerHeight : element.clientHeight + padding
outerHeight : element.clientHeight + padding + border
outerMarginHeight : element.clientHeight + padding + border + margin
width : element.clientWidth
innerWidth : element.clientWidth + padding
outerWidth : element.clientWidth + padding + border
outerMarginWidth : element.clientWidth + padding + border + margin




Return

typedescription


Number컴포넌트의 크기 값


Sample
var returnValue = componentId.getSize("width");
// (반환 예) 100 
// 픽셀 단위의 크기 값이 반환됨. 
// %로 설정된 경우, 픽셀로 변환된 값이 반환됨.


getStyle(
									  propertyName
										)
							

웹스퀘어 컴포넌트의 CSS 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


propertyNameStringY반환할 CSS 속성




Return

typedescription


StringCSS 속성 값


Sample
//아래와 같이 input 컴포넌트가 정의 된 경우


// (예제) 위의 inputBox 컴포넌트의 width 값을 확인   
var returnValue = input1.getStyle("width");

// (반환 값) "144px"


getStyleValue(
									  style
										)
							

[deprecated]getStyle 사용 권장.웹스퀘어 컴포넌트에 적용된 해당 CSS 속성 값을 반환.


Parameter

nametyperequireddescription


styleStringY반환하려는 CSS 속성.




Return

typedescription


Stringstyle 해당 CSS 속성 값 (색을 반환하는 경우, HexCode로 반환됨.)





getTitle(
									  
										)
							

컴포넌트의 title 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Stringtitle 속성 값.


Sample
// 아래와 같이 input 컴포넌트의 title 속성이 "이름 입력"으로 정의된 경우


var tmpTitle = input1.getTitle();
// (반환 값 예시) "이름 입력"


getUdcHome(
									  
										)
							

UDC 객체가 자신을 정의한 UDC 파일 경로를 파일명을 포함해서 반환. (웹스퀘어 컴포넌트 공통.)파일명은 마지막 .xml까지 포함. .xml을 제외한 경로는 getUdcRoot를 사용해서 반환.UDC 객체가 아닌 컴포넌트에서 호출된 경우에는 undefined가 반환됨.



Return

typedescription


StringUDC 파일 경로. (UDC가 아닌 경우, undefined가 반환됨.)


Sample
// 예제
// UDC 파일 경로는 /a/b/udc.xml 
// 화면 XML은  /a/c/main.xml 
// UDC 객체의 ID는 udc1
  
udc1.getUdcHome(); 
// (실행 결과) /a/b/udc.xml


getUdcRoot(
									  
										)
							

UDC 객체가 자신을 정의한  UDC 파일 경로를 반환. (웹스퀘어 컴포넌트 공통.)파일명을 포함하지 않음. 파일명을 포함한 경로는 getUdcHome을 사용해서 반환.UDC 객체가 아닌 컴포넌트에서 호출된 경우에는 undefined가 반환됨.



Return

typedescription


StringUDC 파일 경로. (UDC가 아닌 경우, undefined가 반환됨.)


Sample
// 예제
// UDC 파일 경로는 /a/b/udc.xml 
// 화면 XML은  /a/c/main.xml 
// UDC 객체의 ID는 udc1
  
udc1.getUdcHome();    
// (실행 결과) /a/b/


getUserData(
									  key
										)
							

setUserData로 웹스퀘어 컴포넌트에 설정한 key의 value 혹은 사용자가 직접 페이지 소스(XML)에 속성으로 정의한 value를 반환. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


keyStringY데이터의 key




Return

typedescription


Stringkey에 해당하는 value


Sample
// Input 컴포넌트에 사용자 속성(setTest)을 설정하는 예제


// 위에서 설정한 setTest을 값을 반환하는 예제. 
input1.getUserData("setTest");
// (반환 값) "Hello"

//setUserData를 통해 'valueTest'(key)와 'WebSquare'(data)로 설정하는 예제. 
input1.setUserData("valueTest","WebSquare");

// 위에서 설정한 setTest을 값을 반환하는 예제. 
input1.getUserData("WebSquare");
// (반환 값) "WebSquare"


hasClass(
									  className
										)
							

웹스퀘어 컴포넌트가 특정 class를 포함하고 있는지 확인. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


classNameStringY검색할 class 이름




Return

typedescription


Booleanclass의 포함 여부


Sample
// inputBox 컴포넌트에 class가 속성으로 직접 정의됨.

        
var returnValue = input1.hasClass("tmpInputClass");
// (반환 값) true


hide(
									  
										)
							

웹스퀘어 컴포넌트를 화면에서 숨김. (웹스퀘어 컴포넌트 공통.)display:none; 및 visibility:hidden; CSS를 적용.


Sample
// (예제) 컴포넌트를 숨김
componentId.hide();


removeClass(
									  className
										)
							

웹스퀘어 컴포넌트에서 class를 삭제. (웹스퀘어 컴포넌트 공통.)기본적으로 addClass를 통해 추가된 class만 삭제 가능. 컴포넌트의 속성으로 직접 정의된 class를 삭제하기 위해서는 config.xml 파일에 아래 설정을 추가해야 함. 
 // config.xml 파일에 아래 설정 추가 
 <removeDefaultClass value="true" />


Parameter

nametyperequireddescription


classNameStringY삭제 할 class명



Sample
// inputBox의 속성으로 class가 직접 정의된 경우,


// config.xml 파일에 아래 항목을 추가.

    <removeDefaultClass value="true" />


// removeClass를 통해 삭제 가능. 
input1.removeClass("tmpInputClass");


setDisabled(
									  disabled
										)
							

웹스퀘어 컴포넌트의 disabled 속성을 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


disabledBooleanYdisabled 상태. 
true: disabled 속성 활성화
false: disabled 속성 비활성화



Sample
// 컴포넌트의 disabled 속성을 활성화.
componentId.setDisabled(true);


setEventPause(
									  evList
									       , 
									       flag
										)
							

지정한 이벤트를 중단함. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


evListStringN중단할 이벤트 목록. (null을 지정할 경우 해당 컴포넌트의 모든 사용자 이벤트가 중단되거나 중단 해제됨.)


flagBooleanY이벤트 중단 여부. 
true: 중단
false: 중단 해제.



Sample
// (예제 1)
// onclick 이벤트를 중단. 
input1.setEventPause("onclick", true); 

// (예제 2)
// onfocus 및 onblur 이벤트의 중단을 해제.
input1.setEventPause("onfocus,onblur", false); 

// (예제 3)
// input1에 등록된 모든 사용자 이벤트를 중단.
input1.setEventPause(null, true);


setInitStyle(
									  property
										)
							

컴포넌트의 초기 스타일을 복구한다. initStyle 속성을 true로 설정한 컴포넌트만 유효하게 동작한다 (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


propertyStringNCSS 속성 (지정하지 않으면 모든 속성의 초기 값으로 복구.)



Sample
// (예제)
group1.setInitStyle();


setOpacity(
									  value
										)
							

웹스퀘어 컴포넌트의 불투명도를 설정. (웹스퀘어 컴포넌트 공통.)엔진 내부적으로 CSS 속성인 opacity(불투명도)를 설정.


Parameter

nametyperequireddescription


valueNumberYOpacity 값 (0과 1 사이의 실수)



Sample
// (예제) 불투명도를 0.45로 설정
componentId.setOpacity(0.45);


setPosition(
									  left
									       , 
									       top
									       , 
									       mode
										)
							

웹스퀘어 컴포넌트의 위치(left, top)를 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


leftNumberY설정할 left 위치 값 또는 null.


topNumberY설정할 top 위치 값 또는 null.


modeStringN위치 설정 방법. [default: absolute, delta] 
absolute: 입력된 값을 위치로 설정.
delta: 현재 위치에 입력된 left 및 top 값을 추가.



Sample
// (예제) 컴포넌트의 top만 100px로 설정.
componentId.setPosition(null, 100);


setReadOnly(
									  readOnly
										)
							

웹스퀘어 컴포넌트의 readOnly 속성을 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


readOnlyBooleanYreadOnly 속성 활성화 여부. ( "true" : 활성화, "false" : 비활성화)



Sample
// 컴포넌트의 readOnly 속성을 true로 설정하는 예.
componentId.setReadOnly(true);


setScale(
									  scale
										)
							

지도의 배율을 설정하는 함수


Parameter

nametyperequireddescription


scaleFloatY설정할 배율값 (0보다 큰 float값으로 설정한다.)



Sample
 mapchart1.setScale(0.8) // 지도의 배율을 원래 크기의 0.8배로 조절한다.


setSize(
									  width
									       , 
									       height
										)
							

웹스퀘어 컴포넌트의 크기(width, height)를 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


widthNumberY새로 설정할 컴포넌트의 width 값 또는 null


heightNumberY새로 설정할 컴포넌트의 height 값 또는 null



Sample
// (예제) 컴포넌트의 height만 100px로 설정.
componentId.setSize(null,100);


setStyle(
									  propertyName
									       , 
									       value
										)
							

웹스퀘어 컴포넌트의 CSS 속성을 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


propertyNameStringY설정할 CSS 속성


valueStringY해당 CSS 속성에 적용할 값



Sample
// (예제 1) 컴포넌트의 width를 200px로 설정
componentId.setStyle("width", "200px");

// (예제 2) 배경색을 olive로 변경
componentId.setStyle("background-color","olive");


setUserData(
									  key
									       , 
									       value
										)
							

웹스퀘어 컴포넌트에 임의의 데이터를 설정. (웹스퀘어 컴포넌트 공통.) 컴포넌트에 설정 가능한 key를 입력해야 함. 설정 가능한 key가 아닌 경우, 해당 내용이 로그에 출력됨.


Parameter

nametyperequireddescription


keyStringY설정할 데이터의 key


valueStringY설정한 데이터의 value



Sample
// 컴포넌트에 'data'라는 key로 'WebSquare'라는 value를 설정하는 예제.

componentId.setUserData("data", "WebSquare");

// 컴포넌트에 설정이 불가능한 key를 임력할 경우, key 설정이 불가능. 
 
componentId.setUserData("title", "WebSquare");
// 아래와 같이 로그가 출력됨. 
// !!!WARNING - [title] can't be defined as UserData.


show(
									  displayType
										)
							

웹스퀘어 컴포넌트를 화면에 표시. (웹스퀘어 컴포넌트 공통.)CSS display 속성을 주어진 값으로 설정하고 "visibility: show;"를 적용.


Parameter

nametyperequireddescription


displayTypeStringN적용할 CSS display 속성의 값.   
block : display: block;을 적용. (기본 값)
inline : display: inline;을 적용.
none : display: none;을 적용.
"" : show 수행 이전의 display 속성 값으로 복구.



Sample
// (예제) display: block; CSS를 설정.
componentId.show();  

// (예제) 위제 설정한 display 속성 값을 취소하고 원래의 display 값을 복구.
componentId.show("");


toggleClass(
									  className
										)
							

웹스퀘어 컴포넌트에서 특정 class를 제거하거나 추가. (웹스퀘어 컴포넌트 공통.)웹스퀘어 컴포넌트가 파라미터로 주어진 class를 포함한 경우, 해당 class를 제거. 웹스퀘어 컴포넌트에 파라미터로 주어진 class가 없는 경우, 해당 class를 추가. 기본적으로 addClass를 통해 추가된 class만 삭제 가능. 웹스퀘어 컴포넌트의 속성으로 직접 정의된 class를 삭제하기 위해서는 config.xml 파일에 아래 설정을 추가. 
 // config.xml 파일에 아래 설정 추가
 <removeDefaultClass value="true" />


Parameter

nametyperequireddescription


classNameStringY추가/삭제할 class



Sample
// inputBox 컴포넌트에 class가 속성으로 직접 정의됨.


//config.xml 파일에 아래를 추가.

    <removeDefaultClass value="true" />


// tmpInputClass class를 삭제.
input1.toggleClass("tmpInputClass");

// (위에서 삭제된) tmpInputClass class를 다시 추가.
input1.toggleClass("tmpInputClass");


trigger(
									  type
									       , 
									       array
										)
							

컴포넌트에서 특정 이벤트를 발생시킴. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


typeStringY발생시킬 이벤트


arrayArrayN이벤트 핸들러에 전달할 파라미터 배열



Sample
// (예제 1)
// input1 컴포넌트에 onclick 이벤트를 발생시킴.
input1.trigger("onclick");

// (예제 2)
// input1에 onviewchange 이벤트를 발생시키고 핸들러 함수에 (1,2) 인자를 전달하여 호출.
input1.trigger("onviewchange", [1,2]);


unbind(
									  type
									       , 
									       function
										)
							

컴포넌트에서 이벤트를 제거. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


typeStringN제거할 이벤트. (생략할 경우 해당 컴포넌트의 모든 이벤트를 제거.)


functionFunctionN제거할 이벤트의 핸들러 함수. (생략할 경우 해당 위에 지정한 이벤트에 등록된 모든 핸들러 함수를 제거.)



Sample
// (예제 1)
// input1에 등록된 모든 이벤트를 제거.
input1.unbind();

// (예제 2)
// input1의 onviewchange 이벤트에 대한 모든 핸들러 함수를 제거.
input1.unbind("onviewchange");

// (예제 3)
// input1의 onviewchange 이벤트에 대한 func1 이벤트 핸들러 함수를 제거.
input1.unbind("onviewchange", func1);


visible(
									  flag
										)
							

[deprecated] show/hide 혹은 setStyle 사용을 권장.엔진 내부적으로 CSS visibility 속성을 설정.


Parameter

nametyperequireddescription


flagBooleanY설정할 CSS visibility 속성 값 
true : visibility: visible;
false : visibility: hidden;










Copyrights Inswave Systems Co., Ltd.



