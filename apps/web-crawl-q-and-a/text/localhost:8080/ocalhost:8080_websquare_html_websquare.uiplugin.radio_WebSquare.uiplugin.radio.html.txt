


WebSquare.uiplugin.radio 









PropertyEventMethod찾아보기

WebSquare.uiplugin.radio - 5.0_5.4826M.20230213.171915





라디오. HTML <input> 태그의 type="radio"와 동일. 
 단일 선택만 지원. 
 브라우저에 표현 될 때는 <input> 대신 <div> 태그를 최상위에 두고 하위에 복합 태그를 사용함에 주의. 
 <radio> 태그를 사용하려면 별도의 설정이 필요함.

Type


uiplugin

Property Summary




appearance

선택 항목 표현 방식



class

HTML의 class 속성과 동일한 기능을 제공. CSS 파일이나 style 블럭에 정의한 여러 개의 class를 공백으로 구분하여 적용 가능.



cols

선택 항목을 표시할 열의 수



disabled

컴포넌트 비활성 상태



displaymessage

validate(); 검증 결과가 실패일 경우, 메세지를 표시. [default: false, true] 



enableColumn

선택 항목 목록에서 특정 항목을 disable 처리하는 기능. disable 처리된 목록은 보이기만 할 뿐 선택이 되지 않음.



enableColumnFalseValue

enableColumn 사용 시 목록에서 특정 항목을 감추기 위한 조건에 해당하는 값



escape

<>&"를 HTML Escape 문자로 변환하여 화면에 표시



id

컴포넌트 ID. 



ignoreTabIndex

Tab 키를 통한 이동시 포커스 무시



invalidMessage

displaymessage="true"이고 validate(); 검증 결과가 실패인 경우 표시되는 메시지.



invalidMessageFunc

validate(); 검증 결과가 실패일 경우, 결과 메시지를 동적으로 표시할 사용자 정의 함수 이름.  



itemTagname

renderType이 "radiogroup"일 때, 선택 항목의 tagname



mandatory

필수 선택 적용 여부.



name

항목의 group이 되는 이름으로 HTML의 name 속성과 동일.



nameScope

Radio 컴포넌트가 scope="true"인 WFrame 내부에 있을 경우, name 값에 WFrame prefix를 자동으로 붙일지에 대한 옵션



nextTabID

Tab 키로 이동할 경우, Tab 키를 누를 때 선택되는 컴포넌트의 ID



ref

DataCollection의 value 경로. DataCollection의 value와 웹스퀘어 컴포넌트를 바인딩할 때 사용. 



renderType

브라우저에 표현될 레이아웃 구조



rows

선택 항목을 표시할 열의 수



selectedIndex

초기 선택될 항목의 인덱스. 하드 코딩되어있거나 DataList에 데이터가 미리 정의된 경우에만 동작. 



tabIndex

Tab 키를 이용하여 포커스를 변경할 경우, 해당 컴포넌트에 포커스를 주는 순서. 



tagname

renderType="radiogroup"일 때, 렌더링 될 객체의 태그 이름



title

HTML의 title 속성과 동일



tooltip

사용자가 컴포넌트에 마우스-오버할 때 표시되는 텍스트



tooltipClass

툴팁에 적용할 스타일 class



tooltipDisplay

사용자가 선택한 값에 대한 툴팁 표시 여부



tooltipFormatter

tooltipDisplay="true"인 경우, 툴팁 내용을 변경할 사용자 함수명.



tooltipItemLabel

tooltipDisplay = "true"인 경우 표시할 툴팁의 텍스트. 



tooltipLocaleRef

tooltip 문구가 정의되어 있을 경우 클라이언트 다국어 적용시 툴팁에 출력하는 텍스트의 key.



tooltipShowAlways

텍스트 길이에 상관 없이 마우스 오버시 툴팁을 항상 표시할 것인지의 여부



tooltipTime

툴팁 표시 시간. (단위: 초)



useItemLocale

아이템 목록 다국어 사용 여부



useLocale

다국어 사용.



useRadioTitle

웹 접근성을 위해 radio의 항목(버튼)에 title의 표시 유무



userData1

사용자 정의 데이터 속성



userData2

사용자 정의 데이터 속성



userData3

사용자 정의 데이터 속성



validator

유효성 체크 함수 이름.



value

renderType이 "native"일 때, value 값으로 사용될 문자열



visibleColumn

선택 항목 목록에서 특정 항목을 감추는 기능. 



visibleColumnFalseValue

visibleColumn 사용 시 목록에서 특정 항목을 감추기 위한 조건에 해당하는 값



Event Summary




onchange

사용자가 항목을 선택/변경하거나 API를 이용하여 value를 설정할 경우 발생. 



onlabelclick

label이 클릭된 경우 발생



onradioclick

Radio가 클릭된 경우 발생. label이 클릭된 경우에는 발생하지 않음. 



onviewchange

키보드 또는 마우스 조작을 통해 값이 변경된 경우 발생.


Method Summary




addClass(
									  className
										)
								

컴포넌트에 CSS class를 추가



addItem(
									  value
									       , 
									       label
									       , 
									       index
										)
								

선택 항목을 추가



bind(
									  eventType
									       , 
									       function
										)
								

컴포넌트에 이벤트와 핸들러 함수를 동적으로 할당



changeClass(
									  oldClassName
									       , 
									       newClassName
										)
								

웹스퀘어 컴포넌트의 class를 변경. (웹스퀘어 컴포넌트 공통.) 



click(
									  index
										)
								

index에 해당하는 항목에 클릭 이벤트를 발생시켜 해당 항목을 선택/해제.



deleteItem(
									  index
										)
								

주어진 index에 해당하는 항목을 삭제



focus(
									  
										)
								

컴포넌트로 포커스를 이동



getDisabled(
									  
										)
								

현재 웹스퀘어 컴포넌트에 설정된 disabled 속성 값을 반환



getGenerator(
									  
										)
								

컴포넌트가 Generator에 의해 생성된 경우, 자신을 생성한 부모 Generator 객체를 반환



getID(
									  
										)
								

웹스퀘어 컴포넌트의 ID를 반환



getInitStyle(
									  CSS
										)
								

컴포넌트의 초기 스타일을 반환



getItemCount(
									  
										)
								

선택 항목 개수를 반환



getItemDisabled(
									  index
										)
								

주어진 index에 해당하는 항목의 disabled 설정을 반환



getOpacity(
									  
										)
								

웹스퀘어 컴포넌트의 불투명도를 반환. (웹스퀘어 컴포넌트 공통.)



getOriginalID(
									  
										)
								

웹스퀘어 컴포넌트의 originalID를 반환. (웹스퀘어 컴포넌트 공통.)



getPluginName(
									  
										)
								

웹스퀘어 컴포넌트의 이름(pluginName)을 반환



getPosition(
									  positionName
										)
								

웹스퀘어 컴포넌트의 위치(left, top)를 반환. (웹스퀘어 컴포넌트 공통.) 



getScope(
									  
										)
								

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)  



getScopeWindow(
									  
										)
								

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)



getSelectedIndex(
									  
										)
								

선택된 항목의 인덱스를 반환



getSize(
									  sizeName
										)
								

웹스퀘어 컴포넌트의 크기(width, height)를 반환. (웹스퀘어 컴포넌트 공통.) 



getStyle(
									  propertyName
										)
								

웹스퀘어 컴포넌트의 CSS 속성 값을 반환



getStyleValue(
									  style
										)
								

[deprecated]



getText(
									  
										)
								

선택 된 항목의 label을 반환한다



getTitle(
									  
										)
								

컴포넌트의 title 속성 값을 반환



getUdcHome(
									  
										)
								

UDC 객체가 자신을 정의한 UDC 파일 경로를 파일명을 포함해서 반환. (웹스퀘어 컴포넌트 공통.)



getUdcRoot(
									  
										)
								

UDC 객체가 자신을 정의한  UDC 파일 경로를 반환. (웹스퀘어 컴포넌트 공통.)



getUserData(
									  key
										)
								

setUserData로 웹스퀘어 컴포넌트에 설정한 key의 value 혹은 사용자가 직접 페이지 소스(XML)에 속성으로 정의한 value를 반환



getValue(
									  
										)
								

선택 된 항목의 value를 반환한다



hasClass(
									  className
										)
								

웹스퀘어 컴포넌트가 특정 class를 포함하고 있는지 확인



hide(
									  
										)
								

웹스퀘어 컴포넌트를 화면에서 숨김. (웹스퀘어 컴포넌트 공통.)



removeAll(
									  
										)
								

모든 선택 항목을 삭제



removeClass(
									  className
										)
								

웹스퀘어 컴포넌트에서 class를 삭제. (웹스퀘어 컴포넌트 공통.)



reset(
									  
										)
								

항목의 선택을 해제



setDisabled(
									  disabled
										)
								

컴포넌트의 disabled 속성을 설정



setEnableColumn(
									  columnId
									       , 
									       enableColumnFalseValue
										)
								

enableColumn 속성을 동적으로 설정.



setEventPause(
									  evList
									       , 
									       flag
										)
								

지정한 이벤트를 중단함



setInitStyle(
									  property
										)
								

컴포넌트의 초기 스타일을 복구한다



setItemDisabled(
									  index
									       , 
									       flag
										)
								

주어진 index에 해당하는 항목의 disabled 속성을 설정



setNodeSet(
									  nodeset
									       , 
									       label
									       , 
									       value
										)
								

선택 항목 목록을 설정. 



setOpacity(
									  value
										)
								

웹스퀘어 컴포넌트의 불투명도를 설정. (웹스퀘어 컴포넌트 공통.)



setPosition(
									  left
									       , 
									       top
									       , 
									       mode
										)
								

웹스퀘어 컴포넌트의 위치(left, top)를 설정



setRef(
									  path
										)
								

ref 속성을 설정. 



setSelectedIndex(
									  index
										)
								

주어진 인덱스에 해당하는 항목을 선택/해제(토글링)하는 작업을 수행



setSize(
									  width
									       , 
									       height
										)
								

웹스퀘어 컴포넌트의 크기(width, height)를 설정



setStyle(
									  propertyName
									       , 
									       value
										)
								

웹스퀘어 컴포넌트의 CSS 속성을 설정



setTitle(
									  title
										)
								

컴포넌트의 title 속성을 설정



setUserData(
									  key
									       , 
									       value
										)
								

웹스퀘어 컴포넌트에 임의의 데이터를 설정. (웹스퀘어 컴포넌트 공통.) 



setValue(
									  value
										)
								

파라메터로 넘어온 값에 해당하는 선택 항목을 선택.  



setVisibleColumn(
									  columnId
									       , 
									       visibleColumnFalseValue
										)
								

visibleColumn 속성을 동적으로 설정.



show(
									  displayType
										)
								

웹스퀘어 컴포넌트를 화면에 표시. (웹스퀘어 컴포넌트 공통.)



toggleClass(
									  className
										)
								

웹스퀘어 컴포넌트에서 특정 class를 제거하거나 추가. (웹스퀘어 컴포넌트 공통.)



trigger(
									  type
									       , 
									       array
										)
								

컴포넌트에서 특정 이벤트를 발생시킴



unbind(
									  type
									       , 
									       function
										)
								

컴포넌트에서 이벤트를 제거



unbindRef(
									  
										)
								

ref 바인딩을 해제



validate(
									  
										)
								

컴포넌트의 유효성 관련 속성값을 통해 유효성 검사를 실행



validateObject(
									  
										)
								

컴포넌트의 유효성 관련 속성값을 통해 유효성 검사를 실행



visible(
									  flag
										)
								

[deprecated] 



Property Detail




appearance

선택 항목 표현 방식.
(옵션 설명)
"minimal" : 선택 항목을 한 개씩 표시. 사용자는 방향키를 이용하여 선택 항목 변경 가능.  
"full" (기본 값) : 전체 선택 항목을 표시


class

HTML의 class 속성과 동일한 기능을 제공. CSS 파일이나 style 블럭에 정의한 여러 개의 class를 공백으로 구분하여 적용 가능.Engine 내부에서 각 컴포넌트 별로 지정된 class를 적용하나, class 속성을 이용하여 컴포넌트의 CSS를 제어 가능.


cols

선택 항목을 표시할 열의 수. "2"로 정의할 경우, 2열에 걸쳐 선택 항목이 표시됨.


disabled

컴포넌트 비활성 상태. [default: false, true]  
(옵션 설명)
 "false" (기본 값) : 컴포넌트를 비활성화 하지 않음. 
 "true" : 컴포넌트를 비활성화 함.


displaymessage

validate(); 검증 결과가 실패일 경우, 메세지를 표시. [default: false, true] 기본적으로 엔진 내부에 정의된 메시지를 표시. 단, invalidMessage 속성이 정의된 경우, 해당 속성으로 정의된 메시지를 표시. 
(옵션 설명)
 "false" (기본 값) :  결과 메시지를 표시하지 않음. 
 "true" : 결과 메시지를 표시. 

(관련 API)
 validate(); (함수)
 invalidMessage (속성)


enableColumn

선택 항목 목록에서 특정 항목을 disable 처리하는 기능. disable 처리된 목록은 보이기만 할 뿐 선택이 되지 않음.선택 항목 목록이 DataList와 바인딩된 경우, disable 여부를 알려주는 컬럼을 지정. disable 여부를 알려주는 컬럼의 값이 enableColumnFalseValue 속성에 지정한 값과 같은 경우, 해당 행은 disable 처리됨.selectedIndex는 영향을 받지 않음. 즉 목록에 보이는 인덱스가 아닌 전체 인덱스를 기준으로 동작.해당 속성은 setEnableColumn 함수를 통해 동적으로 설정 가능. 
(예제) 
 radio1이 dataList1과 바인딩되어있고,
 enableColumn="col3" 및 enableColumnFalseValue="false" 설정 사용.

 아래를 실행.  
 dataList1.getCellData(row, "col3");
 위의 결과로 false가 반환될 경우, 해당 행은 목록에서 disable 처리됨.

(관련 API)
 enableColumnFalseValue (속성)
 setenableColumn (함수)


enableColumnFalseValue

enableColumn 사용 시 목록에서 특정 항목을 감추기 위한 조건에 해당하는 값. 
(옵션 설명)
 기본 값: "0", "false", "FALSE", 혹은 "F"

(예시)
 아래를 실행. 
 dataList.getCellData(row, enableColumn);
 위의 결과 값이 "0, false, FALSE, F" 중 하나에 해당되면, 해당 행은 목록에서 disable 처리됨.
 
(관련 속성)
 enableColumn


escape

<>&"를 HTML Escape 문자로 변환하여 화면에 표시.
(옵션 설명)
 "true" (기본 값) : Escape 문자로 변환하지 않음.
 "false" : Escape 문자로 변환하여 화면에 표시.


id

컴포넌트 ID. 컴포넌트 ID는 전역 객체로 할당됨. 각 컴포넌트 ID를 통해 Script에서 해당 컴포넌트에 접근 가능.


ignoreTabIndex

Tab 키를 통한 이동시 포커스 무시.
(옵션 설명)
 "true" 포커스를 무시. 
 "false" (기본 값) 포커스를 무시하지 않음.


invalidMessage

displaymessage="true"이고 validate(); 검증 결과가 실패인 경우 표시되는 메시지.invalidMessageFunc 속성과 동시 적용 불가.
(관련 API)
 validate();
 displaymessage="true"

(!주의!)
 invalidMessageFunc 속성과 동시 적용 불가.


invalidMessageFunc

validate(); 검증 결과가 실패일 경우, 결과 메시지를 동적으로 표시할 사용자 정의 함수 이름.  invalidMessage 속성과 동시 적용 불가. 
// (사용자 정의 함수 예)
// 아래 type에 대한 검증 실패 시, 메시지를 동적으로 생성하는 예.
// mandatory
 scwin.fn_msg = function(){ 
 var invalidType = this.getType();  // invalid type 
 if (invalidType == "mandatory")
    { message = "You forgot selecting a city!"; }
    alert(message);
    return message;
 }  
(관련 API)
 validate();
 displaymessage="true"

(!주의!)
 invalidMessage 속성과 동시 적용 불가.


itemTagname

renderType이 "radiogroup"일 때, 선택 항목의 tagname.
(관련 속성)
 renderType="radiogroup"


mandatory

필수 선택 적용 여부.validate 함수를 통해 입력값을 검증할 경우 필수 입력을 확인. 
(옵션 설명)
 "false" (기본 값) : 필수 선택 적용하지 않음. 
 "true" : 필수 선택 적용.

(관련 함수)
 validate();


name

항목의 group이 되는 이름으로 HTML의 name 속성과 동일.생략할 경우, Engine에서 자동으로 생성하여 할당.


nameScope

Radio 컴포넌트가 scope="true"인 WFrame 내부에 있을 경우, name 값에 WFrame prefix를 자동으로 붙일지에 대한 옵션. 
(!주의!)
 하위호환위해 nameScope="true" 사용을 권장.


nextTabID

Tab 키로 이동할 경우, Tab 키를 누를 때 선택되는 컴포넌트의 ID.


ref

DataCollection의 value 경로. DataCollection의 value와 웹스퀘어 컴포넌트를 바인딩할 때 사용. "data:" prefix를 추가하여 data:[DataCollection ID].[Key id 또는 Column id] 형태로 지정해야 함. DataList와 바인딩된 경우, GridView에서 선택된 행의 값이 바인딩됨.
// (작성 예)
 data:dataMap1.dept

// Instance Data와 연동 할 경우 연동 할 XML 데이터의 XPath를 명시해야 함. 
// (작성 예)
 res/userInfo/dept/@value


renderType

브라우저에 표현될 레이아웃 구조. [default: table, native, radiogroup] 
(옵션 설명)
 "table" (기본 값) : <input> 태그를 사용하지 않고, 최상위 <div> 태그 하위에 table 태그를 사용하여 항목을 표현. 
 "native" : <input type="radio">만 생성. TextBox 컴포넌트를 이용하여 <label> 태그를 직접 생성해야하며, 웹접근성 준수를 위해 title 속성을 필수로 생성해야 함.
 "radiogroup" : 레이아웃을 위한 Tag를 개발자가 직접 결정하는 형태로 기본적으로 <div> 태그 이용하여 구성되며 tagname과 itemTagname 속성을 이용하여 최상위 태그와 항목별 태그를 설정 가능. (세부 설정은 웹접근성 가이드 문서 참조)


rows

선택 항목을 표시할 열의 수. "2"로 정의할 경우, 2행에 걸쳐 선택 항목이 표시됨.


selectedIndex

초기 선택될 항목의 인덱스. 하드 코딩되어있거나 DataList에 데이터가 미리 정의된 경우에만 동작. 초기 로딩에만 적용됨. 화면 로딩 이후 API를 이용하여 항목을 생성하거나, DataList에 데이터가 할당되는 경우에는 본 속성이 적용되지 않음.


tabIndex

Tab 키를 이용하여 포커스를 변경할 경우, 해당 컴포넌트에 포커스를 주는 순서. HTML의 tabindex 속성과 동일.


tagname

renderType="radiogroup"일 때, 렌더링 될 객체의 태그 이름.
(관련 속성)
 renderType="radiogroup"


title

HTML의 title 속성과 동일. 마우스 오버 시, title로 저장한 값이 툴팁으로 표시됨. 일반적으로 웹접근성 지원용으로 설정.


tooltip

사용자가 컴포넌트에 마우스-오버할 때 표시되는 텍스트. 웹스퀘어가 제공하는 툴팁으로, 컴포넌트의 추가 정보를 명시.


tooltipClass

툴팁에 적용할 스타일 class. 툴팁을 표시할 경우(tooltipDisplay="true") 유효. 
 (관련 속성)
 tooltipDisplay="true"


tooltipDisplay

사용자가 선택한 값에 대한 툴팁 표시 여부. [default: false, true] 
(옵션 설명)
 "true" : 툴팁 표시. 
 "false" (기본 값) : 툴팁을 표시하지 않음.


tooltipFormatter

tooltipDisplay="true"인 경우, 툴팁 내용을 변경할 사용자 함수명.사용자 함수는 label 및 index를 인자로 받아 툴팁으로 사용할 스트링을 반환. 
(관련 속성)
 tooltipDisplay = "true"


tooltipItemLabel

tooltipDisplay = "true"인 경우 표시할 툴팁의 텍스트. 예를 들어 tooltipItemLabel="This is tooltip"을 설정할 경우, "This is tooltip"이 사용자가 각 항목에 마우스-오버할 때 표시됨. 단, tooltipItemLabel = "" 인 경우, 선택 항목의 label 값이 툴팁으로 표시됨. 
(관련 속성)
 tooltipDisplay = "true"


tooltipLocaleRef

tooltip 문구가 정의되어 있을 경우 클라이언트 다국어 적용시 툴팁에 출력하는 텍스트의 key.key에 해당하는 텍스트가 없을 경우 "global_undefined"가 화면에 표시됨.


tooltipShowAlways

텍스트 길이에 상관 없이 마우스 오버시 툴팁을 항상 표시할 것인지의 여부. [default: false, true]
(관련 옵션)
 "false" (기본 값) : 텍스트가 잘리지 않은 경우, 마우스 오버시에 툴팁을 표시하지 않음. 
 "true" : 데이터가 공백("")인 경우를 제외하고는 항상 표시.


tooltipTime

툴팁 표시 시간. (단위: 초)툴팁을 표시할 경우(tooltipDisplay="true")에만 유효. 
 (관련 속성)
 tooltipDisplay="true"


useItemLocale

아이템 목록 다국어 사용 여부. [default: false, true]


useLocale

다국어 사용.(세부 내용은 다국어 설정 가이드 - 클라이언트 편을 참고.)
(옵션 설명)
 "false" (기본 값): 클라이언트의 다국어 key를 이용하지 않음. 
 "true" : 클라이언트의 다국어 key를 이용하여 다국어 지원.


useRadioTitle

웹 접근성을 위해 radio의 항목(버튼)에 title의 표시 유무. [default:true, false] 
(옵션 설명)
 "true" (기본 값) :  title을 자동으로 표시. 
 "false" : title을 표시하지 않음.


userData1

사용자 정의 데이터 속성. getUserData("userData1") API를 통해 설정한 값을 얻어올 수 있음. 
 // 속성 값 얻어오기 예시
 getUserData("userData1");


userData2

사용자 정의 데이터 속성. getUserData("userData2") API를 통해 설정한 값을 얻어올 수 있음. 
 // 속성 값 얻어오기 예시
 getUserData("userData2");


userData3

사용자 정의 데이터 속성. getUserData("userData3") API를 통해 설정한 값을 얻어올 수 있음. 
 // 속성 값 얻어오기 예시
 getUserData("userData3");


validator

유효성 체크 함수 이름.컴포넌트에서 blur가 발생하는 시점에 본 속성에 정의한 함수가 실행됨. 즉, onblur 이벤트 이전에 실행되며, blur가 발생하는 시점에 유효성을 확인하며 return을 통해 value를 변경 할 수 있음.
(관련 이벤트)
 onblur


value

renderType이 "native"일 때, value 값으로 사용될 문자열.
(관련 속성)
 renderType="native"


visibleColumn

선택 항목 목록에서 특정 항목을 감추는 기능. 선택 항목 목록이 DataList와 바인딩된 경우, 표시 여부를 알려주는 컬럼을 지정. 표시 여부를 알려주는 컬럼의 값이 visibleColumnFalseValue 속성에 지정한 값과 같은 경우, 해당 행은 선택 항목 목록에 표시되지 않음. selectedIndex는 영향을 받지 않음. 즉 목록에 보이는 인덱스가 아닌 전체 인덱스를 기준으로 동작.해당 속성은 setVisibleColumn 함수를 통해 동적으로 설정 가능. 
(예제) 
 radio가 dataList1과 바인딩되어있고,
 visibleColumn="col3" 및 visibleColumnFalseValue="false" 설정 사용.

 아래를 실행.  
 dataList1.getCellData(row, "col3");
 위의 결과로 false가 반환될 경우, 해당 행은 선택 항목 목록에 표시되지 않음. 

(관련 API)
 visibleColumnFalseValue (속성)
 setVisibleColumn (함수)


visibleColumnFalseValue

visibleColumn 사용 시 목록에서 특정 항목을 감추기 위한 조건에 해당하는 값. 
(옵션 설명)
 기본 값: "0", "false", "FALSE", 혹은 "F"

(예시)
 아래를 실행. 
 dataList.getCellData(row, visibleColumn);
 위의 결과 값이 "0, false, FALSE, F" 중 하나에 해당되면, 해당 행은 선택 항목 목록에 표시되지 않음.
 
(관련 속성)
 visibleColumn





Event Detail




onchange

사용자가 항목을 선택/변경하거나 API를 이용하여 value를 설정할 경우 발생. 사용자의 항목 선택만 제어할 때는 onviewchange 이벤트를 사용.

Parameter

nametypedescription


infoJSONoldValue, newValue를 포함한 JSON을 반환한다.
 info.oldValue : 이전 값
 info.newValue : 변경된 값


Sample
// 컴포넌트 태그 안에 event가 있는 경우
<![CDATA[
    var oldValue = info.oldValue;
    var newValue = info.newValue;
]]>


onlabelclick

label이 클릭된 경우 발생. 라디오 버튼이 클릭된 경우에는 발생하지 않음.

Parameter

nametypedescription


indexString:Y이벤트가 발생한 아이템(항목)의 index


valueString:Y이벤트가 발생한 아이템(항목)의 value


Sample
<![CDATA[
    var itemIndex = index;              // item의 index
    var itemValue = value;              // item의 value
    var compValue = radio1.getValue();  // 컴포넌트의 value
]]>


onradioclick

Radio가 클릭된 경우 발생. label이 클릭된 경우에는 발생하지 않음. 이벤트 핸들러는 this를 이용하여 컴포넌트에 접근이 가능. (예) this.getValue();

Parameter

nametypedescription


indexString:Y이벤트가 일어난 아이템(항목)의 index


valueString:Y이벤트가 일어난 아이템(항목)의 value


Sample
<![CDATA[
    var itemIndex = index;              // item의 index
    var itemValue = value;              // item의 value
    var compValue = this.getValue();    // 컴포넌트의 value
]]>


onviewchange

키보드 또는 마우스 조작을 통해 값이 변경된 경우 발생.스크립트를 통해 값이 변경된 경우에는 발생하지 않음. (native onchange 이벤트와 유사함.)

Parameter

nametypedescription


infoJSONindex, value를 포함한 오브젝트를 반환.
 info.index : 이벤트가 일어난 아이템(항목)의 index
 info.value : 이벤트가 일어난 아이템(항목)의 value


Sample
<![CDATA[
    var itemIndex = info.index;         // item의 index
    var itemValue = info.value;         // item의 value
    var compValue = this.getValue();    // 컴포넌트의 value
]]>



Method Detail




addClass(
									  className
										)
							

컴포넌트에 CSS class를 추가. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


classNameStringY추가할 class의 이름



Sample
// (예제)
// input1 컴포넌트에 oddClass라는 class를 추가    
input1.addClass("oddClass");


addItem(
									  value
									       , 
									       label
									       , 
									       index
										)
							

선택 항목을 추가. index를 지정하지 않으면 하위로 추가됨.


Parameter

nametyperequireddescription


valueStringY항목의 value


labelStringY항목의 label


indexNumberN항목의 index




Return

typedescription


Number추가된 항목의 index


Sample
// 아래와 같이 radio가 정의 된 경우



자택
0


직장
1




var returnValue = radio1.addItem( '3', '기타' );
// (반환 값) 2


bind(
									  eventType
									       , 
									       function
										)
							

컴포넌트에 이벤트와 핸들러 함수를 동적으로 할당. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


eventTypeStringY할당할 이벤트


functionFunctionY이벤트에 대한 핸들러 함수.



Sample
// (예제 1)
// input1의 onclick 이벤트에 대한 핸들러 함수를 직접 정의하여 할당. 
input1.bind("onclick", function(e){ alert(input1.getValue();}));

// (예제 2)
// 미리 commObj.ev_click 함수를 정의.
var commObj = {};
commObj.ev_click = function(e){
    alert("click :: "+this.id);
};

// input1 컴포넌트에 onclick 이벤트와 정의한 핸들러 함수를 동적으로 할당. 
input1.bind("onclick", commObj.ev_click );


changeClass(
									  oldClassName
									       , 
									       newClassName
										)
							

웹스퀘어 컴포넌트의 class를 변경. (웹스퀘어 컴포넌트 공통.) 기본적으로 addClass를 통해 추가된 class만 변경 가능. 웹스퀘어 컴포넌트의 class 속성에 직접 정의된 class를 삭제하려면 config.xml 파일에 아래 설정을 추가해야 함. 
// config.xml에 아래 설정을 추가. 
<removeDefaultClass value="true" />


Parameter

nametyperequireddescription


oldClassNameStringY변경할 class


newClassNameStringY새로 사용할 class



Sample
// inputBox 컴포넌트에 class가 속성으로 직접 정의됨.


// config.xml 파일에 아래를 추가.

    <removeDefaultClass value="true" />


// class를 변경 가능. 
// (tmpInputClass class를 tmpInputWarninClass로 변경.)
input1.changeClass("tmpInputClass","tmpInputWarninClass");


click(
									  index
										)
							

index에 해당하는 항목에 클릭 이벤트를 발생시켜 해당 항목을 선택/해제.클릭 관련 이벤트를 발생시킴.


Parameter

nametyperequireddescription


indexNumberY클릭 이벤트를 발생시킬 항목의 index



Sample
// 첫번째 항목에 click 이벤트를 발생시킨다.
// 첫번째 항목을 선택/해제
radio1.click(0);


deleteItem(
									  index
										)
							

주어진 index에 해당하는 항목을 삭제.


Parameter

nametyperequireddescription


indexNumberN삭제할 항목의 index




Return

typedescription


JSON삭제된 항목의 정보가 담긴 JSON
 label : 항목의 label
 value : 항목의 value


Sample
// 아래와 같이 radio가 정의 된 경우



자택
0


직장
1




var returnValue = radio1.deleteItem(0);
// (반환 값) {label: "자택", value: "0"}


focus(
									  
										)
							

컴포넌트로 포커스를 이동.


Sample
// (예제)
 radio1.focus();


getDisabled(
									  
										)
							

현재 웹스퀘어 컴포넌트에 설정된 disabled 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Booleandisabled 속성 값


Sample
// 컴포넌트의 disabled 속성 값 확인 예제
var returnValue = componentId.getDisabled();
// (반환 값 예시) false


getGenerator(
									  
										)
							

컴포넌트가 Generator에 의해 생성된 경우, 자신을 생성한 부모 Generator 객체를 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Object부모 Generator 객체


Sample
//부모 Generator가 자식으로 Trigger를 생성한 예제
  

// 아래 예제의 경우 trigger1을 클릭하면 generator1 객체가 console에 표시됨. 
 scwin.trigger1.onclick = function(){ console.log(this.getGenerator());} 



getID(
									  
										)
							

웹스퀘어 컴포넌트의 ID를 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


String웹스퀘어 컴포넌트 ID


Sample
// 동적으로 웹스퀘어 컴포넌트를 받을 경우, 아래와 같이 ID 확인 가능.
function fn_validCheck(tmpObj){
    var compID = tmpObj.getID();
}
// 위의 예제 에서 tmpObj가 "input1" ID를 가지고 있는 경우,
// (반환 값) "input1"


getInitStyle(
									  CSS
										)
							

컴포넌트의 초기 스타일을 반환. initStyle 속성을 true로 설정한 컴포넌트만 유효하게 동작한다.(웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


CSSStringN속성 (지정하지 않으면 모든 정보 출력)






getItemCount(
									  
										)
							

선택 항목 개수를 반환.



Return

typedescription


Number선택 항목 개수


Sample
// 총 2개의 항목이 있는 경우
var returnValue = radio1.getItemCount();
// (반환 값) 2


getItemDisabled(
									  index
										)
							

주어진 index에 해당하는 항목의 disabled 설정을 반환.


Parameter

nametyperequireddescription


indexNumberY항목의 index




Return

typedescription


Boolean항목의 비활성화 여부


Sample
// 첫번째 항목이 활성화 되어있고, 첫번째 항목의 활성화 여부를 반환 받는 예
    
var returnValue = radio1.getItemDisabled(0);
// (반환 값) false


getOpacity(
									  
										)
							

웹스퀘어 컴포넌트의 불투명도를 반환. (웹스퀘어 컴포넌트 공통.)엔진 내부적으로 CSS의 opacity 속성 값을 반환.



Return

typedescription


IntegerOpacity 값


Sample
// inputBox 컴포넌트에 opacity CSS를 적용.

        
// inputBox 컴포넌트의 opacity 값을 반환. 
var returnValue = input1.getOpacity(); 
// returnValue는 0 ~ 1 사이의 실수.
// (반환 값) "0.2"


getOriginalID(
									  
										)
							

웹스퀘어 컴포넌트의 originalID를 반환. (웹스퀘어 컴포넌트 공통.)originalID는 Scope 기능을 사용할 경우 존재. scope="true"인 WFrame를 사용할 경우, WFrame 내부의 컴포넌트 ID는 원래 사용자가 정의한 값(originalID) 앞에 prefix(wframeID + "_")가 추가되는 방식으로 변경됨.  originalID는 이 때, prefix가 추가되기 전 ID를 의미.



Return

typedescription


String컴포넌트의 originalID


Sample
// WFrame을 사용하는 다중 화면 구조 예시

// WFrame을 포함한 메인 화면 (main.xml) 
 

// 메인 화면 WFrame에 연결되는 소스 화면 (text.xml)


// text.xml 화면의 내부 스크립트에서 ID 및 originalID 확인하는 예제.
// getID 실행 
textbox1.getID(); // 실행 결과는 "wframe1_textbox1"
 
// getOriginalID 실행 
textbox1.getOriginalID(); // 실행 결과는 "textbox1"


getPluginName(
									  
										)
							

웹스퀘어 컴포넌트의 이름(pluginName)을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


String웹스퀘어 컴포넌트의 이름 (pluginName)


Sample
// 아래와 같이 공통 함수에서 동적으로 웹스퀘어 객체를 받는 경우, 컴포넌트 종류에 따른 분기 처리가 가능.
var commObj = {};

commObj.fn_makeReqData = function(tmpObj){
    var tmpID = tmpObj.getID(); // 컴포넌트 ID
    var tmpCompType = tmpObj.getPluginName();   // 컴포넌트 이름

    if(tmpCompType == "input"){
        //..로직..
    }else if(tmpCompType == "gridView"){
        //..로직 ..
    }else{
        //..로직..
    }
};


getPosition(
									  positionName
										)
							

웹스퀘어 컴포넌트의 위치(left, top)를 반환. (웹스퀘어 컴포넌트 공통.) 위치 값이 %로 설정된 경우, 픽셀로 변환된 값을 반환.


Parameter

nametyperequireddescription


positionNameStringY[left, top] 위치 종류




Return

typedescription


Number컴포넌트의 위치 값


Sample
// 아래와 같이 input 컴포넌트에 CSS 속성 margin이 적용된 경우,


// (예제) 위의 inputBox 컴포넌트의 top 값을 확인     
var returnValue = input1.getPosition("top"); 

// 픽셀 단위의 위치 값이 반환됨.

// (반환 값) 10


getScope(
									  
										)
							

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)  scope="true"인 WFrame의 자식 컴포넌트가 아닌 경우, null을 반환.



Return

typedescription


ObjectWFrame 객체 또는 null


Sample
// (예제)
// 메인페이지에 wframe1이 있고, wframe1 내부에 wframe11이 존재. 
// 그리고, wframe11 내부에 textbox1이 존재.
   
textbox1.getScope(); 
// (반환 값) wframe11 객체


getScopeWindow(
									  
										)
							

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)scope="true"인 WFrame의 자식 컴포넌트가 아닌 경우, 전역 window 객체를 반환.



Return

typedescription


ObjectWFrame 객체의 scope 객체 또는 전역 window 객체


Sample
// (예제)
// 메인페이지에 wframe1이 있고, wframe1 내부에 wframe11이 존재. 
// 그리고, wframe11 내부에 textbox1이 존재.
   
var scope = textbox1.getScopeWindow();
scope.wframe11 === textbox1.getScope(); // true


getSelectedIndex(
									  
										)
							

선택된 항목의 인덱스를 반환.



Return

typedescription


Number선택 된 항목의 인덱스


Sample
// 첫번째 항목이 선택된 경우,
var returnValue = radio1.getSelectedIndex(); 
// (반환 값) 0


getSize(
									  sizeName
										)
							

웹스퀘어 컴포넌트의 크기(width, height)를 반환. (웹스퀘어 컴포넌트 공통.) %로 설정된 경우, 픽셀로 변환된 값을 반환.


Parameter

nametyperequireddescription


sizeNameStringY크기 값의 종류. sizeName 별 계산 방법은 아래 표를 참고. 
height : element.clientHeight
innerHeight : element.clientHeight + padding
outerHeight : element.clientHeight + padding + border
outerMarginHeight : element.clientHeight + padding + border + margin
width : element.clientWidth
innerWidth : element.clientWidth + padding
outerWidth : element.clientWidth + padding + border
outerMarginWidth : element.clientWidth + padding + border + margin




Return

typedescription


Number컴포넌트의 크기 값


Sample
var returnValue = componentId.getSize("width");
// (반환 예) 100 
// 픽셀 단위의 크기 값이 반환됨. 
// %로 설정된 경우, 픽셀로 변환된 값이 반환됨.


getStyle(
									  propertyName
										)
							

웹스퀘어 컴포넌트의 CSS 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


propertyNameStringY반환할 CSS 속성




Return

typedescription


StringCSS 속성 값


Sample
//아래와 같이 input 컴포넌트가 정의 된 경우


// (예제) 위의 inputBox 컴포넌트의 width 값을 확인   
var returnValue = input1.getStyle("width");

// (반환 값) "144px"


getStyleValue(
									  style
										)
							

[deprecated]getStyle 사용 권장.웹스퀘어 컴포넌트에 적용된 해당 CSS 속성 값을 반환.


Parameter

nametyperequireddescription


styleStringY반환하려는 CSS 속성.




Return

typedescription


Stringstyle 해당 CSS 속성 값 (색을 반환하는 경우, HexCode로 반환됨.)





getText(
									  
										)
							

선택 된 항목의 label을 반환한다.



Return

typedescription


String선택 된 항목의 label


Sample
//아래와 같이 radio가 정의되고 자택이 선택 된 경우



자택
0


직장
1




var returnValue = radio1.getText();
//return 예시 ) "자택"


getTitle(
									  
										)
							

컴포넌트의 title 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Stringtitle 속성 값.


Sample
// 아래와 같이 input 컴포넌트의 title 속성이 "이름 입력"으로 정의된 경우


var tmpTitle = input1.getTitle();
// (반환 값 예시) "이름 입력"


getUdcHome(
									  
										)
							

UDC 객체가 자신을 정의한 UDC 파일 경로를 파일명을 포함해서 반환. (웹스퀘어 컴포넌트 공통.)파일명은 마지막 .xml까지 포함. .xml을 제외한 경로는 getUdcRoot를 사용해서 반환.UDC 객체가 아닌 컴포넌트에서 호출된 경우에는 undefined가 반환됨.



Return

typedescription


StringUDC 파일 경로. (UDC가 아닌 경우, undefined가 반환됨.)


Sample
// 예제
// UDC 파일 경로는 /a/b/udc.xml 
// 화면 XML은  /a/c/main.xml 
// UDC 객체의 ID는 udc1
  
udc1.getUdcHome(); 
// (실행 결과) /a/b/udc.xml


getUdcRoot(
									  
										)
							

UDC 객체가 자신을 정의한  UDC 파일 경로를 반환. (웹스퀘어 컴포넌트 공통.)파일명을 포함하지 않음. 파일명을 포함한 경로는 getUdcHome을 사용해서 반환.UDC 객체가 아닌 컴포넌트에서 호출된 경우에는 undefined가 반환됨.



Return

typedescription


StringUDC 파일 경로. (UDC가 아닌 경우, undefined가 반환됨.)


Sample
// 예제
// UDC 파일 경로는 /a/b/udc.xml 
// 화면 XML은  /a/c/main.xml 
// UDC 객체의 ID는 udc1
  
udc1.getUdcHome();    
// (실행 결과) /a/b/


getUserData(
									  key
										)
							

setUserData로 웹스퀘어 컴포넌트에 설정한 key의 value 혹은 사용자가 직접 페이지 소스(XML)에 속성으로 정의한 value를 반환. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


keyStringY데이터의 key




Return

typedescription


Stringkey에 해당하는 value


Sample
// Input 컴포넌트에 사용자 속성(setTest)을 설정하는 예제


// 위에서 설정한 setTest을 값을 반환하는 예제. 
input1.getUserData("setTest");
// (반환 값) "Hello"

//setUserData를 통해 'valueTest'(key)와 'WebSquare'(data)로 설정하는 예제. 
input1.setUserData("valueTest","WebSquare");

// 위에서 설정한 setTest을 값을 반환하는 예제. 
input1.getUserData("WebSquare");
// (반환 값) "WebSquare"


getValue(
									  
										)
							

선택 된 항목의 value를 반환한다.



Return

typedescription


String선택 된 항목의 value


Sample
//아래와 같이 radio가 정의되고 자택이 선택 된 경우



자택
0


직장
1




var returnValue = radio1.getValue();
//return 예시 ) "0"


hasClass(
									  className
										)
							

웹스퀘어 컴포넌트가 특정 class를 포함하고 있는지 확인. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


classNameStringY검색할 class 이름




Return

typedescription


Booleanclass의 포함 여부


Sample
// inputBox 컴포넌트에 class가 속성으로 직접 정의됨.

        
var returnValue = input1.hasClass("tmpInputClass");
// (반환 값) true


hide(
									  
										)
							

웹스퀘어 컴포넌트를 화면에서 숨김. (웹스퀘어 컴포넌트 공통.)display:none; 및 visibility:hidden; CSS를 적용.


Sample
// (예제) 컴포넌트를 숨김
componentId.hide();


removeAll(
									  
										)
							

모든 선택 항목을 삭제.


Sample
// (예제)
radio1.removeAll();


removeClass(
									  className
										)
							

웹스퀘어 컴포넌트에서 class를 삭제. (웹스퀘어 컴포넌트 공통.)기본적으로 addClass를 통해 추가된 class만 삭제 가능. 컴포넌트의 속성으로 직접 정의된 class를 삭제하기 위해서는 config.xml 파일에 아래 설정을 추가해야 함. 
 // config.xml 파일에 아래 설정 추가 
 <removeDefaultClass value="true" />


Parameter

nametyperequireddescription


classNameStringY삭제 할 class명



Sample
// inputBox의 속성으로 class가 직접 정의된 경우,


// config.xml 파일에 아래 항목을 추가.

    <removeDefaultClass value="true" />


// removeClass를 통해 삭제 가능. 
input1.removeClass("tmpInputClass");


reset(
									  
										)
							

항목의 선택을 해제.


Sample
// 선택 해제.
radio1.reset();


setDisabled(
									  disabled
										)
							

컴포넌트의 disabled 속성을 설정.


Parameter

nametyperequireddescription


disabledBooleanYdisabled 상태
true: disabled 속성 활성화
false: disabled 속성 비활성화



Sample
//컴포넌트에 disabled 설정
componentId.setDisabled(true);


setEnableColumn(
									  columnId
									       , 
									       enableColumnFalseValue
										)
							

enableColumn 속성을 동적으로 설정.enableColumn 속성으로 설정된 컬럼은 Radio와 바인딩된 DataList의 컬럼 중 선택 항목으로의 disable 여부에 대한 설정 값을 가지고 있음.enableColumn 속성은 Radio의 선택 항목 목록 중 특정 항목을 disable 시키기 위한 용도로 사용됨.selectedIndex는 영향을 받지 않고 항상 전체 목록을 기준으로 동작.
(관련 속성)  
 enableColumn
 enableColumnFalseValue


Parameter

nametyperequireddescription


columnIdStringYenableColumn으로 설정할 컬럼의 ID. (disable 시킬 항목에 대한 데이터를 가지고 있는 컬럼)


enableColumnFalseValueStringN목록을 disable 시키기 위한 조건에 해당하는 값.



Sample
// Radio는 DataList와 바인딩되어 있음.
radio1.setEnableColumn(col3, false);
// (실행 결과) DataList에서 col3 컬럼의 값을 false로 갖는 행은 Radio의 선택 목록에 disable 처리되어 표시됨.


setEventPause(
									  evList
									       , 
									       flag
										)
							

지정한 이벤트를 중단함. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


evListStringN중단할 이벤트 목록. (null을 지정할 경우 해당 컴포넌트의 모든 사용자 이벤트가 중단되거나 중단 해제됨.)


flagBooleanY이벤트 중단 여부. 
true: 중단
false: 중단 해제.



Sample
// (예제 1)
// onclick 이벤트를 중단. 
input1.setEventPause("onclick", true); 

// (예제 2)
// onfocus 및 onblur 이벤트의 중단을 해제.
input1.setEventPause("onfocus,onblur", false); 

// (예제 3)
// input1에 등록된 모든 사용자 이벤트를 중단.
input1.setEventPause(null, true);


setInitStyle(
									  property
										)
							

컴포넌트의 초기 스타일을 복구한다. initStyle 속성을 true로 설정한 컴포넌트만 유효하게 동작한다 (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


propertyStringNCSS 속성 (지정하지 않으면 모든 속성의 초기 값으로 복구.)



Sample
// (예제)
group1.setInitStyle();


setItemDisabled(
									  index
									       , 
									       flag
										)
							

주어진 index에 해당하는 항목의 disabled 속성을 설정.


Parameter

nametyperequireddescription


indexNumberY항목의 index


flagBooleanYdisabled 상태
true: disabled 속성 활성화
false: disabled 속성 비활성화



Sample
// 첫번째 항목을 비활성화
radio1.setItemDisabled(0, true);    
// 첫번째 항목은 선택 및 선택 해제가 불가능.


setNodeSet(
									  nodeset
									       , 
									       label
									       , 
									       value
										)
							

선택 항목 목록을 설정. DataList와 바인딩할 경우 nodeset 파라미터는 "data:"로 시작해야 함.


Parameter

nametyperequireddescription


nodesetStringYDataList의 ID. "data:"로 시작해야 함. (혹은 InstanceData의 XPath)


labelStringNlabel로 설정할 컬럼의 ID. 할당하지 않으면 기존 값이 그대로 적용됨. (혹은 label에 설정할 nodeset 하위의 XPath)


valueStringNvalue로 설정할 컬럼의 ID. 할당하지 않으면 기존 값이 그대로 적용됨. (혹은 value에 설정할 nodeset 하위의 XPath)



Sample
// DataList 정의.







남성
M


여성
F




// (예제 1) DataList1과 바인딩하고 label은 lbl 컬럼을, value는 code컬럼을 사용.   
radio1.setNodeSet('data:dataList1','lbl','code');

// (예제 2) DataList2와 바인딩하고 label 및 value는 예전 컬럼 정보를 사용.
radio1.setNodeSet('data:dataList2');    
// (결과) 기존에 할당된 label의 lbl과 value의 code는 그대로 유지되고 dataList만 변경됨.


setOpacity(
									  value
										)
							

웹스퀘어 컴포넌트의 불투명도를 설정. (웹스퀘어 컴포넌트 공통.)엔진 내부적으로 CSS 속성인 opacity(불투명도)를 설정.


Parameter

nametyperequireddescription


valueNumberYOpacity 값 (0과 1 사이의 실수)



Sample
// (예제) 불투명도를 0.45로 설정
componentId.setOpacity(0.45);


setPosition(
									  left
									       , 
									       top
									       , 
									       mode
										)
							

웹스퀘어 컴포넌트의 위치(left, top)를 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


leftNumberY설정할 left 위치 값 또는 null.


topNumberY설정할 top 위치 값 또는 null.


modeStringN위치 설정 방법. [default: absolute, delta] 
absolute: 입력된 값을 위치로 설정.
delta: 현재 위치에 입력된 left 및 top 값을 추가.



Sample
// (예제) 컴포넌트의 top만 100px로 설정.
componentId.setPosition(null, 100);


setRef(
									  path
										)
							

ref 속성을 설정. DataCollection과 연동시 "data:"라는 prefix를 꼭 붙여야 함. 명시하지 않을 경우, InstanceData의 XPath로 인식됨.


Parameter

nametyperequireddescription


pathStringY설정할 ref의 경로



Sample
// dataMap1의 gender key와 radio1 컴포넌트의 value를 바인딩하는 경우
radio1.setRef("data:dataMap1.gender");

// InstanceData의 "res/userData/hobby"와 연동 할 경우.
radio1.setRef("res/userData/gender");


setSelectedIndex(
									  index
										)
							

주어진 인덱스에 해당하는 항목을 선택/해제(토글링)하는 작업을 수행.


Parameter

nametyperequireddescription


indexNumberY항목의 인덱스



Sample
// 첫번째 항목이 선택되지 않은 경우, 첫번째 항목이 선택됨. (선택된 경우에는, 선택이 해제됨)
radio1.setSelectedIndex(0);


setSize(
									  width
									       , 
									       height
										)
							

웹스퀘어 컴포넌트의 크기(width, height)를 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


widthNumberY새로 설정할 컴포넌트의 width 값 또는 null


heightNumberY새로 설정할 컴포넌트의 height 값 또는 null



Sample
// (예제) 컴포넌트의 height만 100px로 설정.
componentId.setSize(null,100);


setStyle(
									  propertyName
									       , 
									       value
										)
							

웹스퀘어 컴포넌트의 CSS 속성을 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


propertyNameStringY설정할 CSS 속성


valueStringY해당 CSS 속성에 적용할 값



Sample
// (예제 1) 컴포넌트의 width를 200px로 설정
componentId.setStyle("width", "200px");

// (예제 2) 배경색을 olive로 변경
componentId.setStyle("background-color","olive");


setTitle(
									  title
										)
							

컴포넌트의 title 속성을 설정.


Parameter

nametyperequireddescription


titleStringY속성으로 설정할 값.



Sample
 // title 속성을 "test"로 설정하는 예제

 radio1.setTitle("test");


setUserData(
									  key
									       , 
									       value
										)
							

웹스퀘어 컴포넌트에 임의의 데이터를 설정. (웹스퀘어 컴포넌트 공통.) 컴포넌트에 설정 가능한 key를 입력해야 함. 설정 가능한 key가 아닌 경우, 해당 내용이 로그에 출력됨.


Parameter

nametyperequireddescription


keyStringY설정할 데이터의 key


valueStringY설정한 데이터의 value



Sample
// 컴포넌트에 'data'라는 key로 'WebSquare'라는 value를 설정하는 예제.

componentId.setUserData("data", "WebSquare");

// 컴포넌트에 설정이 불가능한 key를 임력할 경우, key 설정이 불가능. 
 
componentId.setUserData("title", "WebSquare");
// 아래와 같이 로그가 출력됨. 
// !!!WARNING - [title] can't be defined as UserData.


setValue(
									  value
										)
							

파라메터로 넘어온 값에 해당하는 선택 항목을 선택.  여러 항목을 한번에 설정할 경우 공백(space)를 이용하여 구분. 주어진 값에 대한 선택 항목이 없는 경우, 아무 동작이 일어나지 않음.


Parameter

nametyperequireddescription


valueStringY선택하려는 항목의 value



Sample
//아래와 같이 radio가 정의 된 경우



남성
M


여성
F




radio1.setValue("M");   //남성 항목이 선택됨.


setVisibleColumn(
									  columnId
									       , 
									       visibleColumnFalseValue
										)
							

visibleColumn 속성을 동적으로 설정.visibleColumn 속성으로 설정된 컬럼은 Radio와 바인딩된 DataList의 컬럼 중 선택 항목으로의 표시 여부에 대한 설정 값을 가지고 있음.visibleColumn 속성은 Radio의 선택 항목 목록 중 특정 항목을 감추기 위한 용도로 사용됨.selectedIndex는 영향을 받지 않고 항상 전체 목록을 기준으로 동작.
(관련 속성)  
 visibleColumn
 visibleColumnFalseValue


Parameter

nametyperequireddescription


columnIdStringYvisibleColumn으로 설정할 컬럼의 ID. (감출 항목에 대한 데이터를 가지고 있는 컬럼)


visibleColumnFalseValueStringN목록을 감추기 위한 조건에 해당하는 값.



Sample
// Radio는 DataList와 바인딩되어 있음.
radio1.setVisibleColumn(col3, false);
// (실행 결과) DataList에서 col3 컬럼의 값을 false로 갖는 행은 Radio의 선택 목록에 표시되지 않음.


show(
									  displayType
										)
							

웹스퀘어 컴포넌트를 화면에 표시. (웹스퀘어 컴포넌트 공통.)CSS display 속성을 주어진 값으로 설정하고 "visibility: show;"를 적용.


Parameter

nametyperequireddescription


displayTypeStringN적용할 CSS display 속성의 값.   
block : display: block;을 적용. (기본 값)
inline : display: inline;을 적용.
none : display: none;을 적용.
"" : show 수행 이전의 display 속성 값으로 복구.



Sample
// (예제) display: block; CSS를 설정.
componentId.show();  

// (예제) 위제 설정한 display 속성 값을 취소하고 원래의 display 값을 복구.
componentId.show("");


toggleClass(
									  className
										)
							

웹스퀘어 컴포넌트에서 특정 class를 제거하거나 추가. (웹스퀘어 컴포넌트 공통.)웹스퀘어 컴포넌트가 파라미터로 주어진 class를 포함한 경우, 해당 class를 제거. 웹스퀘어 컴포넌트에 파라미터로 주어진 class가 없는 경우, 해당 class를 추가. 기본적으로 addClass를 통해 추가된 class만 삭제 가능. 웹스퀘어 컴포넌트의 속성으로 직접 정의된 class를 삭제하기 위해서는 config.xml 파일에 아래 설정을 추가. 
 // config.xml 파일에 아래 설정 추가
 <removeDefaultClass value="true" />


Parameter

nametyperequireddescription


classNameStringY추가/삭제할 class



Sample
// inputBox 컴포넌트에 class가 속성으로 직접 정의됨.


//config.xml 파일에 아래를 추가.

    <removeDefaultClass value="true" />


// tmpInputClass class를 삭제.
input1.toggleClass("tmpInputClass");

// (위에서 삭제된) tmpInputClass class를 다시 추가.
input1.toggleClass("tmpInputClass");


trigger(
									  type
									       , 
									       array
										)
							

컴포넌트에서 특정 이벤트를 발생시킴. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


typeStringY발생시킬 이벤트


arrayArrayN이벤트 핸들러에 전달할 파라미터 배열



Sample
// (예제 1)
// input1 컴포넌트에 onclick 이벤트를 발생시킴.
input1.trigger("onclick");

// (예제 2)
// input1에 onviewchange 이벤트를 발생시키고 핸들러 함수에 (1,2) 인자를 전달하여 호출.
input1.trigger("onviewchange", [1,2]);


unbind(
									  type
									       , 
									       function
										)
							

컴포넌트에서 이벤트를 제거. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


typeStringN제거할 이벤트. (생략할 경우 해당 컴포넌트의 모든 이벤트를 제거.)


functionFunctionN제거할 이벤트의 핸들러 함수. (생략할 경우 해당 위에 지정한 이벤트에 등록된 모든 핸들러 함수를 제거.)



Sample
// (예제 1)
// input1에 등록된 모든 이벤트를 제거.
input1.unbind();

// (예제 2)
// input1의 onviewchange 이벤트에 대한 모든 핸들러 함수를 제거.
input1.unbind("onviewchange");

// (예제 3)
// input1의 onviewchange 이벤트에 대한 func1 이벤트 핸들러 함수를 제거.
input1.unbind("onviewchange", func1);


unbindRef(
									  
										)
							

ref 바인딩을 해제.





validate(
									  
										)
							

컴포넌트의 유효성 관련 속성값을 통해 유효성 검사를 실행.
(관련 속성)
 displaymessage="true"
(유효성 검증 속성)
 mandatory



Return

typedescription


Boolean유효성 검사 결과 값





validateObject(
									  
										)
							

컴포넌트의 유효성 관련 속성값을 통해 유효성 검사를 실행.
(관련 API)
 displaymessage="true"

(유효성 관련 속성)
 mandatory



Return

typedescription


Objectobject 유효성 검사 결과 객체
    object.callerId 유효성 검사 대상 컴포넌트 ID
    object.type 유효성 검사 항목
   object.value 유효성 검사 결과 값


Sample
//아래와 같이 radio 컴포넌트에 mandatory 속성을 정의했을 경우









var returnObj = radio.validateObject();
// (반환 값 - radio 값이 없을 경우 ) returnObj 객체 반환 

returnObj.callerId = "radio" returnObj.type = "mandatory" returnObj.value = ""
// (반환 값 - radio 값이 있을 경우) 비어있는 객체가 반환 

// displaymessage="true" 설정을 사용할 경우, 검사에 실패하면 Engine에 설정된 메시지가 alert으로 표시됨. 
// (alert 메세지 예시) 필수 입력 항목입니다


visible(
									  flag
										)
							

[deprecated] show/hide 혹은 setStyle 사용을 권장.엔진 내부적으로 CSS visibility 속성을 설정.


Parameter

nametyperequireddescription


flagBooleanY설정할 CSS visibility 속성 값 
true : visibility: visible;
false : visibility: hidden;










Copyrights Inswave Systems Co., Ltd.



