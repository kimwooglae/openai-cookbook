


WebSquare.uiplugin.pageList 









PropertyEventMethod찾아보기

WebSquare.uiplugin.pageList - 5.0_5.4826M.20230213.171915





페이지 리스트. 페이지 수 출력 및 페이지 선택을 지원.  
 실제 페이징 처리는 수행하지 않고 페이지 수 설정 및 페이지 선택용 UI만 지원.

Type


uiplugin

Property Summary




accessibility

웹접근성을 위해 좌우 버튼의 Tag를 <a>에서 <button>으로 변경  [default: false, true] 
(옵션 설명)
 "true" : 좌우 버튼의 Tag를 <button> Tag로 생성
 "false" (기본 값): 좌우 버튼의 Tag를 <a> Tag로 생성</xmp>



buttonShowType

페이지 이동 버튼 타입. [default: 1, 0, 2, 3, 4] 



class

HTML의 class 속성과 동일한 기능을 제공. 



deliImage

구분자의 이미지



deliImageStyle

구분자의 style



delimiter

구분자



deliWidth

구분자의 width



displayButtonType

첫페이지 또는 마지막 페이지시 페이지 버튼 처리



displayFormat

인덱스를 표시하는 포맷



displaySearchbox

페이지 번호 입력란을 추가. [default: false, true] 



displaySelectedIndex

displaySearchbox = "true" 인 경우, 페이지 입력창에 현재 페이지 번호를 표시. [default: false, true] 
(옵션 설명)
 "true" : 현재 페이지 번호를 표시. 
 "false" (기본 값): 현재 페이지 번호를 표시하지 않음. </xmp></xmp>



id

컴포넌트 ID. 



leftPageBackImage

페이지를 왼쪽으로 pageSize단위 만큼 바꾸는 버튼의 이미지



leftPageBackImageClass

페이지를 왼쪽으로 pageSize단위 만큼 바꾸는 버튼의 class



leftPageImage

페이지를 왼쪽으로 한칸 바꾸는 버튼의 이미지



leftPageImageClass

페이지를 왼쪽으로 한칸 바꾸는 버튼의 class



naviType

페이지 이동 관련 옵션.   



oneMoveButtonWidth

페이지를 한칸 바꾸는 버튼의 width



pageSize

한 페이지에 보이는 숫자의 수



pagingType

남은 페이지의 수가 pageSize보다 작을 때 페이지를 표시하는 방식



renderType

렌더링되는 레이아웃 구조를 지정. 
(옵션 설명) 
 "table" 
 "list" 
 "nativelist" </xmp></xmp>



rightPageBackImage

페이지를 왼쪽으로 한칸 바꾸는 버튼의 이미지



rightPageBackImageClass

페이지를 오른쪽으로 pageSize단위 만큼 바꾸는 버튼의 class



rightPageImage

페이지를 오른쪽으로 pageSize단위 만큼 바꾸는 버튼의 이미지



rightPageImageClass

페이지를 오른쪽으로 한칸 바꾸는 버튼의 class



shiftMoveButtonWidth

페이지를  pageSize단위 만큼 바꾸는 버튼의 width



tabIndex

Tab 키를 이용하여 포커스를 변경할 경우, 해당 컴포넌트에 포커스를 주는 순서. 



title

HTML의 title 속성과 동일. 



useDelim

구분자 사용 여부



userData1

사용자 정의 데이터 속성



userData2

사용자 정의 데이터 속성



userData3

사용자 정의 데이터 속성



Event Summary




onchange

선택 항목 변경시 발생



onclick

마우스로 PageList를 클릭할 때 발생



oninputblur

displaySearchbox="true"인 경우, 사용자의 페이지 번호 입력 후 포커스가 사라질 때 발생



onviewchange

키보드 또는 마우스 조작을 통해 값이 변경된 경우 발생.


Method Summary




addClass(
									  className
										)
								

컴포넌트에 CSS class를 추가



bind(
									  eventType
									       , 
									       function
										)
								

컴포넌트에 이벤트와 핸들러 함수를 동적으로 할당



changeClass(
									  oldClassName
									       , 
									       newClassName
										)
								

웹스퀘어 컴포넌트의 class를 변경. (웹스퀘어 컴포넌트 공통.) 



focus(
									  
										)
								

웹스퀘어 컴포넌트에 포커스를 줌



getCount(
									  
										)
								

PageList의 전체 페이지 수를 반환



getDisabled(
									  
										)
								

현재 웹스퀘어 컴포넌트에 설정된 disabled 속성 값을 반환



getGenerator(
									  
										)
								

컴포넌트가 Generator에 의해 생성된 경우, 자신을 생성한 부모 Generator 객체를 반환



getID(
									  
										)
								

웹스퀘어 컴포넌트의 ID를 반환



getInitStyle(
									  CSS
										)
								

컴포넌트의 초기 스타일을 반환



getLabel(
									  idx
										)
								

인덱스에 해당하는 label을 반환



getOpacity(
									  
										)
								

웹스퀘어 컴포넌트의 불투명도를 반환. (웹스퀘어 컴포넌트 공통.)



getOriginalID(
									  
										)
								

웹스퀘어 컴포넌트의 originalID를 반환. (웹스퀘어 컴포넌트 공통.)



getPageSize(
									  
										)
								

pageSize를 조회



getPluginName(
									  
										)
								

웹스퀘어 컴포넌트의 이름(pluginName)을 반환



getPosition(
									  positionName
										)
								

웹스퀘어 컴포넌트의 위치(left, top)를 반환. (웹스퀘어 컴포넌트 공통.) 



getReadOnly(
									  
										)
								

현재 웹스퀘어 컴포넌트에 설정된 readOnly 속성 값을 반환



getScope(
									  
										)
								

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)  



getScopeWindow(
									  
										)
								

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)



getSelectedIndex(
									  
										)
								

선택된 인덱스를 반환



getSize(
									  sizeName
										)
								

웹스퀘어 컴포넌트의 크기(width, height)를 반환. (웹스퀘어 컴포넌트 공통.) 



getStyle(
									  propertyName
										)
								

웹스퀘어 컴포넌트의 CSS 속성 값을 반환



getStyleValue(
									  style
										)
								

[deprecated]



getTitle(
									  
										)
								

컴포넌트의 title 속성 값을 반환



getUdcHome(
									  
										)
								

UDC 객체가 자신을 정의한 UDC 파일 경로를 파일명을 포함해서 반환. (웹스퀘어 컴포넌트 공통.)



getUdcRoot(
									  
										)
								

UDC 객체가 자신을 정의한  UDC 파일 경로를 반환. (웹스퀘어 컴포넌트 공통.)



getUserData(
									  key
										)
								

setUserData로 웹스퀘어 컴포넌트에 설정한 key의 value 혹은 사용자가 직접 페이지 소스(XML)에 속성으로 정의한 value를 반환



hasClass(
									  className
										)
								

웹스퀘어 컴포넌트가 특정 class를 포함하고 있는지 확인



hide(
									  
										)
								

웹스퀘어 컴포넌트를 화면에서 숨김. (웹스퀘어 컴포넌트 공통.)



moveLeft(
									  
										)
								

선택된 인덱스를 "1"만큼 감소시킴



moveRight(
									  
										)
								

선택된 인덱스를 "1"만큼 증가시킴



pageLeft(
									  
										)
								

pageSize 기준으로 이전 페이지 번호의 첫번째 페이지를 선택.  



pageRight(
									  
										)
								

pageSize 기준으로 다음 페이지 번호의 첫번째 페이지를 선택.  



removeClass(
									  className
										)
								

웹스퀘어 컴포넌트에서 class를 삭제. (웹스퀘어 컴포넌트 공통.)



setCount(
									  count
									       , 
									       flag
										)
								

PageList의 전체 페이지 수를 새로 지정.  



setDisabled(
									  disabled
										)
								

웹스퀘어 컴포넌트의 disabled 속성을 설정



setEventPause(
									  evList
									       , 
									       flag
										)
								

지정한 이벤트를 중단함



setIdxClass(
									  idx
										)
								

setSelectedIndex와 같은 역할을 하는 함수



setInitStyle(
									  property
										)
								

컴포넌트의 초기 스타일을 복구한다



setOpacity(
									  value
										)
								

웹스퀘어 컴포넌트의 불투명도를 설정. (웹스퀘어 컴포넌트 공통.)



setPosition(
									  left
									       , 
									       top
									       , 
									       mode
										)
								

웹스퀘어 컴포넌트의 위치(left, top)를 설정



setReadOnly(
									  readOnly
										)
								

웹스퀘어 컴포넌트의 readOnly 속성을 설정



setSelectedIndex(
									  idx
										)
								

페이지의 선택된 인덱스를 변경



setSize(
									  width
									       , 
									       height
										)
								

웹스퀘어 컴포넌트의 크기(width, height)를 설정



setStyle(
									  propertyName
									       , 
									       value
										)
								

웹스퀘어 컴포넌트의 CSS 속성을 설정



setUserData(
									  key
									       , 
									       value
										)
								

웹스퀘어 컴포넌트에 임의의 데이터를 설정. (웹스퀘어 컴포넌트 공통.) 



setValue(
									  value
										)
								

setSelectedIndex와 같은 역할을 하는 함수



show(
									  displayType
										)
								

웹스퀘어 컴포넌트를 화면에 표시. (웹스퀘어 컴포넌트 공통.)



toggleClass(
									  className
										)
								

웹스퀘어 컴포넌트에서 특정 class를 제거하거나 추가. (웹스퀘어 컴포넌트 공통.)



trigger(
									  type
									       , 
									       array
										)
								

컴포넌트에서 특정 이벤트를 발생시킴



unbind(
									  type
									       , 
									       function
										)
								

컴포넌트에서 이벤트를 제거



visible(
									  flag
										)
								

[deprecated] 



Property Detail




accessibility

웹접근성을 위해 좌우 버튼의 Tag를 에서 으로 변경  [default: false, true] 
(옵션 설명)
 "true" : 좌우 버튼의 Tag를  Tag로 생성
 "false" (기본 값): 좌우 버튼의 Tag를  Tag로 생성


buttonShowType

페이지 이동 버튼 타입. [default: 1, 0, 2, 3, 4] (이전/다음 페이지, 이전/다음 목록, 첫/끝 페이지로 이동하는 버튼 표시 여부 결정.)
(옵션 설명)
 0: 이전/다음 목록 버튼만 표시 (2개)
 "1" (기본 값): 이전/다음 페이지 + 이전/다음 목록 (4개)
 "2" : 이전/다음 페이지 (2개)
 "3" : 이전/다음 목록 + 첫/끝 페이지 (4개)
 "4" : 이전/다음 페이지 + 첫/끝 페이지 (4개)


class

HTML의 class 속성과 동일한 기능을 제공. CSS 파일이나 style 블럭에 정의한 여러 개의 class를 공백으로 구분하여 적용 가능.Engine 내부에서 각 컴포넌트 별로 지정된 class를 적용하나, class 속성을 이용하여 컴포넌트의 CSS를 제어 가능.


deliImage

구분자의 이미지.


deliImageStyle

구분자의 style.


delimiter

구분자.


deliWidth

구분자의 width.


displayButtonType

첫페이지 또는 마지막 페이지시 페이지 버튼 처리. 
(옵션 설명)
 "display" : 항상 표시 
 "auto" : 마지막 페이지에는 표시 안 함 
 "displayOver" : pageCount가 pageSize보다 클때 표시 (단, 작을 경우엔 "display"와 동일하게 동작) 
 "autoOver" : pageCount가 pageSize보다 클때 표시(단, 작을 경우엔 "auto"와 동일하게 동작) 
 "autoHidden" : 첫페이지, 마지막 페이지에 보여지는 수 만큼은 표시 안 함.


displayFormat

인덱스를 표시하는 포맷.


displaySearchbox

페이지 번호 입력란을 추가. [default: false, true] 입력한 번호에 해당하는 페이지를 화면에 출력 가능.  
(옵션 설명)
 "true" : 입력란 추가. 
 "false" (기본 값) : 입력란을 추가하지 않음.


displaySelectedIndex

displaySearchbox = "true" 인 경우, 페이지 입력창에 현재 페이지 번호를 표시. [default: false, true] 
(옵션 설명)
 "true" : 현재 페이지 번호를 표시. 
 "false" (기본 값): 현재 페이지 번호를 표시하지 않음. 
(예제)
displaySearchbox="true" displaySelectedIndex="true"
// 위의 경우, 유효하지 않은 페이지 번호(음수 혹은 전체 페이지 수 범위를 벗어난 수)를 입력하면 현재 페이지 번호로 자동 변경.


id

컴포넌트 ID. 컴포넌트 ID는 전역 객체로 할당됨. 각 컴포넌트 ID를 통해 Script에서 해당 컴포넌트에 접근 가능.


leftPageBackImage

페이지를 왼쪽으로 pageSize단위 만큼 바꾸는 버튼의 이미지. 
(관련 속성)
 pageSize


leftPageBackImageClass

페이지를 왼쪽으로 pageSize단위 만큼 바꾸는 버튼의 class.
(관련 속성)
 pageSize


leftPageImage

페이지를 왼쪽으로 한칸 바꾸는 버튼의 이미지.


leftPageImageClass

페이지를 왼쪽으로 한칸 바꾸는 버튼의 class.


naviType

페이지 이동 관련 옵션.   buttonShowType="2"일 때만 유효. pagingType은 무시.  
(옵션 설명)
 "1" : 리스트자체가 이동 
 "2" : 페이지 선택
(관련 속성)
 buttonShowType="2"


oneMoveButtonWidth

페이지를 한칸 바꾸는 버튼의 width.


pageSize

한 페이지에 보이는 숫자의 수.


pagingType

남은 페이지의 수가 pageSize보다 작을 때 페이지를 표시하는 방식. 
(옵션 설명)
 "1" : pasingSize에 맞춰서 표현 
 "2" : 남은 페이지만 표현 
(!!!주의!!!)
 buttonShowType="3"인 경우, pagingType="1"은 지원 안 함.


renderType

렌더링되는 레이아웃 구조를 지정. 
(옵션 설명) 
 "table" 
 "list" 
 "nativelist" 
(예제)
 renderType 속성값에 따라 접근성을 지원하기 위한 사용법이 조금씩 달라야 함.
 renderType="table" : 디폴트 값으로서, 내부적으로  태그로 목록을 표현. 웹 접근성을 지원해야 하는 경우에는 사용을 지양.
 renderType="list" :  및  태그로 목록을 표현. 웹 접근성을 위해서는 이 옵션과 함께 가능한 한 구분자를 표시하지 않도록 useDelim 속성을 false로 설정.
 renderType="nativelist" :  및  태그로 목록을 표현  태그 내부 태그 제외하고 그린다. 웹 접근성을 위해서는 이 옵션과 함께 가능한 한 구분자를 표시하지 않도록 useDelim 속성을 false로 설정.


rightPageBackImage

페이지를 왼쪽으로 한칸 바꾸는 버튼의 이미지.


rightPageBackImageClass

페이지를 오른쪽으로 pageSize단위 만큼 바꾸는 버튼의 class.
(관련 속성)
 pageSize


rightPageImage

페이지를 오른쪽으로 pageSize단위 만큼 바꾸는 버튼의 이미지.
(관련 속성)
 pageSize


rightPageImageClass

페이지를 오른쪽으로 한칸 바꾸는 버튼의 class.


shiftMoveButtonWidth

페이지를  pageSize단위 만큼 바꾸는 버튼의 width


tabIndex

Tab 키를 이용하여 포커스를 변경할 경우, 해당 컴포넌트에 포커스를 주는 순서. HTML의 tabindex 속성과 동일.


title

HTML의 title 속성과 동일. 마우스 오버 시, title로 저장한 값이 툴팁으로 표시됨. 일반적으로 웹접근성 지원용으로 설정.


useDelim

구분자 사용 여부.


userData1

사용자 정의 데이터 속성. getUserData("userData1") API를 통해 설정한 값을 얻어올 수 있음. 
 // 속성 값 얻어오기 예시
 getUserData("userData1");


userData2

사용자 정의 데이터 속성. getUserData("userData2") API를 통해 설정한 값을 얻어올 수 있음. 
 // 속성 값 얻어오기 예시
 getUserData("userData2");


userData3

사용자 정의 데이터 속성. getUserData("userData3") API를 통해 설정한 값을 얻어올 수 있음. 
 // 속성 값 얻어오기 예시
 getUserData("userData3");





Event Detail




onchange

선택 항목 변경시 발생.

Parameter

nametypedescription


currentNumber현재 page의 번호.


beforeNumber이전에 위치한 page의 번호.


Sample
// ev:event="onchange( current , before )" 로 이벤트의 인자가 정의된 예
// 2page에서 next page로 이동.
 output1.setValue(before +"->" + current);
// 2 -> 3


onclick

마우스로 PageList를 클릭할 때 발생.

Parameter

nametypedescription


idxNumber클릭한 페이지 번호.


Sample
//  ev:event="onclick( idx )" 로 이벤트의 인자가 정의된 예
// 2 page 클릭.
 output1.setValue(idx);
// 2


oninputblur

displaySearchbox="true"인 경우, 사용자의 페이지 번호 입력 후 포커스가 사라질 때 발생. (페이지 번호 입력 상자에서 발생하는 blur 이벤트.)

Parameter

nametypedescription


BlurNumber발생 시 페이지 입력 상자에 입력된 값


Sample
 ev:event="oninputblur( value )"
 output1.setValue(value +"->" + value);


onviewchange

키보드 또는 마우스 조작을 통해 값이 변경된 경우 발생.스크립트를 통해 값이 변경된 경우에는 발생하지 않음. (native onchange 이벤트와 유사함.)

Parameter

nametypedescription


infoObjectoldValue, newValue, oldSelectedIndex, newSelectedIndex를 포함한 오브젝트를 반환합니다.
 info.oldSelectedIndex : 이전 index 
 info.newSelectedIndex : 변경된 index


Sample
<![CDATA[
    var oldSelectedIndex = info.oldIndex;
    var newSelectedIndex = info.newIndex;
]]>



Method Detail




addClass(
									  className
										)
							

컴포넌트에 CSS class를 추가. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


classNameStringY추가할 class의 이름



Sample
// (예제)
// input1 컴포넌트에 oddClass라는 class를 추가    
input1.addClass("oddClass");


bind(
									  eventType
									       , 
									       function
										)
							

컴포넌트에 이벤트와 핸들러 함수를 동적으로 할당. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


eventTypeStringY할당할 이벤트


functionFunctionY이벤트에 대한 핸들러 함수.



Sample
// (예제 1)
// input1의 onclick 이벤트에 대한 핸들러 함수를 직접 정의하여 할당. 
input1.bind("onclick", function(e){ alert(input1.getValue();}));

// (예제 2)
// 미리 commObj.ev_click 함수를 정의.
var commObj = {};
commObj.ev_click = function(e){
    alert("click :: "+this.id);
};

// input1 컴포넌트에 onclick 이벤트와 정의한 핸들러 함수를 동적으로 할당. 
input1.bind("onclick", commObj.ev_click );


changeClass(
									  oldClassName
									       , 
									       newClassName
										)
							

웹스퀘어 컴포넌트의 class를 변경. (웹스퀘어 컴포넌트 공통.) 기본적으로 addClass를 통해 추가된 class만 변경 가능. 웹스퀘어 컴포넌트의 class 속성에 직접 정의된 class를 삭제하려면 config.xml 파일에 아래 설정을 추가해야 함. 
// config.xml에 아래 설정을 추가. 
<removeDefaultClass value="true" />


Parameter

nametyperequireddescription


oldClassNameStringY변경할 class


newClassNameStringY새로 사용할 class



Sample
// inputBox 컴포넌트에 class가 속성으로 직접 정의됨.


// config.xml 파일에 아래를 추가.

    <removeDefaultClass value="true" />


// class를 변경 가능. 
// (tmpInputClass class를 tmpInputWarninClass로 변경.)
input1.changeClass("tmpInputClass","tmpInputWarninClass");


focus(
									  
										)
							

웹스퀘어 컴포넌트에 포커스를 줌. (웹스퀘어 컴포넌트 공통.)





getCount(
									  
										)
							

PageList의 전체 페이지 수를 반환.



Return

typedescription


Number:Y전체 페이지 수


Sample
// 전체 페이지 수 확인
 pageList1.getCount();


getDisabled(
									  
										)
							

현재 웹스퀘어 컴포넌트에 설정된 disabled 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Booleandisabled 속성 값


Sample
// 컴포넌트의 disabled 속성 값 확인 예제
var returnValue = componentId.getDisabled();
// (반환 값 예시) false


getGenerator(
									  
										)
							

컴포넌트가 Generator에 의해 생성된 경우, 자신을 생성한 부모 Generator 객체를 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Object부모 Generator 객체


Sample
//부모 Generator가 자식으로 Trigger를 생성한 예제
  

// 아래 예제의 경우 trigger1을 클릭하면 generator1 객체가 console에 표시됨. 
 scwin.trigger1.onclick = function(){ console.log(this.getGenerator());} 



getID(
									  
										)
							

웹스퀘어 컴포넌트의 ID를 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


String웹스퀘어 컴포넌트 ID


Sample
// 동적으로 웹스퀘어 컴포넌트를 받을 경우, 아래와 같이 ID 확인 가능.
function fn_validCheck(tmpObj){
    var compID = tmpObj.getID();
}
// 위의 예제 에서 tmpObj가 "input1" ID를 가지고 있는 경우,
// (반환 값) "input1"


getInitStyle(
									  CSS
										)
							

컴포넌트의 초기 스타일을 반환. initStyle 속성을 true로 설정한 컴포넌트만 유효하게 동작한다.(웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


CSSStringN속성 (지정하지 않으면 모든 정보 출력)






getLabel(
									  idx
										)
							

인덱스에 해당하는 label을 반환.


Parameter

nametyperequireddescription


idxNumberY페이지의 인덱스




Return

typedescription


String주어진 인덱스에 해당하는  label


Sample
 var returnValue = pageList1.getLabel(1);
// returnValue는 1.


getOpacity(
									  
										)
							

웹스퀘어 컴포넌트의 불투명도를 반환. (웹스퀘어 컴포넌트 공통.)엔진 내부적으로 CSS의 opacity 속성 값을 반환.



Return

typedescription


IntegerOpacity 값


Sample
// inputBox 컴포넌트에 opacity CSS를 적용.

        
// inputBox 컴포넌트의 opacity 값을 반환. 
var returnValue = input1.getOpacity(); 
// returnValue는 0 ~ 1 사이의 실수.
// (반환 값) "0.2"


getOriginalID(
									  
										)
							

웹스퀘어 컴포넌트의 originalID를 반환. (웹스퀘어 컴포넌트 공통.)originalID는 Scope 기능을 사용할 경우 존재. scope="true"인 WFrame를 사용할 경우, WFrame 내부의 컴포넌트 ID는 원래 사용자가 정의한 값(originalID) 앞에 prefix(wframeID + "_")가 추가되는 방식으로 변경됨.  originalID는 이 때, prefix가 추가되기 전 ID를 의미.



Return

typedescription


String컴포넌트의 originalID


Sample
// WFrame을 사용하는 다중 화면 구조 예시

// WFrame을 포함한 메인 화면 (main.xml) 
 

// 메인 화면 WFrame에 연결되는 소스 화면 (text.xml)


// text.xml 화면의 내부 스크립트에서 ID 및 originalID 확인하는 예제.
// getID 실행 
textbox1.getID(); // 실행 결과는 "wframe1_textbox1"
 
// getOriginalID 실행 
textbox1.getOriginalID(); // 실행 결과는 "textbox1"


getPageSize(
									  
										)
							

pageSize를 조회.


Sample
// pageList1의 pageSize를 확인
 pageList1.getPageSize();


getPluginName(
									  
										)
							

웹스퀘어 컴포넌트의 이름(pluginName)을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


String웹스퀘어 컴포넌트의 이름 (pluginName)


Sample
// 아래와 같이 공통 함수에서 동적으로 웹스퀘어 객체를 받는 경우, 컴포넌트 종류에 따른 분기 처리가 가능.
var commObj = {};

commObj.fn_makeReqData = function(tmpObj){
    var tmpID = tmpObj.getID(); // 컴포넌트 ID
    var tmpCompType = tmpObj.getPluginName();   // 컴포넌트 이름

    if(tmpCompType == "input"){
        //..로직..
    }else if(tmpCompType == "gridView"){
        //..로직 ..
    }else{
        //..로직..
    }
};


getPosition(
									  positionName
										)
							

웹스퀘어 컴포넌트의 위치(left, top)를 반환. (웹스퀘어 컴포넌트 공통.) 위치 값이 %로 설정된 경우, 픽셀로 변환된 값을 반환.


Parameter

nametyperequireddescription


positionNameStringY[left, top] 위치 종류




Return

typedescription


Number컴포넌트의 위치 값


Sample
// 아래와 같이 input 컴포넌트에 CSS 속성 margin이 적용된 경우,


// (예제) 위의 inputBox 컴포넌트의 top 값을 확인     
var returnValue = input1.getPosition("top"); 

// 픽셀 단위의 위치 값이 반환됨.

// (반환 값) 10


getReadOnly(
									  
										)
							

현재 웹스퀘어 컴포넌트에 설정된 readOnly 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Boolean현재 설정되어있는 readOnly 속성


Sample
// 컴포넌트의 readOnly 속성 값 확인 예제
var returnValue = componentId.getReadOnly();
// (반환 값 예시) false


getScope(
									  
										)
							

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)  scope="true"인 WFrame의 자식 컴포넌트가 아닌 경우, null을 반환.



Return

typedescription


ObjectWFrame 객체 또는 null


Sample
// (예제)
// 메인페이지에 wframe1이 있고, wframe1 내부에 wframe11이 존재. 
// 그리고, wframe11 내부에 textbox1이 존재.
   
textbox1.getScope(); 
// (반환 값) wframe11 객체


getScopeWindow(
									  
										)
							

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)scope="true"인 WFrame의 자식 컴포넌트가 아닌 경우, 전역 window 객체를 반환.



Return

typedescription


ObjectWFrame 객체의 scope 객체 또는 전역 window 객체


Sample
// (예제)
// 메인페이지에 wframe1이 있고, wframe1 내부에 wframe11이 존재. 
// 그리고, wframe11 내부에 textbox1이 존재.
   
var scope = textbox1.getScopeWindow();
scope.wframe11 === textbox1.getScope(); // true


getSelectedIndex(
									  
										)
							

선택된 인덱스를 반환.



Return

typedescription


Number현재 선택된 인덱스.


Sample
// 5번째 페이지가 선택된 경우,
 var returnValue = pageList1.getSelectedIndex();
// returnValue는 5.


getSize(
									  sizeName
										)
							

웹스퀘어 컴포넌트의 크기(width, height)를 반환. (웹스퀘어 컴포넌트 공통.) %로 설정된 경우, 픽셀로 변환된 값을 반환.


Parameter

nametyperequireddescription


sizeNameStringY크기 값의 종류. sizeName 별 계산 방법은 아래 표를 참고. 
height : element.clientHeight
innerHeight : element.clientHeight + padding
outerHeight : element.clientHeight + padding + border
outerMarginHeight : element.clientHeight + padding + border + margin
width : element.clientWidth
innerWidth : element.clientWidth + padding
outerWidth : element.clientWidth + padding + border
outerMarginWidth : element.clientWidth + padding + border + margin




Return

typedescription


Number컴포넌트의 크기 값


Sample
var returnValue = componentId.getSize("width");
// (반환 예) 100 
// 픽셀 단위의 크기 값이 반환됨. 
// %로 설정된 경우, 픽셀로 변환된 값이 반환됨.


getStyle(
									  propertyName
										)
							

웹스퀘어 컴포넌트의 CSS 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


propertyNameStringY반환할 CSS 속성




Return

typedescription


StringCSS 속성 값


Sample
//아래와 같이 input 컴포넌트가 정의 된 경우


// (예제) 위의 inputBox 컴포넌트의 width 값을 확인   
var returnValue = input1.getStyle("width");

// (반환 값) "144px"


getStyleValue(
									  style
										)
							

[deprecated]getStyle 사용 권장.웹스퀘어 컴포넌트에 적용된 해당 CSS 속성 값을 반환.


Parameter

nametyperequireddescription


styleStringY반환하려는 CSS 속성.




Return

typedescription


Stringstyle 해당 CSS 속성 값 (색을 반환하는 경우, HexCode로 반환됨.)





getTitle(
									  
										)
							

컴포넌트의 title 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Stringtitle 속성 값.


Sample
// 아래와 같이 input 컴포넌트의 title 속성이 "이름 입력"으로 정의된 경우


var tmpTitle = input1.getTitle();
// (반환 값 예시) "이름 입력"


getUdcHome(
									  
										)
							

UDC 객체가 자신을 정의한 UDC 파일 경로를 파일명을 포함해서 반환. (웹스퀘어 컴포넌트 공통.)파일명은 마지막 .xml까지 포함. .xml을 제외한 경로는 getUdcRoot를 사용해서 반환.UDC 객체가 아닌 컴포넌트에서 호출된 경우에는 undefined가 반환됨.



Return

typedescription


StringUDC 파일 경로. (UDC가 아닌 경우, undefined가 반환됨.)


Sample
// 예제
// UDC 파일 경로는 /a/b/udc.xml 
// 화면 XML은  /a/c/main.xml 
// UDC 객체의 ID는 udc1
  
udc1.getUdcHome(); 
// (실행 결과) /a/b/udc.xml


getUdcRoot(
									  
										)
							

UDC 객체가 자신을 정의한  UDC 파일 경로를 반환. (웹스퀘어 컴포넌트 공통.)파일명을 포함하지 않음. 파일명을 포함한 경로는 getUdcHome을 사용해서 반환.UDC 객체가 아닌 컴포넌트에서 호출된 경우에는 undefined가 반환됨.



Return

typedescription


StringUDC 파일 경로. (UDC가 아닌 경우, undefined가 반환됨.)


Sample
// 예제
// UDC 파일 경로는 /a/b/udc.xml 
// 화면 XML은  /a/c/main.xml 
// UDC 객체의 ID는 udc1
  
udc1.getUdcHome();    
// (실행 결과) /a/b/


getUserData(
									  key
										)
							

setUserData로 웹스퀘어 컴포넌트에 설정한 key의 value 혹은 사용자가 직접 페이지 소스(XML)에 속성으로 정의한 value를 반환. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


keyStringY데이터의 key




Return

typedescription


Stringkey에 해당하는 value


Sample
// Input 컴포넌트에 사용자 속성(setTest)을 설정하는 예제


// 위에서 설정한 setTest을 값을 반환하는 예제. 
input1.getUserData("setTest");
// (반환 값) "Hello"

//setUserData를 통해 'valueTest'(key)와 'WebSquare'(data)로 설정하는 예제. 
input1.setUserData("valueTest","WebSquare");

// 위에서 설정한 setTest을 값을 반환하는 예제. 
input1.getUserData("WebSquare");
// (반환 값) "WebSquare"


hasClass(
									  className
										)
							

웹스퀘어 컴포넌트가 특정 class를 포함하고 있는지 확인. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


classNameStringY검색할 class 이름




Return

typedescription


Booleanclass의 포함 여부


Sample
// inputBox 컴포넌트에 class가 속성으로 직접 정의됨.

        
var returnValue = input1.hasClass("tmpInputClass");
// (반환 값) true


hide(
									  
										)
							

웹스퀘어 컴포넌트를 화면에서 숨김. (웹스퀘어 컴포넌트 공통.)display:none; 및 visibility:hidden; CSS를 적용.


Sample
// (예제) 컴포넌트를 숨김
componentId.hide();


moveLeft(
									  
										)
							

선택된 인덱스를 "1"만큼 감소시킴.


Sample
// 현재 페이지가 3페이지인 경우, 아래를 수행.
 pageList1.moveLeft();
// (결과) 3페이지에서 2페이지로 이동.


moveRight(
									  
										)
							

선택된 인덱스를 "1"만큼 증가시킴.


Sample
// 현재 페이지가 3 페이지인 경우, 아래를 실행.
 pageList1.moveRight();
// (결과) 3 페이지에서 4 페이지로 이동.


pageLeft(
									  
										)
							

pageSize 기준으로 이전 페이지 번호의 첫번째 페이지를 선택.  pageSize="10"이고 현재 23 페이지에 있을 때, pageLeft();를 실행하면 페이지 번호 11로 이동.


Sample
// pageSize="10"이고 현재 23 페이지에 있을 때,
 pageList1.pageLeft();
// (결과) 페이지 번호 11로 이동.


pageRight(
									  
										)
							

pageSize 기준으로 다음 페이지 번호의 첫번째 페이지를 선택.  pageSize="10"이고 현재 23 페이지에 있을 때, pageLeft();를 실행하면 페이지 번호 31로 이동.


Sample
// pageSize="10"이고 현재 23 페이지에 있을 때,
 pageList1.pageRight();
// (결과) 페이지 번호 31로 이동.


removeClass(
									  className
										)
							

웹스퀘어 컴포넌트에서 class를 삭제. (웹스퀘어 컴포넌트 공통.)기본적으로 addClass를 통해 추가된 class만 삭제 가능. 컴포넌트의 속성으로 직접 정의된 class를 삭제하기 위해서는 config.xml 파일에 아래 설정을 추가해야 함. 
 // config.xml 파일에 아래 설정 추가 
 <removeDefaultClass value="true" />


Parameter

nametyperequireddescription


classNameStringY삭제 할 class명



Sample
// inputBox의 속성으로 class가 직접 정의된 경우,


// config.xml 파일에 아래 항목을 추가.

    <removeDefaultClass value="true" />


// removeClass를 통해 삭제 가능. 
input1.removeClass("tmpInputClass");


setCount(
									  count
									       , 
									       flag
										)
							

PageList의 전체 페이지 수를 새로 지정.  변경된 전체 페이지 수를 기준으로 PageList가 갱신됨.API 호출시 페이지가 첫페이지로 초기화 됨.


Parameter

nametyperequireddescription


countNumberY새로 지정할 전체 페이지 수


flagBooleanN이전 출력 형태 유지 유무 
 "true" : 유지.
 "false" (기본 값) :  1 페이지로 갱신.



Sample
 pageList1.setCount(100);


setDisabled(
									  disabled
										)
							

웹스퀘어 컴포넌트의 disabled 속성을 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


disabledBooleanYdisabled 상태. 
true: disabled 속성 활성화
false: disabled 속성 비활성화



Sample
// 컴포넌트의 disabled 속성을 활성화.
componentId.setDisabled(true);


setEventPause(
									  evList
									       , 
									       flag
										)
							

지정한 이벤트를 중단함. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


evListStringN중단할 이벤트 목록. (null을 지정할 경우 해당 컴포넌트의 모든 사용자 이벤트가 중단되거나 중단 해제됨.)


flagBooleanY이벤트 중단 여부. 
true: 중단
false: 중단 해제.



Sample
// (예제 1)
// onclick 이벤트를 중단. 
input1.setEventPause("onclick", true); 

// (예제 2)
// onfocus 및 onblur 이벤트의 중단을 해제.
input1.setEventPause("onfocus,onblur", false); 

// (예제 3)
// input1에 등록된 모든 사용자 이벤트를 중단.
input1.setEventPause(null, true);


setIdxClass(
									  idx
										)
							

setSelectedIndex와 같은 역할을 하는 함수.


Parameter

nametyperequireddescription


idxNumberY선택하려는 인덱스



Sample
 pageList1.setIdxClass(5);
// (결과) 5번째 페이지를 선택.


setInitStyle(
									  property
										)
							

컴포넌트의 초기 스타일을 복구한다. initStyle 속성을 true로 설정한 컴포넌트만 유효하게 동작한다 (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


propertyStringNCSS 속성 (지정하지 않으면 모든 속성의 초기 값으로 복구.)



Sample
// (예제)
group1.setInitStyle();


setOpacity(
									  value
										)
							

웹스퀘어 컴포넌트의 불투명도를 설정. (웹스퀘어 컴포넌트 공통.)엔진 내부적으로 CSS 속성인 opacity(불투명도)를 설정.


Parameter

nametyperequireddescription


valueNumberYOpacity 값 (0과 1 사이의 실수)



Sample
// (예제) 불투명도를 0.45로 설정
componentId.setOpacity(0.45);


setPosition(
									  left
									       , 
									       top
									       , 
									       mode
										)
							

웹스퀘어 컴포넌트의 위치(left, top)를 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


leftNumberY설정할 left 위치 값 또는 null.


topNumberY설정할 top 위치 값 또는 null.


modeStringN위치 설정 방법. [default: absolute, delta] 
absolute: 입력된 값을 위치로 설정.
delta: 현재 위치에 입력된 left 및 top 값을 추가.



Sample
// (예제) 컴포넌트의 top만 100px로 설정.
componentId.setPosition(null, 100);


setReadOnly(
									  readOnly
										)
							

웹스퀘어 컴포넌트의 readOnly 속성을 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


readOnlyBooleanYreadOnly 속성 활성화 여부. ( "true" : 활성화, "false" : 비활성화)



Sample
// 컴포넌트의 readOnly 속성을 true로 설정하는 예.
componentId.setReadOnly(true);


setSelectedIndex(
									  idx
										)
							

페이지의 선택된 인덱스를 변경.


Parameter

nametyperequireddescription


idxNumberY선택하려는 인덱스



Sample
 pageList1.setSelectedIndex(5);
// (결과) 5번째 페이지를 선택.


setSize(
									  width
									       , 
									       height
										)
							

웹스퀘어 컴포넌트의 크기(width, height)를 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


widthNumberY새로 설정할 컴포넌트의 width 값 또는 null


heightNumberY새로 설정할 컴포넌트의 height 값 또는 null



Sample
// (예제) 컴포넌트의 height만 100px로 설정.
componentId.setSize(null,100);


setStyle(
									  propertyName
									       , 
									       value
										)
							

웹스퀘어 컴포넌트의 CSS 속성을 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


propertyNameStringY설정할 CSS 속성


valueStringY해당 CSS 속성에 적용할 값



Sample
// (예제 1) 컴포넌트의 width를 200px로 설정
componentId.setStyle("width", "200px");

// (예제 2) 배경색을 olive로 변경
componentId.setStyle("background-color","olive");


setUserData(
									  key
									       , 
									       value
										)
							

웹스퀘어 컴포넌트에 임의의 데이터를 설정. (웹스퀘어 컴포넌트 공통.) 컴포넌트에 설정 가능한 key를 입력해야 함. 설정 가능한 key가 아닌 경우, 해당 내용이 로그에 출력됨.


Parameter

nametyperequireddescription


keyStringY설정할 데이터의 key


valueStringY설정한 데이터의 value



Sample
// 컴포넌트에 'data'라는 key로 'WebSquare'라는 value를 설정하는 예제.

componentId.setUserData("data", "WebSquare");

// 컴포넌트에 설정이 불가능한 key를 임력할 경우, key 설정이 불가능. 
 
componentId.setUserData("title", "WebSquare");
// 아래와 같이 로그가 출력됨. 
// !!!WARNING - [title] can't be defined as UserData.


setValue(
									  value
										)
							

setSelectedIndex와 같은 역할을 하는 함수.


Parameter

nametyperequireddescription


valueStringY선택하려는 인덱스



Sample
 pageList1.setValue(5);
// (결과) 5번째 페이지를 선택.


show(
									  displayType
										)
							

웹스퀘어 컴포넌트를 화면에 표시. (웹스퀘어 컴포넌트 공통.)CSS display 속성을 주어진 값으로 설정하고 "visibility: show;"를 적용.


Parameter

nametyperequireddescription


displayTypeStringN적용할 CSS display 속성의 값.   
block : display: block;을 적용. (기본 값)
inline : display: inline;을 적용.
none : display: none;을 적용.
"" : show 수행 이전의 display 속성 값으로 복구.



Sample
// (예제) display: block; CSS를 설정.
componentId.show();  

// (예제) 위제 설정한 display 속성 값을 취소하고 원래의 display 값을 복구.
componentId.show("");


toggleClass(
									  className
										)
							

웹스퀘어 컴포넌트에서 특정 class를 제거하거나 추가. (웹스퀘어 컴포넌트 공통.)웹스퀘어 컴포넌트가 파라미터로 주어진 class를 포함한 경우, 해당 class를 제거. 웹스퀘어 컴포넌트에 파라미터로 주어진 class가 없는 경우, 해당 class를 추가. 기본적으로 addClass를 통해 추가된 class만 삭제 가능. 웹스퀘어 컴포넌트의 속성으로 직접 정의된 class를 삭제하기 위해서는 config.xml 파일에 아래 설정을 추가. 
 // config.xml 파일에 아래 설정 추가
 <removeDefaultClass value="true" />


Parameter

nametyperequireddescription


classNameStringY추가/삭제할 class



Sample
// inputBox 컴포넌트에 class가 속성으로 직접 정의됨.


//config.xml 파일에 아래를 추가.

    <removeDefaultClass value="true" />


// tmpInputClass class를 삭제.
input1.toggleClass("tmpInputClass");

// (위에서 삭제된) tmpInputClass class를 다시 추가.
input1.toggleClass("tmpInputClass");


trigger(
									  type
									       , 
									       array
										)
							

컴포넌트에서 특정 이벤트를 발생시킴. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


typeStringY발생시킬 이벤트


arrayArrayN이벤트 핸들러에 전달할 파라미터 배열



Sample
// (예제 1)
// input1 컴포넌트에 onclick 이벤트를 발생시킴.
input1.trigger("onclick");

// (예제 2)
// input1에 onviewchange 이벤트를 발생시키고 핸들러 함수에 (1,2) 인자를 전달하여 호출.
input1.trigger("onviewchange", [1,2]);


unbind(
									  type
									       , 
									       function
										)
							

컴포넌트에서 이벤트를 제거. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


typeStringN제거할 이벤트. (생략할 경우 해당 컴포넌트의 모든 이벤트를 제거.)


functionFunctionN제거할 이벤트의 핸들러 함수. (생략할 경우 해당 위에 지정한 이벤트에 등록된 모든 핸들러 함수를 제거.)



Sample
// (예제 1)
// input1에 등록된 모든 이벤트를 제거.
input1.unbind();

// (예제 2)
// input1의 onviewchange 이벤트에 대한 모든 핸들러 함수를 제거.
input1.unbind("onviewchange");

// (예제 3)
// input1의 onviewchange 이벤트에 대한 func1 이벤트 핸들러 함수를 제거.
input1.unbind("onviewchange", func1);


visible(
									  flag
										)
							

[deprecated] show/hide 혹은 setStyle 사용을 권장.엔진 내부적으로 CSS visibility 속성을 설정.


Parameter

nametyperequireddescription


flagBooleanY설정할 CSS visibility 속성 값 
true : visibility: visible;
false : visibility: hidden;










Copyrights Inswave Systems Co., Ltd.



