
Group42.Group수정 일자 버전 (SP2)WebSquare5 Studio : 20180117_1349_x86_BWebSquare5 Engine : 5.0_2.2982B.20180223.154326_1.5Group 컴포넌트는 여러 컴포넌트를 그룹화 시킬 수 있는 컨테이너성 컴포넌트입니다. 기본적으로 파싱되는 마크업이 'div'이며, 페이지의 레이아웃 등에 많이 사용됩니다.42.1PropertyPropertyDescriptionadaptivetagname이 table일 경우 적응형 웹(다양한 화면크기와 디바이스에 맞게 레이아웃을 변경) 모드. 속성값이 crosstab인 경우, thead와 tbody가 각각 하나씩 있어야 함.Chrome, Safari, Firefox, Opera, IE10+에서 지원되는 기능입니다.adaptiveThresholdtagname이 table일 경우 adaptive가 설정되어 있을 경우 레이아웃 변경을 하기 위한 breakpoint(기본값 : 480)classHTML의 class속성과 동일한 기능을 제공하며 css파일 또는 style블럭에 정의 한 class를 1개 또는 공백(space)를 이용하여 다중 적용이 가능하다.id컴포넌트의 ID로 전역객체로 할당되며 script에서 본 id로 컴포넌트에 접근이 가능하다.styleGroup Component 의 style 속성에 대한 설명입니다.tabIndex SP2Tab Key를 이용 한 컴포넌트의 포커스 순서로 HTML의 tabindex속성과 동일한 기능을 제공한다.tagname기본적으로 Group컴포넌트는 div Tag로 표현며 div가 아닌 다른 Tag로 표현하고자 할 때 사용한다.일반적으로 Group컴포넌트에는 자식 Tag(Element)를 가질 수 있는 Tag를 정의한다.tooltipFormatter SP2tooltipDisplay속성이 true일 때 데이터를 표현 할 tooltip의 내용을 변경 할 사용자 함수명. 사용자 함수에서는 componentId, label을 인자로 받아 tooltip에 표현 할 string을 return한다.html attributes해당 테그에 대응하는 속성을 추가한다.42.2CSS Overriding그림 42-1.09NoClassDescription1w2groupw2group은 웹스퀘어 엔진에서 정의된 클래스입니다, 브라우저가 파싱할때 자동으로 부여됩니다.2inlinewebsquare의 style 편집기에서 해당 style을 직접 수정합니다.42.3주의사항 및 Tip레이아웃용 컴포넌트로 하위에 컴포넌트들을 배치 시킬 수 있으며 입력용 컴포넌트의 value 초기화기능(init) 또는 하위 컴포넌트들에 특정 API,Function 실행기능(invoke)등을 사용할 수 있다.기본적으로 HTML div Tag로 표현되며 div Tag 이외의 child를 가질 수 있는 HTML Tag(ul,dl,ol,table 등)들을 tagname 속성을 이용하여 표현 할 수 있다.Group컴포넌트는 value를 가질 수 없는 컴포넌트임으로 value를 설정해야 하는 경우 Textbox컴포넌트와 함께 사용한다.전체적인 레이아웃 조절의 편의성, UI 유지보수 등을 위해 컴포넌트들을 Group 하위로 block화 시켜 구성하는 것을 권장한다.42.4CSS Class로 스타일 변경하기anchor 컴포넌트를 포함하고 있는 간단한 메뉴를 만들어 보겠습니다. anchor 컴포넌트를 design view에 적당한 크기로 5개 정도 그립니다.그리고 anchor 컴포넌트를 그룹화 하기 위해 group 컴포넌트를 사용합니다. group 컴포넌트를 미리 그리고, anchor를 드래그&드롭 하여 넣는 방법도 있고, group화 할 컴포넌트를 선택한 후 오른쪽 클릭 ->Group을 누르시면 더 수월하게 그룹화 할 수 있습니다.그림 42-2.group_t그룹화 할 컴포넌트가 연속되었으면 첫번째 컴포넌트를 클릭후 shift 키를 누른 상태로 마지막 컴포넌트를 선택하면 연속적으로 여러개의 컴포넌트를 선택할 수 있습니다. 그룹화할 컴포넌트가 불규칙적으로 있다면 ctrl키를 누르고 해당 컴포넌트를 선택하면 연속되지 않은 컴포넌트들을 선택할 수 있습니다그림 42-3.shift 키를 눌러 연속된  컴포넌트 선택그림 SEQ 그림 \* ARABIC11ctrl 키를 눌러 불연속한  컴포넌트 선택모든 컴포넌트를 Design View에 그렸을 당시에는 마우스 기준으로 그려지기에 position이 absolute가 들어가게 됩니다. style 창에 인라인 형태로 들어가 있는것을 확인할 수 있습니다. position:absolute;와 관련된 속성들을 제거해 보면, component 창에 나열된 순서대로 컴포넌트들이 위치하는 것을 알 수 있습니다.style창에 들어가있는 CSS 속성들을 지우고, 원하는 CSS을 입력하여 디자인을 적용시켜 봅니다. style창이 입력한 사항은 인라인 스타일 시트로 적용되어 제일 우선순위가 높게 됩니다. (CSS를 따로 작성하시는 것이 더 수월하면 인라인 스타일을 입력하는 중간 과정을 생략해도 됩니다.)그림 42-4.26인라인 스타일로 적었던 CSS를 선택자를 활용해 별도의 CSS 파일로 작성을 합니다.그리고 CSS 셀렉터와 같이 ID, Class 들을 해당 컴포넌트의 Property 창에서 입력해 줍니다.CSS 선택자에 맞춰 ID와 Class를 주었는데도, Design View에 보이는 형태가 좀 이상합니다. 개발자 도구로 한번 더 살펴 보겠습니다.개발자 도구로 확인해 본 결과, anchor 컴포넌트가 div로 한번 쌓여 있어서 css 선택자로 준 a.navi1이 적용되지 않은 것입니다. 이럴 경우에 CSS 선택자를 .navi1 a로 바꾸는 방법이 있으나, a태그 겉의 div가 필요하지 않다고 생각될 경우 div를 걷어내는 방법이 있습니다.anchor 컴포넌트를 선택하고 property 창을 보면 outerDiv 속성이 있는 것을 확인 할 수 있습니다. 이 속성을 false로 주면 a태그를 싸고 있던 div를 생성하지 않고, anchor 컴포넌트 자체가 a태그가 됩니다.웹스퀘어5.0에서는 기본값으로 해당 속성을 false 처리됩니다.메뉴의 anchor 컴포넌트를 모두 outerDiv=false를 적용하고 다시 미리보기하면, div 태그가 제거되고 기대했던 결과 화면이 나오는 것을 확인할 수 있습니다.42.5마크업 변경과 속성 추가하기Group 컴포넌트는 컨테이너성 컴포넌트로, 기본적으로 div 태그로 파싱이 됩니다. 이럴경우 의미 있는 마크업이 아니기에 웹 표준·웹 접근성에 위배되는 마크업이 될 수도 있습니다.이런 점을 고려하여 WebSquare 에서는 사용자가 원하는 마크업으로 파싱할수 있게끔 tagname 프로퍼티를 제공합니다. tagname 프로퍼티는 WebSquare의 해당 컴포넌트가 최적으로 렌더링될 수 있는 태그들을 셀렉트박스로 제공하고 있으며, 직접 입력도 가능합니다.그림 42-5.Property 창에서 셀렉트박스에서 선택하여  tagname을 설정할 수 있다.tagname에서 셀렉트박스로 제공되는 태그 이름들은 Websquare 엔진 내에서 Design View로 렌더링이 되어 스타일이 적용된 컴포넌트를 바로 확인 할 수 있습니다. 셀렉트박스로 제공되지 않은 태그들은 tagname에 태그를 직접 입력하여 적용합니다. 웹스퀘어5에서는 tag가 가지고 있는 속성대로 보여주고 있습니다.계속해서 파싱될 마크업 변경에 대한 예제를 계속 진행하겠습니다.마크업을 변경하고 싶은 group 컴포넌트를 Design View에서 선택하고, Property View에서 tagname을설정해 봅니다.그림 42-6.27컴포넌트의 tagname을 p태그로 설정설정 후 Group 컴포넌트가 p태그로 파싱된 모습태그 수정을 하였으니, 해당 태그에 필요한 속성(Attribute)이 추가가 필요한 경우가 있습니다. 이럴 경우 컴포넌트 창 -> 해당 group 컴포넌트 오른쪽 클릭 -> 속성 태그 수정을 선택하면 속성의 추가/삭제/수정이 가능합니다.속성 추가 예제1) 예시를 위해 기존 p 태그를 a 태그로 변경하겠습니다.그림 42-7.29a 태그는 anchor 컴포넌트가 있어 대부분 anchor 컴포넌트를 사용하지만, a 태그가 컨테이너 성으로 span 과 같은 자식 요소를 가져야 할때 하위 자식 요소가 될 컴포넌트들을 group 컴포넌트로 감싸는 형태로 작업하게 됩니다. 하지만 group 컴포넌트가 anchor 컴포넌트로 변하는 것이 아니고 파싱되는 태그를 수정하는 것이기에 해당 속성은 수동으로 추가해 주어야 합니다.속성 태그 수정을 선택하면 뜨는 속성 수정 대화창을 보시면 속성 추가(Add Attribute), 삭제 버튼(Delete Attribute)이 있는 것을 확인 할 수 있습니다. 속성 삭제는 밑에있는 항목에 삭제하고 싶은 행의 체크박스를 체크하고, 삭제버튼을 누르면 해당 속성이 삭제되는 걸 확인 할 수 있습니다. 속성 추가를 누르면 밑에 항목에 추가가 되는데 해당 항목의 name과 value를 더블 클릭하여 텍스트를 수정할 수 있습니다.a 태그에 href와 새창을 띄우기 위한 target 속성, 새창 띄우기 이전에 접근성을 위해 title 속성을 추가하겠습니다.그림 42-8.31속성을 추가하고, 브라우저에서 확인합니다.화면상으로는 a 태그로 잘 변경이 되었습니다. 다음은 개발자 도구에서 확인합니다.그림 42-9.32tagname 으로 준 a로 마크업이 되어있고, 방금 삽입한 속성들이 추가된 것을 확인할 수 있습니다.그림 42-10.282) 웹스퀘어5.0에서는 property창에서 직접 수정할수 있게끔 할수있습니다.창화면 오른쪽 상단에 녹십자 버튼을 누르시면 하단 html attributes에 속성추가 포커스가 활성화 됩니다. 해당부분에 속성을 넣으시고 옆에 값을 넣으면 됩니다.42.6Group컴포넌트의 tagname변경으로 UL, LI 구조 만들기Pallette창에서 Group컴포넌트를 선택후 추가해준다.추가된 Group컴포넌트를 Componen창에서 선택후 이어서 property창의 tagname을 UL로 변경 해준다.마지막 캡쳐화면과 같이 기본 Group컴포넌트가 UL로 변경된 화면을 볼수 있습니다.UL생성후 LI태그로 변경될 Group컴포넌트를 UL로 tagname이 변경된 Group하위에 생성해준다.LI의 tagname변경또한 UL에서와 마찬가지로 Property창의 tagname을 LI로 선택후 기본Group을 LI로 변경해준다.3번째 캡쳐화면과 같이 Group컴포넌트의 tagname 변경후 기본 UL, LI 구조가 만들어지는것을 볼수 있습니다.그림 42-11.2842.7주의사항 및 Tip최종 생성된 UL, LI구조를 볼수 있습니다. 하위 LI에는 Textbox컴포넌트로 메뉴01~05 까지의 텍스트가 생성된것을 볼수 있습니다.LI로 변경된 Group에는 직접 텍스트를 삽입할수 없기때문에 임의로 Textbox를 각 LI의 하위에 생성하였습니다.42.8API를 이용해 Class 변경하기WebSquare의 모든 컴포넌트는 해당 컴포넌트ID로 접근하여 WebSquare에서 제공하는 API를 사용할 수 있고, 기본적으로 JAVA Script 구조를 따릅니다.위에서 설명했던 group을 이용한 메뉴를 group API의 addClass, removeClass, chageClass, toggleClass를 이용해 background 색상을 변경해 보도록 하겠습니다.API 적용시 고려사항- 메뉴의 group 컴포넌트를 지목이 쉽게 ID를 프로퍼티 뷰에서 변경했습니다.
- 웹스퀘어 모든 컴포넌트의 API는 ID셀렉터로 접근을 해야합니다.- background-image 속성을 바꿀 Class들을 추가적으로 준비했습니다.addClass() 하기addClass API는 해당 컴포넌트에 인자로 준 CSS Class를 삽입하는 API 입니다.addClass를 발생시킬 trigger 버튼을 만듭니다. trigger의 텍스트는 trigger 컴포넌트를 Design View에서 더블클릭하여 뜨는 대화상자에서 수정이 가능합니다.그림 42-12.33addClass 버튼을 클릭을 했을때 addClass가 발생해야 하므로, 버튼 마우스 오른쪽 클릭 -> 이벤트 추가 -> onclick을 하여 onClick 이벤트를 추가합니다.그림 42-13.34이벤트를 추가하면 xml editor(Script)로 자동으로 이동하며 자바스크립트를 입력할 수 있도록 소스가 추가되어있습니다. 여기에 addClass의 소스를 기입하면 됩니다.그림 42-14.35그림 42-15.36ID를 입력하고 Ctrl + spacebar를 누르면 자동완성기능을 사용할수 있습니다. 브라우저로 띄워 addClass 버튼을 눌러 Class가 삽입이 된 모습입니다.그림 42-16.37removeClass() 하기타겟이 되는 컴포넌트의 CSS Class 중 removeClass API 인자로 준 클래스를 삭제하는 API 입니다.addClass와 같은 방법으로 removeClass trigger 버튼을 오른쪽 클릭하여 onClick 이벤트를 추가합니다.그림 42-17.38addClass 버튼을 누른 후 style01 클래스를 삽입한 후 removeClass 클래스를 클릭하면 style01 클래스가 삭제되어 원래의 디자인이 적용되는 것을 볼 수 있습니다.그림 42-18.39chageClass() 하기타겟이 되는 컴포넌트의 CSS Class 중 첫번째 인자로 준 class가 있으면 두번째 인자의 클래스로 치환하는 API 입니다.위와 같은 방식으로 changeClass trigger 버튼을 오른쪽 클릭하여 onClick 이벤트를 추가합니다.그림 42-19.40addClass, removeClass, toggleClass와 구분을 두기위해 파랑->빨강->노랑->파랑->빨강... 순서로 class를 바꾸도록 hasClass API로 style01(bg 빨강)일 때만 style01을 style02(bg 노랑)으로 changeClass 하도록 코딩을 하였습니다.그림 42-20.41toggleClass() 하기타겟이 되는 컴포넌트의 CSS Class 중 인자로 넘긴 클래스가 없으면 추가, 있으면 삭제하는 API 입니다. 따로 hasClass()를 체크하여 removeClass(), addClass()를 따로 해주지 않아도 되는 편한 API 입니다.위와 같은 방식으로 toggleClass trigger 버튼을 오른쪽 클릭하여 onClick 이벤트를 추가합니다.그림 42-21.42위와 같이 코드를 입력하면 toggleClass trigger 버튼을 클릭할 때마다 style01 클래스가 넣어졌다 빠졌다 하는 것을 확인할 수 있습니다.그림 42-22.43toggleClass를 누르면 번갈아 가며 CSS Class style01이 넣었다 빠졌다 하는 것을 확인할 수 있습니다.더 자세한 API를 확인하고 싶으시면 웹스퀘어 기술지원사이트(http://www.inswave.com/support) -> API 탭을 참고하시기 바랍니다.
