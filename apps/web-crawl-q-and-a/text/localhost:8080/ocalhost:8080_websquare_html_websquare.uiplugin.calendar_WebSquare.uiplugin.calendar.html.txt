


WebSquare.uiplugin.calendar 









PropertyEventMethod찾아보기

WebSquare.uiplugin.calendar - 5.0_5.4826M.20230213.171915





칼렌다. 달력을 출력. 
 calendarClass속성을 이용하여 달력의 스킨 변경이 가능. 
 calendarValueType속성을 이용하여 1줄 달력 혹은 시분초 선택이 포함 된 달력 등을 선택 가능.  
 최상위에 <div>가 사용하며 컴포넌트의 style을 손쉽게 변경할 수 없는 구조. 
 컴포넌트 style 변경은 calendarClass 속성을 활용하는 것을 추천.

Type


uiplugin

Property Summary




calendarClass

[default:class1, class2, class3, class4, class5]스킨 종류를 정의한다



calendarValueType

[default:yearMonthDate, yearMonth, yearMonthDateHour, yearMonthDateTime, yearMonthDateTimeSec]calendar의 표현 방법을 정의한다



cancelButtonShow

[default:false, true]X(취소)모양의 버튼 표시 여부 컴포넌트의 우측 하단에 표현된다.



caption

HTML caption Tag의 값을 설정한다



dayMoveFixed

년, 월 이동시 이전선택한 날짜를 유지 할지 유무



delimiter

[default:/]컴포넌트 하단에 나오는 선택 된 년월일 값에 대한 구분자를 설정한다



displayDayType

[default:image, text]calendar의 요일 부분을 image 또는 text 표현할지 설정한다



displayFormat

달력 하단에 표시되는 날짜 형식을 지정한다



displayFormatFunc

함수명을 입력받아 해당 함수의 return값으로 displayFormat을 설정한다. 함수 호출 시 인자로 calendarValueType을 넘겨준다. 



displayHrMinSec

[default:false, true] calendarValueType="yearMonthDateTime" 설정 시 selectbox에 시,분



focusOnOuterDiv

calendar 외부 div에 tabindex와 포커스를 줄지 여부( 웹접근성 사용시 필요 ) [default: false, true]



footerDiv

[default:false, true]선택 된 날짜등이 있는 컴포넌트 하위 영역을 table Tag가 아닌 div Tag로 표현할지 여부



highlightSelectedWeek

[default: false, true] 선택한 날짜가 있는 주에 대하여 하이라이트 제공



id

컴포넌트 ID. 



keepFocusSelect

달력버튼 클릭시 오늘 날짜로 자동포커스가 이동 할지 여부 [default: false, true]



maxYear

calendar에 표시되는 최대연도로 config



minYear

calendar에 표시되는 최소연도로 config



monthNames

월에 해당하는 selectbox에 display값을 설정하는 기능으로 1월부터 12월의 display값을 ,(comma)로 구분하여 정의한다.



ref

DataCollection의 value 경로. DataCollection의 value와 웹스퀘어 컴포넌트를 바인딩할 때 사용. 



renderType

[default:component, native]컴포넌트의 레이아웃 구조를 설정한다.



skipConfirm

[default: false, true] 사용자가 월(month)을 선택할 경우 자동으로 값이 설정됨. (확인 버튼이 표시 되지 않고 사용자는 확인 버튼을 클릭할 필요가 없음.)



skipConfirmOnly

[default: false, true] << < > >> 버튼을 선택하여 연도 및 월을 선택하는 월(month) 목록에서 직접 월을 선택할 경우 확인 버튼 클릭 없이 자동으로 월이 선택됨. (확인 버튼은 표시됨.)



summary

HTML의 table Tag의 summary 속성과 동일한 기능을 제공한다



tabIndex

Tab 키를 이용하여 포커스를 변경할 경우, 해당 컴포넌트에 포커스를 주는 순서. 



title

HTML의 title 속성과 동일



tooltip

사용자가 컴포넌트에 마우스-오버할 때 표시되는 텍스트



tooltipLocaleRef

클라이언트 다국어 적용시 툴팁에 출력하는 텍스트의 key. 



topLayout

[default:false, true]Today 및 닫기 버튼을 우측 상단으로 이동.



useButton

[default: false, true] 웹접근성 사용 시, '확인', '취소' 요소를 div태그에서 button태그로 변경.



useMonthSelect

[default:true, false]기본 달력 타입(calendarValueType속성의 값이 yearMonthDate)일 때만 적용되며 월(month) selectbox의 disabeld 적용 여부.



userData1

사용자 정의 데이터 속성



userData2

사용자 정의 데이터 속성



userData3

사용자 정의 데이터 속성



useYearSelect

[default:true, false]기본 달력 타입(calendarValueType속성의 값이 yearMonthDate)일 때만 적용되며 년도(year) selectbox의 disabeld 적용 여부.



visibleHourList

[default:1,2,...,23,24] 시간이 표시되는 달력에서 시간 항목을 설정하는 속성. [,]를 구분자로 사용한다. 



visibleMinList

[default:1,2,...,59,60] 분이 표시되는 달력에서 분 항목을 설정하는 속성. [,]를 구분자로 사용한다. 



visibleSecList

[default:1,2,...,59,60] 초가 표시되는 달력에서 초 항목을 설정하는 속성. [,]를 구분자로 사용한다. 



visibleWeekNum

달력에 표시할 주(Week)의 개수를 설정



weekStartsOn

[default:0, 1, 2, 3, 4, 5, 6]시작 요일을 설정한다(0:일, 1:월, 2:화, 3:수, 4:목, 5:금, 6:토)



yearSuffix

연도 selectbox의 display되는 값의 숫자(연도) 뒤에 들어갈 문자열.



Event Summary




oncancel

cancelButtonShow속성의 값이 true일 경우에 보여지는 X(취소)버튼이 click 되었을 때 발생한다



onchange

선택 된 날짜가 변경될 때 발생하며 API를 이용하여 날짜를 설정한 경우에도 발생된다.



onclick

마우스로 calendar를 클릭했을 때 발생한다



onconfirm

"√"(확인)버튼 클릭 시 발생한다



ondateselect

날짜 선택시 발생한다



ondblclick

마우스로 calendar를 더블 클릭했을 때 발생한다



onmonthselect

달력화면에서 월 변경시 발생



onviewchange

키보드 또는 마우스 조작을 통해 값이 변경된 경우 발생.



onyearselect

달력화면에서 연도 변경시 발생


Method Summary




addClass(
									  className
										)
								

컴포넌트에 CSS class를 추가



bind(
									  eventType
									       , 
									       function
										)
								

컴포넌트에 이벤트와 핸들러 함수를 동적으로 할당



changeClass(
									  oldClassName
									       , 
									       newClassName
										)
								

웹스퀘어 컴포넌트의 class를 변경. (웹스퀘어 컴포넌트 공통.) 



disableAfterDate(
									  dateStr
										)
								

입력 받은 날짜 이후의 날짜들을 달력에서 선택 불가능하도록 제한



disableBeforeDate(
									  dateStr
										)
								

입력 받은 날짜 이전의 날짜들은 달력에서 선택 불가능하도록 제한



disableDate(
									  dateStr
										)
								

특정 날짜를 비활성한다



enableAllDate(
									  
										)
								

disableAfterDate 및 disableBeforeDate API를 통해서 입력일 이전/이후 날짜 선택을 가능하도록 변경



enableDate(
									  dateStr
										)
								

특정 날짜를 활성화한다



focus(
									  
										)
								

웹스퀘어 컴포넌트에 포커스를 줌



getDataListInfo(
									  
										)
								

컴포넌트와 바인딩된 DataList를 반환



getDateFormat(
									  
										)
								

[default:yyyyMMdd]설정 된 dateFormat을 반환한다



getDisabled(
									  
										)
								

현재 웹스퀘어 컴포넌트에 설정된 disabled 속성 값을 반환



getFormattedValue(
									  
										)
								

현재 선택된 날짜를 dateFormat에 적용시켜 문자열로 반환한다.



getGenerator(
									  
										)
								

컴포넌트가 Generator에 의해 생성된 경우, 자신을 생성한 부모 Generator 객체를 반환



getID(
									  
										)
								

웹스퀘어 컴포넌트의 ID를 반환



getInitStyle(
									  CSS
										)
								

컴포넌트의 초기 스타일을 반환



getOpacity(
									  
										)
								

웹스퀘어 컴포넌트의 불투명도를 반환. (웹스퀘어 컴포넌트 공통.)



getOriginalID(
									  
										)
								

웹스퀘어 컴포넌트의 originalID를 반환. (웹스퀘어 컴포넌트 공통.)



getPluginName(
									  
										)
								

웹스퀘어 컴포넌트의 이름(pluginName)을 반환



getPosition(
									  positionName
										)
								

웹스퀘어 컴포넌트의 위치(left, top)를 반환. (웹스퀘어 컴포넌트 공통.) 



getReadOnly(
									  
										)
								

현재 웹스퀘어 컴포넌트에 설정된 readOnly 속성 값을 반환



getScope(
									  
										)
								

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)  



getScopeWindow(
									  
										)
								

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)



getSelectedDay(
									  
										)
								

현재 선택된 요일을 소문자 영문으로 반환한다.



getSize(
									  sizeName
										)
								

웹스퀘어 컴포넌트의 크기(width, height)를 반환. (웹스퀘어 컴포넌트 공통.) 



getStyle(
									  propertyName
										)
								

웹스퀘어 컴포넌트의 CSS 속성 값을 반환



getStyleValue(
									  style
										)
								

[deprecated]



getTitle(
									  
										)
								

컴포넌트의 title 속성 값을 반환



getUdcHome(
									  
										)
								

UDC 객체가 자신을 정의한 UDC 파일 경로를 파일명을 포함해서 반환. (웹스퀘어 컴포넌트 공통.)



getUdcRoot(
									  
										)
								

UDC 객체가 자신을 정의한  UDC 파일 경로를 반환. (웹스퀘어 컴포넌트 공통.)



getUserData(
									  key
										)
								

setUserData로 웹스퀘어 컴포넌트에 설정한 key의 value 혹은 사용자가 직접 페이지 소스(XML)에 속성으로 정의한 value를 반환



getValue(
									  
										)
								

선택된 날짜값을 구분자 없이 반환한다



gotoCalendar(
									  dateStr
										)
								

dateStr에 해당하는 날짜로 이동한다.



gotoLastMonth(
									  
										)
								

현재 선택된 날짜를 1달 전으로 이동한다



gotoLastYear(
									  
										)
								

현재 선택된 날짜에서 1년 전으로 이동한다



gotoMonth(
									  month
										)
								

month에 해당하는 월로 이동한다.



gotoNextMonth(
									  
										)
								

현재 선택된 날짜를 1달 뒤로 이동한다



gotoNextYear(
									  
										)
								

현재 선택된 날짜를 1년 뒤로 이동한다



gotoTime(
									  hour
									       , 
									       minute
										)
								

시간을 선택 할 수 있는 달력에서 hour과 minute에 해당하는 시간으로 이동한다.



gotoToday(
									  
										)
								

현재 날짜로 이동한다



gotoYear(
									  year
										)
								

year에 해당하는 연도로 이동한다.



hasClass(
									  className
										)
								

웹스퀘어 컴포넌트가 특정 class를 포함하고 있는지 확인



hide(
									  
										)
								

컴포넌트를 화면에서 보이지 않도록 숨깁니다



removeAllCellClass(
									  
										)
								

setCellClass한 모든 날짜의 class를 초기화한다



removeCellClass(
									  dateStr
										)
								

특정 날짜에 setCellClass한 class를 초기화한다



removeClass(
									  className
										)
								

웹스퀘어 컴포넌트에서 class를 삭제. (웹스퀘어 컴포넌트 공통.)



removeHoliday(
									  
										)
								

holiday 설정을 초기화한다



setCellClass(
									  dateStr
									       , 
									       className
										)
								

특정 날짜에 class를 지정한다



setDateFormat(
									  format
										)
								

dateFormat을 설정하며 format이 적용 된 value는 getFormattedValue API를 이용하여 반환 받을 수 있다. calendarValueType옵션에 따라 format으로 사용할 수 있는 문자열이 다르다.



setDisabled(
									  disabled
										)
								

컴포넌트의 disabled 속성을 설정



setEventPause(
									  evList
									       , 
									       flag
										)
								

지정한 이벤트를 중단함



setHoliday(
									  dateStr
									       , 
									       removeHoliday
										)
								

특정 날짜에 holiday를 지정한다



setHolidayRef(
									  setHolidayRef
										)
								

holidayRef 속성을 설정하는 기능으로 DataCollection과 연동시 "data:"라는 prefix를 꼭 붙여야한다.



setInitStyle(
									  property
										)
								

컴포넌트의 초기 스타일을 복구한다



setOpacity(
									  value
										)
								

웹스퀘어 컴포넌트의 불투명도를 설정. (웹스퀘어 컴포넌트 공통.)



setPosition(
									  left
									       , 
									       top
									       , 
									       mode
										)
								

웹스퀘어 컴포넌트의 위치(left, top)를 설정



setReadOnly(
									  readOnly
										)
								

웹스퀘어 컴포넌트의 readOnly 속성을 설정



setSize(
									  width
									       , 
									       height
										)
								

웹스퀘어 컴포넌트의 크기(width, height)를 설정



setSkin(
									  skinName
										)
								

skin을 설정한다



setStyle(
									  propertyName
									       , 
									       value
										)
								

웹스퀘어 컴포넌트의 CSS 속성을 설정



setUserData(
									  key
									       , 
									       value
										)
								

웹스퀘어 컴포넌트에 임의의 데이터를 설정. (웹스퀘어 컴포넌트 공통.) 



show(
									  displayType
										)
								

컴포넌트를 화면에 보이도록 설정합니다



toggleClass(
									  className
										)
								

웹스퀘어 컴포넌트에서 특정 class를 제거하거나 추가. (웹스퀘어 컴포넌트 공통.)



trigger(
									  type
									       , 
									       array
										)
								

컴포넌트에서 특정 이벤트를 발생시킴



unbind(
									  type
									       , 
									       function
										)
								

컴포넌트에서 이벤트를 제거



visible(
									  flag
										)
								

[deprecated] 



Property Detail




calendarClass

[default:class1, class2, class3, class4, class5]스킨 종류를 정의한다.


calendarValueType

[default:yearMonthDate, yearMonth, yearMonthDateHour, yearMonthDateTime, yearMonthDateTimeSec]calendar의 표현 방법을 정의한다.


cancelButtonShow

[default:false, true]X(취소)모양의 버튼 표시 여부 컴포넌트의 우측 하단에 표현된다.해당 버튼이 click 되었을 때의 로직은 oncancel이벤트에서 구현한다.


caption

HTML caption Tag의 값을 설정한다.(본 컴포넌트는 table Tag를 이용하여 구성되어있다)


dayMoveFixed

년, 월 이동시 이전선택한 날짜를 유지 할지 유무.


delimiter

[default:/]컴포넌트 하단에 나오는 선택 된 년월일 값에 대한 구분자를 설정한다.


displayDayType

[default:image, text]calendar의 요일 부분을 image 또는 text 표현할지 설정한다


displayFormat

달력 하단에 표시되는 날짜 형식을 지정한다.


displayFormatFunc

함수명을 입력받아 해당 함수의 return값으로 displayFormat을 설정한다. 함수 호출 시 인자로 calendarValueType을 넘겨준다. displayFormat이 이미 설정되어 있는 경우에는 이 속성은 무시된다.


displayHrMinSec

[default:false, true] calendarValueType="yearMonthDateTime" 설정 시 selectbox에 시,분.초를 표시하는 기능


focusOnOuterDiv

calendar 외부 div에 tabindex와 포커스를 줄지 여부( 웹접근성 사용시 필요 ) [default: false, true]


footerDiv

[default:false, true]선택 된 날짜등이 있는 컴포넌트 하위 영역을 table Tag가 아닌 div Tag로 표현할지 여부


highlightSelectedWeek

[default: false, true] 선택한 날짜가 있는 주에 대하여 하이라이트 제공.


id

컴포넌트 ID. 컴포넌트 ID는 전역 객체로 할당됨. 각 컴포넌트 ID를 통해 Script에서 해당 컴포넌트에 접근 가능.


keepFocusSelect

달력버튼 클릭시 오늘 날짜로 자동포커스가 이동 할지 여부 [default: false, true]


maxYear

calendar에 표시되는 최대연도로 config.xml의 calendar하위의 maxYear의 value 속성값이 기본값으로 설정된다.


minYear

calendar에 표시되는 최소연도로 config.xml의 calendar하위의 minYear의 value 속성값이 기본값으로 설정된다.


monthNames

월에 해당하는 selectbox에 display값을 설정하는 기능으로 1월부터 12월의 display값을 ,(comma)로 구분하여 정의한다.ex) Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec


ref

DataCollection의 value 경로. DataCollection의 value와 웹스퀘어 컴포넌트를 바인딩할 때 사용. "data:" prefix를 추가하여 data:[DataCollection ID].[Key id 또는 Column id] 형태로 지정해야 함. DataList와 바인딩된 경우, GridView에서 선택된 행의 값이 바인딩됨.
 (작성 예)
 data:dataMap1.deptInstance Data와 연동 할 경우 연동 할 XML 데이터의 XPath를 명시해야 함. 
 (작성 예)
 res/userInfo/dept/@value


renderType

[default:component, native]컴포넌트의 레이아웃 구조를 설정한다.component : 내부적으로 div 및 table을 이용하여 달력을 표현합니다. 웹 접근성을 위해서는 사용을 지양해야 합니다.native : 주로 웹 접근성을 위해 사용되는 속성으로 달력 내부의 selectbox를 html의 select태그를 사용하여 렌더링하며, 달력의 숫자 및 버튼들을 html의 button태그로 렌더링합니다.


skipConfirm

[default: false, true] 사용자가 월(month)을 선택할 경우 자동으로 값이 설정됨. (확인 버튼이 표시 되지 않고 사용자는 확인 버튼을 클릭할 필요가 없음.)true: 확인 버튼 클릭 없이 자동 설정.false (기본 값): 사용자가 확인 버튼을 클릭해야 선택한 값이 설정.


skipConfirmOnly

[default: false, true] << < > >> 버튼을 선택하여 연도 및 월을 선택하는 월(month) 목록에서 직접 월을 선택할 경우 확인 버튼 클릭 없이 자동으로 월이 선택됨. (확인 버튼은 표시됨.)true: 월 목록에서 월을 선택할 경우 해당 값이 자동으로 설정. (확인 버튼은 표시됨.)false (기본 값): 월 목록에서 월을 선택하고 확인 버튼을 클릭해야 해당 값이 설정됨.


summary

HTML의 table Tag의 summary 속성과 동일한 기능을 제공한다. 일반적으로 웹접근성 화면 구현시 사용된다.


tabIndex

Tab 키를 이용하여 포커스를 변경할 경우, 해당 컴포넌트에 포커스를 주는 순서. HTML의 tabindex 속성과 동일.


title

HTML의 title 속성과 동일. 마우스 오버 시, title로 저장한 값이 툴팁으로 표시됨. 일반적으로 웹접근성 지원용으로 설정.


tooltip

사용자가 컴포넌트에 마우스-오버할 때 표시되는 텍스트. 웹스퀘어가 제공하는 툴팁으로, 컴포넌트의 추가 정보를 명시.


tooltipLocaleRef

클라이언트 다국어 적용시 툴팁에 출력하는 텍스트의 key. key에 해당하는 텍스트가 없을 경우 "global_undefined"가 화면에 표시됨.


topLayout

[default:false, true]Today 및 닫기 버튼을 우측 상단으로 이동.true: Today 및 닫기 버튼을 우측 상단에 표시. false: 원래의 위치(컴포넌트 하단)에 표시.


useButton

[default: false, true] 웹접근성 사용 시, '확인', '취소' 요소를 div태그에서 button태그로 변경.true: '확인', '취소' 요소를 button 태그로 변경함. false (기본 값): '확인', '취소' 요소를 기존의 div 태그로 유지함.


useMonthSelect

[default:true, false]기본 달력 타입(calendarValueType속성의 값이 yearMonthDate)일 때만 적용되며 월(month) selectbox의 disabeld 적용 여부.실제 내부적으로는 disabled 속성을 이용하지는 않으며 사용자가 selectbox를 click 했을 때 항목이 열리지 않도록 한다.


userData1

사용자 정의 데이터 속성. getUserData("userData1") API를 통해 설정한 값을 얻어올 수 있음. 
 // 속성 값 얻어오기 예시
 getUserData("userData1");


userData2

사용자 정의 데이터 속성. getUserData("userData2") API를 통해 설정한 값을 얻어올 수 있음. 
 // 속성 값 얻어오기 예시
 getUserData("userData2");


userData3

사용자 정의 데이터 속성. getUserData("userData3") API를 통해 설정한 값을 얻어올 수 있음. 
 // 속성 값 얻어오기 예시
 getUserData("userData3");


useYearSelect

[default:true, false]기본 달력 타입(calendarValueType속성의 값이 yearMonthDate)일 때만 적용되며 년도(year) selectbox의 disabeld 적용 여부.실제 내부적으로는 disabled 속성을 이용하지는 않으며 사용자가 selectbox를 click 했을 때 항목이 열리지 않도록 한다.


visibleHourList

[default:1,2,...,23,24] 시간이 표시되는 달력에서 시간 항목을 설정하는 속성. [,]를 구분자로 사용한다. (ex) calendarValueType="yearMonthDateTime", visibleHourList="5,10,15,20" 인 경우, 시간 목록 선택 시 [5,10,15,20] 목록만 나타난다.


visibleMinList

[default:1,2,...,59,60] 분이 표시되는 달력에서 분 항목을 설정하는 속성. [,]를 구분자로 사용한다. (ex) calendarValueType="yearMonthDateTime", visibleMinList="0,5,10,15,20,25,30,35,40,45,50,55" 인 경우, 분 목록 선택 시 5의 배수 목록만 나타난다.


visibleSecList

[default:1,2,...,59,60] 초가 표시되는 달력에서 초 항목을 설정하는 속성. [,]를 구분자로 사용한다. (ex) calendarValueType="yearMonthDateTime", visibleSecList="0,5,10,15,20,25,30,35,40,45,50,55" 인 경우, 초 목록 선택 시 5의 배수 목록만 나타난다.


visibleWeekNum

달력에 표시할 주(Week)의 개수를 설정. 
(옵션 설명)
 기본 값: "6". (달력에 6주에 해당하는 날짜를 표시. 6보다 작으면 달력 높이가 줄고, 6보다 크면 달력의 높이가 증가함.)
(관련 속성)
 calendarValueType=
   "yearMonthDate"
   "yearMonthDateHour"
   "yearMonthDateTime"
   "yearMonthDateTimeSec"
   "yearMonth" (해당 없음. 달력이 표시되지 않음.)


weekStartsOn

[default:0, 1, 2, 3, 4, 5, 6]시작 요일을 설정한다(0:일, 1:월, 2:화, 3:수, 4:목, 5:금, 6:토)


yearSuffix

연도 selectbox의 display되는 값의 숫자(연도) 뒤에 들어갈 문자열.연도만 display 시킬 때는 $blank로 정의한다.





Event Detail




oncancel

cancelButtonShow속성의 값이 true일 경우에 보여지는 X(취소)버튼이 click 되었을 때 발생한다.
Sample
//취소를 누르면 2002년 04월 15일(인스웨이브 창립일)로 이동.
this.gotoCalendar("20020415");  //event 핸들러 안에서 this로 접근하면 컴포넌트에 바로 접근가능하다.


onchange

선택 된 날짜가 변경될 때 발생하며 API를 이용하여 날짜를 설정한 경우에도 발생된다.사용자의 action에 의해 날짜가 변경된 경우의 이벤트는 onviewchange를 사용한다.



onclick

마우스로 calendar를 클릭했을 때 발생한다.

Parameter

nametypedescription


eObject이벤트 객체





onconfirm

"√"(확인)버튼 클릭 시 발생한다.
calendarValueType의 초기값인 yearMonthDate일 경우, "√"(확인)버튼이 없으며 onconfirm 이벤트를 사용할 수 없다.



ondateselect

날짜 선택시 발생한다

Parameter

nametypedescription


dateStrString선택한 날짜의 문자열


dateObjDate선택한 날짜의 Date 객체


Sample
//사용자가 2002년 04월 15일을 선택 한 경우 엔진에서 넘겨주는 파라메터 예시
dateStr : "20020415" (String 객체)
dateObj : Mon Apr 15 2002 00:00:00 GMT+0900 (Date 객체)


ondblclick

마우스로 calendar를 더블 클릭했을 때 발생한다.

Parameter

nametypedescription


eObject이벤트 객체





onmonthselect

달력화면에서 월 변경시 발생. 이전 월과 새로 선택된 월을 파라미터로 전달 받음.(pickerType="dynamic" calendarValueType="yearMonth" 경우발생)

Parameter

nametypedescription


infoJSONoldValue, newValue를 포함한 JSON을 반환한다.


Sample
//사용자가 2월인 상태에서 3월 선택 한 경우 엔진에서 넘겨주는 파라미터 예시
info.oldValue : "2"
info.newValue : "3"


onviewchange

키보드 또는 마우스 조작을 통해 값이 변경된 경우 발생.스크립트를 통해 값이 변경된 경우에는 발생하지 않음. (native onchange 이벤트와 유사함.)

Parameter

nametypedescription


infoJSONoldValue, newValue를 포함한 JSON을 반환한다.
 info.oldValue : 이전 값
 info.newValue : 변경된 값


Sample
//사용자가 2002년 04월 15일로 설정 되어있던 값을 2099년 12월 31일로 설정 한 경우
<![CDATA[
    var oldValue = info.oldValue;   //이전 값
    //return 예시 ) "20020415"

    var newValue = info.newValue;   //선택 된 값
    //return 예시 ) "20991231"
]]>


onyearselect

달력화면에서 연도 변경시 발생. 이전 연도와 새로 선택된 연도를 파라미터로 전달 받음.(pickerType="dynamic" calendarValueType="year" 경우발생)

Parameter

nametypedescription


infoJSONoldValue, newValue를 포함한 JSON을 반환한다.


Sample
//사용자가 2017년도인 상태에서 2016년도 선택 한 경우 엔진에서 넘겨주는 파라미터 예시
info.oldValue : "2017"
info.newValue : "2016"



Method Detail




addClass(
									  className
										)
							

컴포넌트에 CSS class를 추가. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


classNameStringY추가할 class의 이름



Sample
// (예제)
// input1 컴포넌트에 oddClass라는 class를 추가    
input1.addClass("oddClass");


bind(
									  eventType
									       , 
									       function
										)
							

컴포넌트에 이벤트와 핸들러 함수를 동적으로 할당. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


eventTypeStringY할당할 이벤트


functionFunctionY이벤트에 대한 핸들러 함수.



Sample
// (예제 1)
// input1의 onclick 이벤트에 대한 핸들러 함수를 직접 정의하여 할당. 
input1.bind("onclick", function(e){ alert(input1.getValue();}));

// (예제 2)
// 미리 commObj.ev_click 함수를 정의.
var commObj = {};
commObj.ev_click = function(e){
    alert("click :: "+this.id);
};

// input1 컴포넌트에 onclick 이벤트와 정의한 핸들러 함수를 동적으로 할당. 
input1.bind("onclick", commObj.ev_click );


changeClass(
									  oldClassName
									       , 
									       newClassName
										)
							

웹스퀘어 컴포넌트의 class를 변경. (웹스퀘어 컴포넌트 공통.) 기본적으로 addClass를 통해 추가된 class만 변경 가능. 웹스퀘어 컴포넌트의 class 속성에 직접 정의된 class를 삭제하려면 config.xml 파일에 아래 설정을 추가해야 함. 
// config.xml에 아래 설정을 추가. 
<removeDefaultClass value="true" />


Parameter

nametyperequireddescription


oldClassNameStringY변경할 class


newClassNameStringY새로 사용할 class



Sample
// inputBox 컴포넌트에 class가 속성으로 직접 정의됨.


// config.xml 파일에 아래를 추가.

    <removeDefaultClass value="true" />


// class를 변경 가능. 
// (tmpInputClass class를 tmpInputWarninClass로 변경.)
input1.changeClass("tmpInputClass","tmpInputWarninClass");


disableAfterDate(
									  dateStr
										)
							

입력 받은 날짜 이후의 날짜들을 달력에서 선택 불가능하도록 제한.


Parameter

nametyperequireddescription


dateStrStringY비활성화 처리의 기준 날짜.



Sample
calendar.disableAfterDate("20170410");
//display 예시 ) 2017년 4월 10일 이후 날짜는 비활성화되어 선택 불가능.


disableBeforeDate(
									  dateStr
										)
							

입력 받은 날짜 이전의 날짜들은 달력에서 선택 불가능하도록 제한.


Parameter

nametyperequireddescription


dateStrStringY비활성화 처리 기준 날짜



Sample
calendar.disableBeforeDate("20170410");
//display 예시 ) 2017년 4월 10일 이전 날짜는 비활성화 되어 선택 불가능.


disableDate(
									  dateStr
										)
							

특정 날짜를 비활성한다.


Parameter

nametyperequireddescription


dateStrStringY비활성할 날짜



Sample
calendar1.disableDate("20160627 20180627"); 또는 전체 날짜를 비활성화 할 경우
calendar1.disableDate("*");로 설정한다. (단, enableDate API로 활성화한 날짜는 비활성화되지 않는다.)


enableAllDate(
									  
										)
							

disableAfterDate 및 disableBeforeDate API를 통해서 입력일 이전/이후 날짜 선택을 가능하도록 변경.


Sample
calendar.enableAllDate();
// (출력 예) 비활성화된 날짜들이 다시 활성화되어 선택 가능.


enableDate(
									  dateStr
										)
							

특정 날짜를 활성화한다.


Parameter

nametyperequireddescription


dateStrStringY활성화할 날짜



Sample
calendar1.enableDate("20160627 20180627"); // 2016년 06월 27일, 2018년 06월 27일에 해당하는 날짜를 활성화 한다.
calendar1.enableDate("*"); // disableDate API로 비활성화한 날짜를 제외한 전체 날짜를 활성화한다.


focus(
									  
										)
							

웹스퀘어 컴포넌트에 포커스를 줌. (웹스퀘어 컴포넌트 공통.)





getDataListInfo(
									  
										)
							

컴포넌트와 바인딩된 DataList를 반환.



Return

typedescription


Objectnodeset, label, value id를 객체로 반환


Sample
// 사용 예
calendar1.getDataListInfo();


getDateFormat(
									  
										)
							

[default:yyyyMMdd]설정 된 dateFormat을 반환한다.



Return

typedescription


StringdateFormat 문자열 (yyyyMMdd, yyyy-MM-dd 등)


Sample
//setDateFormat API를 이용하여 dateFormat을 설정하지 않은경우
var returnValue = calendar1.getDateFormat();
//return 예시 ) "yyyyMMdd"


getDisabled(
									  
										)
							

현재 웹스퀘어 컴포넌트에 설정된 disabled 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Booleandisabled 속성 값


Sample
// 컴포넌트의 disabled 속성 값 확인 예제
var returnValue = componentId.getDisabled();
// (반환 값 예시) false


getFormattedValue(
									  
										)
							

현재 선택된 날짜를 dateFormat에 적용시켜 문자열로 반환한다.dateFormat을 적용하지 않은 경우 년월일시초의 순서로 별도의 구분자 없이 return 값이 반환된다. (calendarValueType에 따라 년월일시초의 적용 범위가 다르다)참고 ) dateFormat은 setDateFormat API로 설정한다.



Return

typedescription


Stringformat이 적용 된 선택 된 날짜의 문자열


Sample
//별도의 dateFormat을 적용하지 않고 선택 된 날짜가 2002년 04월 15일 인 경우

//calendarValueType="yearMonthDate" 로 정의 된 경우 - 기본달력
var tmpRs1 = calendar1.getFormattedValue();
//return 예시 ) "20020415"

//calendarValueType="yearMonth" 로 정의 된 경우
var tmpRs2 = calendar1.getFormattedValue();
//return 예시 ) "200204"


//아래와 같이 dateFormat을 적용 한 경우(setDateFormat API는 calendarValueType옵션을 고려해서 사용해야 한다. setDateFormat 참조)
calendar1.setDateFormat("yyyy MM-dd");

//calendarValueType="yearMonthDate" 로 정의 된 경우 - 기본달력
var tmpRs3 = calendar1.getFormattedValue();
//return 예시 ) ""2002 04-15""


getGenerator(
									  
										)
							

컴포넌트가 Generator에 의해 생성된 경우, 자신을 생성한 부모 Generator 객체를 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Object부모 Generator 객체


Sample
//부모 Generator가 자식으로 Trigger를 생성한 예제
  

// 아래 예제의 경우 trigger1을 클릭하면 generator1 객체가 console에 표시됨. 
 scwin.trigger1.onclick = function(){ console.log(this.getGenerator());} 



getID(
									  
										)
							

웹스퀘어 컴포넌트의 ID를 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


String웹스퀘어 컴포넌트 ID


Sample
// 동적으로 웹스퀘어 컴포넌트를 받을 경우, 아래와 같이 ID 확인 가능.
function fn_validCheck(tmpObj){
    var compID = tmpObj.getID();
}
// 위의 예제 에서 tmpObj가 "input1" ID를 가지고 있는 경우,
// (반환 값) "input1"


getInitStyle(
									  CSS
										)
							

컴포넌트의 초기 스타일을 반환. initStyle 속성을 true로 설정한 컴포넌트만 유효하게 동작한다.(웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


CSSStringN속성 (지정하지 않으면 모든 정보 출력)






getOpacity(
									  
										)
							

웹스퀘어 컴포넌트의 불투명도를 반환. (웹스퀘어 컴포넌트 공통.)엔진 내부적으로 CSS의 opacity 속성 값을 반환.



Return

typedescription


IntegerOpacity 값


Sample
// inputBox 컴포넌트에 opacity CSS를 적용.

        
// inputBox 컴포넌트의 opacity 값을 반환. 
var returnValue = input1.getOpacity(); 
// returnValue는 0 ~ 1 사이의 실수.
// (반환 값) "0.2"


getOriginalID(
									  
										)
							

웹스퀘어 컴포넌트의 originalID를 반환. (웹스퀘어 컴포넌트 공통.)originalID는 Scope 기능을 사용할 경우 존재. scope="true"인 WFrame를 사용할 경우, WFrame 내부의 컴포넌트 ID는 원래 사용자가 정의한 값(originalID) 앞에 prefix(wframeID + "_")가 추가되는 방식으로 변경됨.  originalID는 이 때, prefix가 추가되기 전 ID를 의미.



Return

typedescription


String컴포넌트의 originalID


Sample
// WFrame을 사용하는 다중 화면 구조 예시

// WFrame을 포함한 메인 화면 (main.xml) 
 

// 메인 화면 WFrame에 연결되는 소스 화면 (text.xml)


// text.xml 화면의 내부 스크립트에서 ID 및 originalID 확인하는 예제.
// getID 실행 
textbox1.getID(); // 실행 결과는 "wframe1_textbox1"
 
// getOriginalID 실행 
textbox1.getOriginalID(); // 실행 결과는 "textbox1"


getPluginName(
									  
										)
							

웹스퀘어 컴포넌트의 이름(pluginName)을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


String웹스퀘어 컴포넌트의 이름 (pluginName)


Sample
// 아래와 같이 공통 함수에서 동적으로 웹스퀘어 객체를 받는 경우, 컴포넌트 종류에 따른 분기 처리가 가능.
var commObj = {};

commObj.fn_makeReqData = function(tmpObj){
    var tmpID = tmpObj.getID(); // 컴포넌트 ID
    var tmpCompType = tmpObj.getPluginName();   // 컴포넌트 이름

    if(tmpCompType == "input"){
        //..로직..
    }else if(tmpCompType == "gridView"){
        //..로직 ..
    }else{
        //..로직..
    }
};


getPosition(
									  positionName
										)
							

웹스퀘어 컴포넌트의 위치(left, top)를 반환. (웹스퀘어 컴포넌트 공통.) 위치 값이 %로 설정된 경우, 픽셀로 변환된 값을 반환.


Parameter

nametyperequireddescription


positionNameStringY[left, top] 위치 종류




Return

typedescription


Number컴포넌트의 위치 값


Sample
// 아래와 같이 input 컴포넌트에 CSS 속성 margin이 적용된 경우,


// (예제) 위의 inputBox 컴포넌트의 top 값을 확인     
var returnValue = input1.getPosition("top"); 

// 픽셀 단위의 위치 값이 반환됨.

// (반환 값) 10


getReadOnly(
									  
										)
							

현재 웹스퀘어 컴포넌트에 설정된 readOnly 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Boolean현재 설정되어있는 readOnly 속성


Sample
// 컴포넌트의 readOnly 속성 값 확인 예제
var returnValue = componentId.getReadOnly();
// (반환 값 예시) false


getScope(
									  
										)
							

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)  scope="true"인 WFrame의 자식 컴포넌트가 아닌 경우, null을 반환.



Return

typedescription


ObjectWFrame 객체 또는 null


Sample
// (예제)
// 메인페이지에 wframe1이 있고, wframe1 내부에 wframe11이 존재. 
// 그리고, wframe11 내부에 textbox1이 존재.
   
textbox1.getScope(); 
// (반환 값) wframe11 객체


getScopeWindow(
									  
										)
							

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)scope="true"인 WFrame의 자식 컴포넌트가 아닌 경우, 전역 window 객체를 반환.



Return

typedescription


ObjectWFrame 객체의 scope 객체 또는 전역 window 객체


Sample
// (예제)
// 메인페이지에 wframe1이 있고, wframe1 내부에 wframe11이 존재. 
// 그리고, wframe11 내부에 textbox1이 존재.
   
var scope = textbox1.getScopeWindow();
scope.wframe11 === textbox1.getScope(); // true


getSelectedDay(
									  
										)
							

현재 선택된 요일을 소문자 영문으로 반환한다.날짜 선택이 없는 경우 ""(empty string)을 반환한다.



Return

typedescription


String[sunday, monday, tuesday, wednesday, thursday, friday, saturday]영문 요일 문자열


Sample
//2011년 1월 1일 토요일이 선택 된 경우
var returnValue = calendar1.getSelectedDay();
//return 예시 ) "saturday"


getSize(
									  sizeName
										)
							

웹스퀘어 컴포넌트의 크기(width, height)를 반환. (웹스퀘어 컴포넌트 공통.) %로 설정된 경우, 픽셀로 변환된 값을 반환.


Parameter

nametyperequireddescription


sizeNameStringY크기 값의 종류. sizeName 별 계산 방법은 아래 표를 참고. 
height : element.clientHeight
innerHeight : element.clientHeight + padding
outerHeight : element.clientHeight + padding + border
outerMarginHeight : element.clientHeight + padding + border + margin
width : element.clientWidth
innerWidth : element.clientWidth + padding
outerWidth : element.clientWidth + padding + border
outerMarginWidth : element.clientWidth + padding + border + margin




Return

typedescription


Number컴포넌트의 크기 값


Sample
var returnValue = componentId.getSize("width");
// (반환 예) 100 
// 픽셀 단위의 크기 값이 반환됨. 
// %로 설정된 경우, 픽셀로 변환된 값이 반환됨.


getStyle(
									  propertyName
										)
							

웹스퀘어 컴포넌트의 CSS 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


propertyNameStringY반환할 CSS 속성




Return

typedescription


StringCSS 속성 값


Sample
//아래와 같이 input 컴포넌트가 정의 된 경우


// (예제) 위의 inputBox 컴포넌트의 width 값을 확인   
var returnValue = input1.getStyle("width");

// (반환 값) "144px"


getStyleValue(
									  style
										)
							

[deprecated]getStyle 사용 권장.웹스퀘어 컴포넌트에 적용된 해당 CSS 속성 값을 반환.


Parameter

nametyperequireddescription


styleStringY반환하려는 CSS 속성.




Return

typedescription


Stringstyle 해당 CSS 속성 값 (색을 반환하는 경우, HexCode로 반환됨.)





getTitle(
									  
										)
							

컴포넌트의 title 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Stringtitle 속성 값.


Sample
// 아래와 같이 input 컴포넌트의 title 속성이 "이름 입력"으로 정의된 경우


var tmpTitle = input1.getTitle();
// (반환 값 예시) "이름 입력"


getUdcHome(
									  
										)
							

UDC 객체가 자신을 정의한 UDC 파일 경로를 파일명을 포함해서 반환. (웹스퀘어 컴포넌트 공통.)파일명은 마지막 .xml까지 포함. .xml을 제외한 경로는 getUdcRoot를 사용해서 반환.UDC 객체가 아닌 컴포넌트에서 호출된 경우에는 undefined가 반환됨.



Return

typedescription


StringUDC 파일 경로. (UDC가 아닌 경우, undefined가 반환됨.)


Sample
// 예제
// UDC 파일 경로는 /a/b/udc.xml 
// 화면 XML은  /a/c/main.xml 
// UDC 객체의 ID는 udc1
  
udc1.getUdcHome(); 
// (실행 결과) /a/b/udc.xml


getUdcRoot(
									  
										)
							

UDC 객체가 자신을 정의한  UDC 파일 경로를 반환. (웹스퀘어 컴포넌트 공통.)파일명을 포함하지 않음. 파일명을 포함한 경로는 getUdcHome을 사용해서 반환.UDC 객체가 아닌 컴포넌트에서 호출된 경우에는 undefined가 반환됨.



Return

typedescription


StringUDC 파일 경로. (UDC가 아닌 경우, undefined가 반환됨.)


Sample
// 예제
// UDC 파일 경로는 /a/b/udc.xml 
// 화면 XML은  /a/c/main.xml 
// UDC 객체의 ID는 udc1
  
udc1.getUdcHome();    
// (실행 결과) /a/b/


getUserData(
									  key
										)
							

setUserData로 웹스퀘어 컴포넌트에 설정한 key의 value 혹은 사용자가 직접 페이지 소스(XML)에 속성으로 정의한 value를 반환. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


keyStringY데이터의 key




Return

typedescription


Stringkey에 해당하는 value


Sample
// Input 컴포넌트에 사용자 속성(setTest)을 설정하는 예제


// 위에서 설정한 setTest을 값을 반환하는 예제. 
input1.getUserData("setTest");
// (반환 값) "Hello"

//setUserData를 통해 'valueTest'(key)와 'WebSquare'(data)로 설정하는 예제. 
input1.setUserData("valueTest","WebSquare");

// 위에서 설정한 setTest을 값을 반환하는 예제. 
input1.getUserData("WebSquare");
// (반환 값) "WebSquare"


getValue(
									  
										)
							

선택된 날짜값을 구분자 없이 반환한다.



Return

typedescription


String구분자 없는 날짜 문자열.


Sample
//선택된 날짜가 2011년 1월 1일 인 경우

//별도의 설정이 없는 기본 달력 또는 calendarValueType속성이 yearMonthDate인 경우, yyyyMMdd 형태.
var returnValue = calendar1.getValue();
//return 예시 ) "20110101" 

//calendarValueType속성이 yearMonth인 경우, yyyyMM 형태.
//return 예시 ) "201101"

calendarValueType속성이 yearMonthDateTime인 경우, yyyyMMddHHmm 형태.
//return 예시 ) "201101010000"

calendarValueType속성이 yearMonthDateTimeSec인 경우, yyyyMMddHHmmss 형태.
//return 예시 ) "20110101000000"


gotoCalendar(
									  dateStr
										)
							

dateStr에 해당하는 날짜로 이동한다.dateStr의 값은 구분자없이 yyyyMMdd 형태이다.


Parameter

nametyperequireddescription


dateStrStringY이동할 날짜 (yyyyMMdd 형태)



Sample
//2002년 04월 15일로 이동
calendar1.gotoCalendar("20020415");


gotoLastMonth(
									  
										)
							

현재 선택된 날짜를 1달 전으로 이동한다.


Sample
//현재 선택된 날짜가 2011년 1월 1일 인 경우
calendar1.gotoLastMonth(); 
//display 예시 ) 2010년 12월 1일이 선택된다.


gotoLastYear(
									  
										)
							

현재 선택된 날짜에서 1년 전으로 이동한다.


Sample
//현재 선택된 날짜가 2011년 1월 1일 인 경우
calendar1.gotoLastYear(); 
//display 예시 ) 2010년 1월 1일이 선택된다.


gotoMonth(
									  month
										)
							

month에 해당하는 월로 이동한다.해당 월이 유효하지 않는 경우, 최초 월(1)로 이동한다.


Parameter

nametyperequireddescription


monthString||NumberY이동하려는 월의 문자 또는 숫자.("02","2",2 모두 1월로 이동)



Sample
//현재 선택된 날짜가 2011년 1월 1일 인경우
calendar1.gotoMonth(5); // "05" , "5" , 5 동일 한 결과가 나타난다
//display 예시 ) 2011년 5월 1일이 선택된다.


gotoNextMonth(
									  
										)
							

현재 선택된 날짜를 1달 뒤로 이동한다.


Sample
//현재 선택된 날짜가 2011년 1월 1일 인 경우
calendar1.gotoNextMonth();
//display 예시 ) 2011년 2월 1일이 선택된다.


gotoNextYear(
									  
										)
							

현재 선택된 날짜를 1년 뒤로 이동한다.


Sample
//현재 선택된 날짜가 2011년 1월 1일 인 경우
calendar1.gotoNextYear(); 
//display 예시 ) 2012년 1월 1일이 선택된다.


gotoTime(
									  hour
									       , 
									       minute
										)
							

시간을 선택 할 수 있는 달력에서 hour과 minute에 해당하는 시간으로 이동한다.해당 시간이 유효하지 않는 경우, 최초 시(0)와 분(0)으로 설정한다.


Parameter

nametyperequireddescription


hourNumber||StringY이동하려는 시간.("02", "2", 2 모두 2시로 설정)


minuteNumber||StringY이동하려는 분.("05", "5", 5 모두 5분으로 설정)



Sample
//시간을 선택 할 수 있는 달력 타입에서만 동작
calendar1.gotoTime("01","11");  //"01", "1", 1 모두 1시로 이동
//display 예시 ) 1시 11분으로 이동.


gotoToday(
									  
										)
							

현재 날짜로 이동한다.


Sample
//yearMonthDate타입의 달력에서 "Today" 또는 "현재일" 버튼을 클릭한 것과 동일한 효과.
calendar1.gotoToday();


gotoYear(
									  year
										)
							

year에 해당하는 연도로 이동한다.해당 년도가 유효하지 않는 경우, 최초년도로 이동한다.


Parameter

nametyperequireddescription


yearString||NumberY이동하려는 연도.("2002", 2002 모두 2002년으로 이동)



Sample
//현재 선택된 날짜가 2011년 1월 1일인 경우
calendar1.gotoYear("2020"); 
//display 예시 ) 2020년 1월 1일이 선택된다.


hasClass(
									  className
										)
							

웹스퀘어 컴포넌트가 특정 class를 포함하고 있는지 확인. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


classNameStringY검색할 class 이름




Return

typedescription


Booleanclass의 포함 여부


Sample
// inputBox 컴포넌트에 class가 속성으로 직접 정의됨.

        
var returnValue = input1.hasClass("tmpInputClass");
// (반환 값) true


hide(
									  
										)
							

컴포넌트를 화면에서 보이지 않도록 숨깁니다.





removeAllCellClass(
									  
										)
							

setCellClass한 모든 날짜의 class를 초기화한다.


Sample
//아래와 같이 style영역에 tmpColor01 class가 정의 된 경우
<![CDATA[
    .tmpColor01{
        color:orange;
    }
]]>
calendar1.setCellClass( "20151015","tmpColor01" );
calendar1.setCellClass( "20150915","tmpColor01" );
calendar1.setCellClass( "20150815","tmpColor01" );
calendar1.removeAllCellClass();
// 각 cell에 적용했던 모든 class 삭제됨.


removeCellClass(
									  dateStr
										)
							

특정 날짜에 setCellClass한 class를 초기화한다.


Parameter

nametyperequireddescription


dateStrStringYclass를 지정할 날짜



Sample
//아래와 같이 style영역에 tmpColor01 class가 정의 된 경우
<![CDATA[
    .tmpColor01{
        color:orange;
    }
]]>
        
calendar1.setCellClass("20020415", "tmpColor01");
calendar1.removeCellClass("20020415");
//display 예시 ) 2002년 04월 15일에 해당하는 날짜의 글자색이 orange를 초기화 한다.


removeClass(
									  className
										)
							

웹스퀘어 컴포넌트에서 class를 삭제. (웹스퀘어 컴포넌트 공통.)기본적으로 addClass를 통해 추가된 class만 삭제 가능. 컴포넌트의 속성으로 직접 정의된 class를 삭제하기 위해서는 config.xml 파일에 아래 설정을 추가해야 함. 
 // config.xml 파일에 아래 설정 추가 
 <removeDefaultClass value="true" />


Parameter

nametyperequireddescription


classNameStringY삭제 할 class명



Sample
// inputBox의 속성으로 class가 직접 정의된 경우,


// config.xml 파일에 아래 항목을 추가.

    <removeDefaultClass value="true" />


// removeClass를 통해 삭제 가능. 
input1.removeClass("tmpInputClass");


removeHoliday(
									  
										)
							

holiday 설정을 초기화한다.


Sample
calendar1.removeHoliday(); 또는 전체 연도에 적용시에는


setCellClass(
									  dateStr
									       , 
									       className
										)
							

특정 날짜에 class를 지정한다.


Parameter

nametyperequireddescription


dateStrStringYclass를 지정할 날짜


classNameStringY지정할 class명



Sample
//아래와 같이 style영역에 tmpColor01 class가 정의 된 경우
<![CDATA[
    .tmpColor01{
        color:orange;
    }
]]>
        
calendar1.setCellClass("20020415", "tmpColor01");
//display 예시 ) 2002년 04월 15일에 해당하는 날짜의 글자색이 orange로 적용된다.


setDateFormat(
									  format
										)
							

dateFormat을 설정하며 format이 적용 된 value는 getFormattedValue API를 이용하여 반환 받을 수 있다. calendarValueType옵션에 따라 format으로 사용할 수 있는 문자열이 다르다.calendarValueType옵션이 yearMonthDate인 경우 사용할 수 있는 문자열은 yyyy, MM, dd이고,calendarValueType옵션이 yearMonth인 경우 사용할 수 있는 문자열은 yyyy, MM이고,calendarValueType옵션이 yearMonthDateTime인 경우 사용할 수 있는 문자열은 yyyy, MM, dd, HH, mm이고,calendarValueType옵션이 yearMonthDateTimeSec인 경우 사용할 수 있는 문자열은 yyyy, MM, dd, HH, mm, SS입니다.


Parameter

nametyperequireddescription


formatStringY적용할 dateFormat.(yyyy-MM-dd와 같은 문자열)



Sample
//2002년 04월 15일이 선택 되고 아래와 같이 format을 적용 한 경우
calendar1.setDateFormat("yyyy MM-dd");

//format 된 value를 반환.
var tmpVal1 = calendar1.getFormattedValue();
//return 예시 ) "2002 04-15"

//value를 반환.
var tmpVal2 = calendar1.getValue();
//return 예시 ) "20020415"    //format이 적용되어 있지 않다.


setDisabled(
									  disabled
										)
							

컴포넌트의 disabled 속성을 설정.


Parameter

nametyperequireddescription


disabledBooleanYdisabled 상태
true: disabled 속성 활성화
false: disabled 속성 비활성화



Sample
//컴포넌트에 disabled 설정
componentId.setDisabled(true);


setEventPause(
									  evList
									       , 
									       flag
										)
							

지정한 이벤트를 중단함. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


evListStringN중단할 이벤트 목록. (null을 지정할 경우 해당 컴포넌트의 모든 사용자 이벤트가 중단되거나 중단 해제됨.)


flagBooleanY이벤트 중단 여부. 
true: 중단
false: 중단 해제.



Sample
// (예제 1)
// onclick 이벤트를 중단. 
input1.setEventPause("onclick", true); 

// (예제 2)
// onfocus 및 onblur 이벤트의 중단을 해제.
input1.setEventPause("onfocus,onblur", false); 

// (예제 3)
// input1에 등록된 모든 사용자 이벤트를 중단.
input1.setEventPause(null, true);


setHoliday(
									  dateStr
									       , 
									       removeHoliday
										)
							

특정 날짜에 holiday를 지정한다.


Parameter

nametyperequireddescription


dateStrStringYholiday를 지정할 날짜


removeHolidayBooleanN기존 holiday 삭제 여부



Sample
calendar1.setHoliday("20160627"); 또는 전체 연도에 적용시에는
calendar1.setHoliday("*0815");로 설정한다. 
//display 예시 ) 2016년 06월 27일에 해당하는 날짜의 글자색이 빨간색으로 적용된다.


setHolidayRef(
									  setHolidayRef
										)
							

holidayRef 속성을 설정하는 기능으로 DataCollection과 연동시 "data:"라는 prefix를 꼭 붙여야한다.명시하지 않는 경우 InstanceData의 XPath로 인식한다.


Parameter

nametyperequireddescription


setHolidayRefStringY적용할 setHolidayRef 경로.



Sample
//dataList1의 col1과 calendar 컴포넌트의 공휴일 표시하려는 경우
calendar.setHolidayRef("data:dataList1.col1");

//InstanceData의 test/holiday와 연동 할 경우.
calendar.setHolidayRef("test/holiday");


setInitStyle(
									  property
										)
							

컴포넌트의 초기 스타일을 복구한다. initStyle 속성을 true로 설정한 컴포넌트만 유효하게 동작한다 (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


propertyStringNCSS 속성 (지정하지 않으면 모든 속성의 초기 값으로 복구.)



Sample
// (예제)
group1.setInitStyle();


setOpacity(
									  value
										)
							

웹스퀘어 컴포넌트의 불투명도를 설정. (웹스퀘어 컴포넌트 공통.)엔진 내부적으로 CSS 속성인 opacity(불투명도)를 설정.


Parameter

nametyperequireddescription


valueNumberYOpacity 값 (0과 1 사이의 실수)



Sample
// (예제) 불투명도를 0.45로 설정
componentId.setOpacity(0.45);


setPosition(
									  left
									       , 
									       top
									       , 
									       mode
										)
							

웹스퀘어 컴포넌트의 위치(left, top)를 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


leftNumberY설정할 left 위치 값 또는 null.


topNumberY설정할 top 위치 값 또는 null.


modeStringN위치 설정 방법. [default: absolute, delta] 
absolute: 입력된 값을 위치로 설정.
delta: 현재 위치에 입력된 left 및 top 값을 추가.



Sample
// (예제) 컴포넌트의 top만 100px로 설정.
componentId.setPosition(null, 100);


setReadOnly(
									  readOnly
										)
							

웹스퀘어 컴포넌트의 readOnly 속성을 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


readOnlyBooleanYreadOnly 속성 활성화 여부. ( "true" : 활성화, "false" : 비활성화)



Sample
// 컴포넌트의 readOnly 속성을 true로 설정하는 예.
componentId.setReadOnly(true);


setSize(
									  width
									       , 
									       height
										)
							

웹스퀘어 컴포넌트의 크기(width, height)를 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


widthNumberY새로 설정할 컴포넌트의 width 값 또는 null


heightNumberY새로 설정할 컴포넌트의 height 값 또는 null



Sample
// (예제) 컴포넌트의 height만 100px로 설정.
componentId.setSize(null,100);


setSkin(
									  skinName
										)
							

skin을 설정한다.


Parameter

nametyperequireddescription


skinNameStringY[class1, class2, class3, class4, class5]사용할 skin명



Sample

calendar1.setSkin("class2");


setStyle(
									  propertyName
									       , 
									       value
										)
							

웹스퀘어 컴포넌트의 CSS 속성을 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


propertyNameStringY설정할 CSS 속성


valueStringY해당 CSS 속성에 적용할 값



Sample
// (예제 1) 컴포넌트의 width를 200px로 설정
componentId.setStyle("width", "200px");

// (예제 2) 배경색을 olive로 변경
componentId.setStyle("background-color","olive");


setUserData(
									  key
									       , 
									       value
										)
							

웹스퀘어 컴포넌트에 임의의 데이터를 설정. (웹스퀘어 컴포넌트 공통.) 컴포넌트에 설정 가능한 key를 입력해야 함. 설정 가능한 key가 아닌 경우, 해당 내용이 로그에 출력됨.


Parameter

nametyperequireddescription


keyStringY설정할 데이터의 key


valueStringY설정한 데이터의 value



Sample
// 컴포넌트에 'data'라는 key로 'WebSquare'라는 value를 설정하는 예제.

componentId.setUserData("data", "WebSquare");

// 컴포넌트에 설정이 불가능한 key를 임력할 경우, key 설정이 불가능. 
 
componentId.setUserData("title", "WebSquare");
// 아래와 같이 로그가 출력됨. 
// !!!WARNING - [title] can't be defined as UserData.


show(
									  displayType
										)
							

컴포넌트를 화면에 보이도록 설정합니다.


Parameter

nametyperequireddescription


displayTypeStringNdisplay의 속성 값






toggleClass(
									  className
										)
							

웹스퀘어 컴포넌트에서 특정 class를 제거하거나 추가. (웹스퀘어 컴포넌트 공통.)웹스퀘어 컴포넌트가 파라미터로 주어진 class를 포함한 경우, 해당 class를 제거. 웹스퀘어 컴포넌트에 파라미터로 주어진 class가 없는 경우, 해당 class를 추가. 기본적으로 addClass를 통해 추가된 class만 삭제 가능. 웹스퀘어 컴포넌트의 속성으로 직접 정의된 class를 삭제하기 위해서는 config.xml 파일에 아래 설정을 추가. 
 // config.xml 파일에 아래 설정 추가
 <removeDefaultClass value="true" />


Parameter

nametyperequireddescription


classNameStringY추가/삭제할 class



Sample
// inputBox 컴포넌트에 class가 속성으로 직접 정의됨.


//config.xml 파일에 아래를 추가.

    <removeDefaultClass value="true" />


// tmpInputClass class를 삭제.
input1.toggleClass("tmpInputClass");

// (위에서 삭제된) tmpInputClass class를 다시 추가.
input1.toggleClass("tmpInputClass");


trigger(
									  type
									       , 
									       array
										)
							

컴포넌트에서 특정 이벤트를 발생시킴. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


typeStringY발생시킬 이벤트


arrayArrayN이벤트 핸들러에 전달할 파라미터 배열



Sample
// (예제 1)
// input1 컴포넌트에 onclick 이벤트를 발생시킴.
input1.trigger("onclick");

// (예제 2)
// input1에 onviewchange 이벤트를 발생시키고 핸들러 함수에 (1,2) 인자를 전달하여 호출.
input1.trigger("onviewchange", [1,2]);


unbind(
									  type
									       , 
									       function
										)
							

컴포넌트에서 이벤트를 제거. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


typeStringN제거할 이벤트. (생략할 경우 해당 컴포넌트의 모든 이벤트를 제거.)


functionFunctionN제거할 이벤트의 핸들러 함수. (생략할 경우 해당 위에 지정한 이벤트에 등록된 모든 핸들러 함수를 제거.)



Sample
// (예제 1)
// input1에 등록된 모든 이벤트를 제거.
input1.unbind();

// (예제 2)
// input1의 onviewchange 이벤트에 대한 모든 핸들러 함수를 제거.
input1.unbind("onviewchange");

// (예제 3)
// input1의 onviewchange 이벤트에 대한 func1 이벤트 핸들러 함수를 제거.
input1.unbind("onviewchange", func1);


visible(
									  flag
										)
							

[deprecated] show/hide 혹은 setStyle 사용을 권장.엔진 내부적으로 CSS visibility 속성을 설정.


Parameter

nametyperequireddescription


flagBooleanY설정할 CSS visibility 속성 값 
true : visibility: visible;
false : visibility: hidden;










Copyrights Inswave Systems Co., Ltd.



