


WebSquare.uiplugin.linkedDataList 









PropertyEventMethod찾아보기

WebSquare.uiplugin.linkedDataList - 5.0_5.4826M.20230213.171915





DataList의 데이터를 필터링하거나 정렬한 결과만을 저장하는 객체입니다.
 linkedDataList를 직접 gridView에 바인딩하는 기능은 지원하지 않습니다.
 SP5에서는 linkedDataList를 사용하는 것 자체를 권장하지 않습니다.
 그래도 사용한다면 아래의 컴포넌트에만 사용할 것을 권장합니다.
  - AutoComplete 
  - CheckComboBox 
  - MultiSelect 
  - SelectBox
 linkedDataList와 바인딩된 컴포넌트에서는 ref를 사용하지 않는 것을 권장합니다.
 DataList의 데이터는 1,000 건 이하를 권장하며 최대 10,000건까지 지원합니다.

Type


uiplugin

Property Summary




bind

linkedDataList가 바인딩 할 dataList의 id



id

linkedDataList의 id



rowStatusNodeName

json 또는 xml형태로 data를 가져올 때 rowStatus 키(노드) 이름을 설정하는 기능



userData1

사용자 정의 데이터 속성



userData2

사용자 정의 데이터 속성



userData3

사용자 정의 데이터 속성



Event Summary


Method Summary




clearFilter(
									  
										)
								

linkedDataList에 설정되어 있는 filter상태를 초기화합니다



clearSort(
									  
										)
								

linkedDataList의 모든 정렬을 취소해줍니다



clearSortFilter(
									  
										)
								

linkedDataList에 설정된 sort상태의 filter를 초기상태로 합니다



getAllData(
									  
										)
								

linkedDataList의 모든 data를 배열로 반환합니다



getAllFilteredData(
									  
										)
								

linkedDataList에서 filterRowIndex 순서의 모든 fliteredData를 배열로 반환합니다



getAllFilteredJSON(
									  
										)
								

linkedDataList에 filteredRow 순서의 모든 filteredData를 JSON객체로 반환합니다



getAllFilteredXML(
									  options
										)
								

linkedDataList에 filteredRow의 순서의 모든 filteredData를 XML로 반환합니다



getAllJSON(
									  
										)
								

linkedDataList의 모든 data를 JSON객체로 반환합니다



getAllNoFilteredData(
									  
										)
								

linkedDataList의 filter상태가 되지 않은 상태의 모든 데이터를 가져옵니다



getAllXML(
									  
										)
								

linkedDataList의 모든 data를 XML로 반환합니다



getCellData(
									  rowIndex
									       , 
									       colIndex
										)
								

rowIndex와 colIndex에 해당하는 셀의 데이터를 반환합니다



getColData(
									  colID
										)
								

colIndex에 해당하는 열의 데이터(filter나 sort처리되지 않은)를 배열로 반환합니다



getColumnDistinctDataArray(
									  colIndex
										)
								

해당 colIndex에 존재하는 중복된 항목을 제거한 data를 배열을 정렬하여 보여줍니다



getDataLength(
									  
										)
								

현재 화면에 보이는 행의 수를 반환합니다



getDataRow(
									  filteredRowIndex
										)
								

rowIndex에 해당하는 행의 데이터를 컬럼의 아이디를 키로 하는 해쉬 형태로 반환합니다



getDeletedData(
									  
										)
								

삭제 상태인 행들을 배열로 반환합니다



getDeletedIndex(
									  
										)
								

삭제 상태인 행의 번호를 배열로 반환합니다



getDeletedJSON(
									  
										)
								

삭제 상태인 행들의 데이터를 JSON객체로 반환합니다



getDeletedXML(
									  
										)
								

삭제 상태인 행들의 데이터를 XML로 반환합니다



getFilterCondition(
									  
										)
								

linkedDataList의 filterCondition을 반환하는 함수



getFilteredColData(
									  colIndex
										)
								

FilteredRow에 해당하는 Col의 데이터를 배열로 반환합니다



getFilteredRowIndex(
									  realRowIndex
										)
								

필터링된 상태의 행 인덱스를 반환



getFusionChartData(
									  chartType
									       , 
									       labelColumn
									       , 
									       seriesColumns
										)
								

linkedDataList를 fusionChart의 json데이터로 반환합니다



getID(
									  
										)
								

linkedDataList 객체의 id를 반환합니다



getInsertedData(
									  
										)
								

삽입 상태인 행들의 데이터를 배열로 반환합니다



getInsertedIndex(
									  
										)
								

삽입 상태인 행의 번호를 배열로 반환합니다



getInsertedJSON(
									  
										)
								

삽입 상태인 행들의 데이터를 JSON객체로 반환합니다



getInsertedXML(
									  
										)
								

삽입 상태인 행들의 데이터를 XML로 반환합니다



getLinkedRealRowIndex(
									  filteredRowIndex
										)
								

linkedDataList를 독립적인 0번째부터 시작하는 data set으로 가정했을때의 realRowIndex, 즉 linkedDataList 세계에서의 realRowIndex



getMatchedColumnData(
									  matchCol
									       , 
									       dataValue
									       , 
									       targetCol
									       , 
									       exactMatch
									       , 
									       stRowIndex
									       , 
									       lastRowIndex
										)
								

stRowIndex부터 lastRowIndex 까지의 범위의 행중에서 colIndex의 값이 dataValue와 같은 행들을 찾아서 targetCol에 해당하는 열의 값들을 배열로 반환합니다



getMatchedData(
									  colID
									       , 
									       dataValue
									       , 
									       exactMatch
									       , 
									       stRowIndex
									       , 
									       lastRowIndex
										)
								

stRowIndex부터 lastRowIndex 까지의 범위의 행중에서 colID 값이 dataValue와 같은 행들의 data를 배열로 반환합니다



getMatchedIndex(
									  colID
									       , 
									       dataValue
									       , 
									       exactMatch
									       , 
									       stRowIndex
									       , 
									       lastRowIndex
										)
								

stRowIndex부터 lastRowIndex 까지의 범위의 행중에서 colID의 값이 dataValue와 같은 행들의 index를 반환합니다



getMatchedJSON(
									  colID
									       , 
									       dataValue
									       , 
									       exactMatch
									       , 
									       stRowIndex
									       , 
									       lastRowIndex
										)
								

stRowIndex부터 lastRowIndex까지의 범위의 행중에서 colID의 값이 dataValue와 같은 행들의 data를 JSON객체로 반환합니다



getMatchedXML(
									  colID
									       , 
									       dataValue
									       , 
									       exactMatch
									       , 
									       stRowIndex
									       , 
									       lastRowIndex
										)
								

stRowIndex부터 lastRowIndex까지의 범위의 행중에서 colID의 값이 dataValue와 같은 행들의 data를 XML로 반환합니다



getModifiedData(
									  
										)
								

변경(삽입, 갱신, 삭제) 행들의 데이터를 배열로 반환합니다



getModifiedIndex(
									  
										)
								

추가나 삭제 상태인 행의 번호를 배열로 반환합니다



getModifiedJSON(
									  
										)
								

변경(삽입, 갱신, 삭제) 행들의 데이터를 JSON객체로 반환합니다



getModifiedXML(
									  
										)
								

변경(삽입, 갱신, 삭제) 행들의 데이터를 XML로 반환합니다



getObjectType(
									  
										)
								

dataCollection의 Type을 반환합니다



getOption(
									  attr
										)
								

linkedDataList 객체의 옵션을 조회하는 API



getOriginalCellData(
									  filteredRowIndex
									       , 
									       colID
										)
								

filteredRowIndex와 colID에 해당하는 셀의 데이터를 반환합니다



getParentRealRowIndex(
									  linkedRealRowIndex
										)
								

linkedRealRowIndex(linkedDataList 세계에서의 realRowIndex)를 통해 실제 realRowIndex(부모 dataList에 해당하는 rowIndex)를 반환한다



getParentRowIndex(
									  rowIndex
										)
								

drilldown 사용시 rowIndex에 해당하는 행의 부모 행의 rowIndex를 반환합니다



getRangeData(
									  from
									       , 
									       to
										)
								

from부터 to 까지의 범위의 행의 data를 배열로 반환합니다



getRangeJSON(
									  from
									       , 
									       to
										)
								

from부터 to 까지의 범위의 행의 data를 JSON객체로 반환합니다



getRangeXML(
									  from
									       , 
									       to
										)
								

from부터 to 까지의 범위의 행의 data를 xml로 반환합니다



getRealRowIndex(
									  filteredRowIndex
										)
								

filteredRowIndex에 대한 실제 데이터의 filteredRowIndex를 리턴한다



getRowCount(
									  
										)
								

linkedDataList의 데이터 row의 건수를 반환합니다



getRowData(
									  filteredRowIndex
										)
								

rowIndex에 해당하는 행의 데이터를 배열로 반환합니다



getRowIndexByStatus(
									  statusStr
										)
								

statusStr과 상태가 일치하는 행의 번호를 배열로 반환합니다



getRowJSON(
									  filteredRowIndex
										)
								

filteredRowIndex에 해당하는 행의 data를 JSON객체로 반환합니다



getRowStatus(
									  filteredRowIndex
										)
								

filteredRowIndex에 해당하는 행의 상태를 반환합니다



getRowStatusValue(
									  filteredRowIndex
										)
								

filteredRowIndex에 해당하는 행의 상태를 숫자로 반환합니다



getRowXML(
									  filteredRowIndex
										)
								

filteredRowIndex에 해당하는 행의 data를 XML로 반환합니다



getScope(
									  
										)
								

컴포넌트가 scope=true인 wframe의 자식 컴포넌트일 때 해당 부모 wframe 객체를 반환하는 함수  
 scope=true인 wframe의 자식 컴포넌트가 아닐 경우 null을 반환한다



getScopeWindow(
									  
										)
								

컴포넌트가 scope=true인 wframe의 자식 컴포넌트일 때 해당 부모 wframe의 scope객체를 반환하는 함수  
 scope=true인 wframe의 자식 컴포넌트가 아닐 경우 전역 window객체를 반환한다



getSortCondition(
									  
										)
								

linkedDataList의 sortCondition을 반환하는 함수



getTotalCol(
									  
										)
								

컬럼의 개수를 반환 한다



getTotalRow(
									  
										)
								

행의 개수를 반환 한다



getUnmatchedColumnData(
									  matchCol
									       , 
									       dataValue
									       , 
									       targetCol
									       , 
									       exactMatch
									       , 
									       stRowIndex
									       , 
									       lastRowIndex
										)
								

stRowIndex부터 lastRowIndex 까지의 범위의 행중에서 colIndex의 값이 dataValue와 다른 행들을 찾아서 targetCol에 해당하는 열의 값들을 배열로 반환합니다



getUnmatchedData(
									  colID
									       , 
									       dataValue
									       , 
									       exactMatch
									       , 
									       stRowIndex
									       , 
									       lastRowIndex
										)
								

stRowIndex부터 lastRowIndex 까지의 범위의 행중에서 colID의 값이 dataValue와 다른 행들의 data를 배열로 반환합니다



getUnmatchedIndex(
									  colID
									       , 
									       dataValue
									       , 
									       exactMatch
									       , 
									       stRowIndex
									       , 
									       lastRowIndex
										)
								

stRowIndex부터 lastRowIndex 까지의 범위의 행중에서 colID의 값이 dataValue와 다른 행들의 index를 배열로 반환합니다



getUnmatchedJSON(
									  colID
									       , 
									       dataValue
									       , 
									       exactMatch
									       , 
									       stRowIndex
									       , 
									       lastRowIndex
										)
								

stRowIndex부터 lastRowIndex 까지의 범위의 행중에서 colID의 값이 dataValue와 다른 행들의 data를 JSON객체로 반환합니다



getUnmatchedXML(
									  colID
									       , 
									       dataValue
									       , 
									       exactMatch
									       , 
									       stRowIndex
									       , 
									       lastRowIndex
										)
								

stRowIndex부터 lastRowIndex 까지의 범위의 행중에서 colID의 값이 dataValue와 다른 행들의 data를 Xml로 반환합니다



getUpdatedData(
									  
										)
								

갱신 상태인 행들의 데이터를 배열로 반환합니다



getUpdatedIndex(
									  
										)
								

갱신 상태인 행의 번호를 배열로 반환합니다



getUpdatedJSON(
									  
										)
								

갱신 상태인 행들의 데이터를 JSON객체로 반환합니다



getUpdatedXML(
									  
										)
								

갱신 상태인 행들의 데이터를 XML로 반환합니다



multisort(
									  options
										)
								

option에 따라서 여러개의 열을 동시에 정렬해줍니다



removeColumnFilter(
									  colID
										)
								

colID에 해당하는 열에 적용된 filter를 삭제합니다



removeColumnFilterAll(
									  
										)
								

모든 열에 적용된 filter를 삭제합니다



setColumnFilter(
									  filterOptions
										)
								

colIndex에 해당하는 열에 filter를 적용합니다



setCondition(
									  type
									       , 
									       condition
										)
								

linkedDataList의 필터링 혹은 정렬 조건을 설정



setOption(
									  key
									       , 
									       value
										)
								

linkedDataList 객체의 옵션을 설정하는 API



sort(
									  bodyColumnID
									       , 
									       sortType
										)
								

linkedDataList의 bodyColumnID에 해당하는 열을 정렬해줍니다



Property Detail




bind

linkedDataList가 바인딩 할 dataList의 id


id

linkedDataList의 id


rowStatusNodeName

json 또는 xml형태로 data를 가져올 때 rowStatus 키(노드) 이름을 설정하는 기능. 기본값은 "rowStatus"


userData1

사용자 정의 데이터 속성. getUserData("userData1") API를 통해 설정한 값을 얻어올 수 있음. 
 // 속성 값 얻어오기 예시
 getUserData("userData1");


userData2

사용자 정의 데이터 속성. getUserData("userData2") API를 통해 설정한 값을 얻어올 수 있음. 
 // 속성 값 얻어오기 예시
 getUserData("userData2");


userData3

사용자 정의 데이터 속성. getUserData("userData3") API를 통해 설정한 값을 얻어올 수 있음. 
 // 속성 값 얻어오기 예시
 getUserData("userData3");





Event Detail




Method Detail




clearFilter(
									  
										)
							

linkedDataList에 설정되어 있는 filter상태를 초기화합니다.





clearSort(
									  
										)
							

linkedDataList의 모든 정렬을 취소해줍니다.


Sample

linkedDataList1.clearSort(); // 정렬을 취소한다.


clearSortFilter(
									  
										)
							

linkedDataList에 설정된 sort상태의 filter를 초기상태로 합니다.





getAllData(
									  
										)
							

linkedDataList의 모든 data를 배열로 반환합니다.



Return

typedescription


ObjectlinkedDataList의 data 배열 (1차원 배열)


Sample
// id가 a,b,c,d,e인 5개 컬럼이 존재하는 linkedDataList에서 전체 행이 20 Row인 경우.
var returnArr = linkedDataList1.getAllData();
returnArr.length 는 100이다.
returnArr[0] 은 첫번째 행의 a컬럼의 값. 
returnArr[1] 은 첫번째 행의 b컬럼의 값.
... 
returnArr[5] 는 두번째 행의 a컬럼의 값.
...


getAllFilteredData(
									  
										)
							

linkedDataList에서 filterRowIndex 순서의 모든 fliteredData를 배열로 반환합니다.



Return

typedescription


ObjectlinkedDataList의 data 배열 (1차원 배열)





getAllFilteredJSON(
									  
										)
							

linkedDataList에 filteredRow 순서의 모든 filteredData를 JSON객체로 반환합니다.



Return

typedescription


ObjectlinkedDataList의 JSON객체 data





getAllFilteredXML(
									  options
										)
							

linkedDataList에 filteredRow의 순서의 모든 filteredData를 XML로 반환합니다.


Parameter

nametyperequireddescription


optionsObjectY




Return

typedescription


Xml ElementlinkedDataList의 data





getAllJSON(
									  
										)
							

linkedDataList의 모든 data를 JSON객체로 반환합니다.



Return

typedescription


ObjectlinkedDataList의 JSON객체 data


Sample
// id가 a,b,c,d,e인 5개 컬럼이 존재하는 linkedDataList
var returnJSONStr = JSON.stringify(linkedDataList1.getAllJSON());
 baseNode : gridData , repeatNode : vector , valueNode : value 일 경우,
 returnXMLStr은 예는 다음과 같다.
 [{"a":"20120101","b":"23456","c":"Inswave","d":"WebSquare","e":"sample"},
  {"a":"20120102","b":"34567","c":"Inswave","d":"WebSquare","e":"sample2"}
  ... (중략) ]


getAllNoFilteredData(
									  
										)
							

linkedDataList의 filter상태가 되지 않은 상태의 모든 데이터를 가져옵니다.



Return

typedescription


ObjectlinkedDataList의 data 배열 (1차원 배열)





getAllXML(
									  
										)
							

linkedDataList의 모든 data를 XML로 반환합니다.



Return

typedescription


Xml ElementlinkedDataList의 data


Sample
// id가 a,b,c,d,e인 5개 컬럼이 존재하는 linkedDataList
var returnXMLStr = WebSquare.xml.indent(linkedDataList1.getAllXML());
baseNode : gridData , repeatNode : vector , valueNode : value 일 경우,
returnXMLStr은 예는 다음과 같다.















    ... (중략)



getCellData(
									  rowIndex
									       , 
									       colIndex
										)
							

rowIndex와 colIndex에 해당하는 셀의 데이터를 반환합니다.


Parameter

nametyperequireddescription


rowIndexNumberY셀의 행 번호


colIndexStringY셀의 컬럼 번호 혹은 컬럼의 아이디




Return

typedescription


StringrowIndex와 colIndex에 해당하는 셀의 데이터


Sample

var returnValue = linkedDataList1.getCellData(0, "a"); // 첫 번째 row, "a" column에 해당하는 cell의 데이터를 반환


getColData(
									  colID
										)
							

colIndex에 해당하는 열의 데이터(filter나 sort처리되지 않은)를 배열로 반환합니다.


Parameter

nametyperequireddescription


colIDNumberY데이터를 가져올 열 번호 혹은 컬럼 아이디




Return

typedescription


ObjectcolIndex에 해당하는 열의 데이터의 배열


Sample

var returnArr =  linkedDataList.getColData('a'); // returnArr는 'a' 컬럼의 데이터 배열.


getColumnDistinctDataArray(
									  colIndex
										)
							

해당 colIndex에 존재하는 중복된 항목을 제거한 data를 배열을 정렬하여 보여줍니다.


Parameter

nametyperequireddescription


colIndexNumberY중복된 항목을 제거한 data를 검색 col의 Index




Return

typedescription


Objectdata를 저장한 배열





getDataLength(
									  
										)
							

현재 화면에 보이는 행의 수를 반환합니다. getRowCount()와 동일.



Return

typedescription


number행의 수





getDataRow(
									  filteredRowIndex
										)
							

rowIndex에 해당하는 행의 데이터를 컬럼의 아이디를 키로 하는 해쉬 형태로 반환합니다.


Parameter

nametyperequireddescription


filteredRowIndexNumberY데이터를 가져올 행 번호




Return

typedescription


ObjectfilteredRowIndex에 해당하는 행의 데이터의 배열


Sample
//id가 a,b,c,d,e인 5개 컬럼이 존재하는 linkedDataList1에서 a컬럼의 dataType이 date이고 b컬럼의 dataType이 number이며 각각의 displayFormat이 yyyy.MM.dd, #,###인 경우.
//첫번째 행의 각 컬럼의 데이터는 다음과 같다. ( 20120101 , 23456 , Inswave , WebSquare , sample )
var dataHash = linkedDataList1.getDataRow(0);   
for(var i in dataHash){
    alert(  i +  ' : ' + dataHash[i] );
}                   
 출력되는 데이터는 다음과 같다. 
 a : 20120101
 b : 23456
 c : Inswave
 d : WebSquare
 e : sample


getDeletedData(
									  
										)
							

삭제 상태인 행들을 배열로 반환합니다.



Return

typedescription


Object삭제 상태인 행들의 데이터 배열 (2차원 배열)


Sample

var returnArr = linkedDataList1.getDeletedData(); // returnArr는 삭제 상태(3,4, D,V)의 행들의 데이터 배열.


getDeletedIndex(
									  
										)
							

삭제 상태인 행의 번호를 배열로 반환합니다.



Return

typedescription


Object삭제 상태인 행의 번호의 배열


Sample

var returnArr = linkedDataList1.getDeletedIndex(); // returnArr는 삭제 상태(3,4, D,V)의 행들의 배열.


getDeletedJSON(
									  
										)
							

삭제 상태인 행들의 데이터를 JSON객체로 반환합니다.



Return

typedescription


Object삭제 상태인 행들의 JSON객체 데이터


Sample

var returnJsonStr = JSON.stringify(linkedDataList1.getDeletedJSON()); // returnJsonStr 은 삭제 상태(3,4, D,V)의 행들의 데이터 JSON객체 문자열.


getDeletedXML(
									  
										)
							

삭제 상태인 행들의 데이터를 XML로 반환합니다.



Return

typedescription


XML Element삭제 상태인 행들의 데이터 XML


Sample

var returnXMLStr = WebSquare.xml.indent(linkedDataList1.getDeletedXML()); // returnXMLStr 은 삭제 상태(3,4, D,V)의 행들의 데이터 XML 문자열.


getFilterCondition(
									  
										)
							

linkedDataList의 filterCondition을 반환하는 함수





getFilteredColData(
									  colIndex
										)
							

FilteredRow에 해당하는 Col의 데이터를 배열로 반환합니다.


Parameter

nametyperequireddescription


colIndexnumberY




Return

typedescription


ObjectcolIndex에 해당하는 열의 filter데이터의 배열


Sample

var returnArr =  linkedDataList.getFilteredColData('a'); // returnArr는 'a' 컬럼의 filter데이터 배열.


getFilteredRowIndex(
									  realRowIndex
										)
							

필터링된 상태의 행 인덱스를 반환.


Parameter

nametyperequireddescription


realRowIndexNumberY필터링되지 않은 상태의 행 인덱스.




Return

typedescription


Number필터링된 된 상태의 행 인덱스





getFusionChartData(
									  chartType
									       , 
									       labelColumn
									       , 
									       seriesColumns
										)
							

linkedDataList를 fusionChart의 json데이터로 반환합니다


Parameter

nametyperequireddescription


chartTypeStringYfusionChart의 차트타입


labelColumnStringYfusionChart의 lable 데이터로 사용할 DataCollection의 column의 ID값


seriesColumnsStringYfusionChart의 series 데이터로 사용할 DataCollection column 정보로 배열형식의 문자열




Return

typedescription


ObjectfusionChart_Data 변환된 fusionChart data(json)


Sample
var chartData = linkedDataList1.getFusionChartData("column2D","Month","[['Year1','Year2']]");
chartObject.setJSONData(chartData);


getID(
									  
										)
							

linkedDataList 객체의 id를 반환합니다.



Return

typedescription


StringlinkedDataList 객체의 id를 반환합니다.





getInsertedData(
									  
										)
							

삽입 상태인 행들의 데이터를 배열로 반환합니다.



Return

typedescription


Object삽입 상태인 행들의 데이터 배열 (2차원 배열)


Sample

var returnArr = linkedDataList1.getInsertedData(); // returnArr는 삽입 상태(2, C)의 행들의 데이터 배열.


getInsertedIndex(
									  
										)
							

삽입 상태인 행의 번호를 배열로 반환합니다.



Return

typedescription


Object삽입 상태인 행의 번호의 배열


Sample

var returnArr = linkedDataList1.getInsertedIndex(); // returnArr는 삽입 상태(2, C)의 행들의 배열.


getInsertedJSON(
									  
										)
							

삽입 상태인 행들의 데이터를 JSON객체로 반환합니다.



Return

typedescription


Object삽입 상태인 행들의 JSON객체 데이터


Sample

var returnJsonStr = JSON.stringify(linkedDataList1.getInsertedJSON()); // returnJsonStr 은 삽입 상태(2, C)의 행들의 데이터 JSON객 문자열.


getInsertedXML(
									  
										)
							

삽입 상태인 행들의 데이터를 XML로 반환합니다.



Return

typedescription


XML Element삽입 상태인 행들의 데이터 XML


Sample

var returnXMLStr = WebSquare.xml.indent(linkedDataList1.getInsertedXML()); // returnXMLStr 은 삽입 상태(2, C)의 행들의 데이터 XML 문자열.


getLinkedRealRowIndex(
									  filteredRowIndex
										)
							

linkedDataList를 독립적인 0번째부터 시작하는 data set으로 가정했을때의 realRowIndex, 즉 linkedDataList 세계에서의 realRowIndex. drilldown에서 주로 사용


Parameter

nametyperequireddescription


filteredRowIndexNumberY




Return

typedescription


NumberlinkedDataList 내부의 realRowIndex


Sample
 // dataList의 row가 [0,1,2,3,4,5,6,7,8,9], linkedDataList의 row는[1,3,5,7,9]이고 linkedDataList와 바인딩된 gridView는 [1,5,9]번 row가 출력되는 상황 가정
 linkedDataList1.getLinkedRealRowIndex(1); // 2
 linkedDataList1.getRealRowIndex(1); // 5
 linkedDataList1.getLinkedRealRowIndex(2); // 4
 linkedDataList1.getRealRowIndex(2); // 9


getMatchedColumnData(
									  matchCol
									       , 
									       dataValue
									       , 
									       targetCol
									       , 
									       exactMatch
									       , 
									       stRowIndex
									       , 
									       lastRowIndex
										)
							

stRowIndex부터 lastRowIndex 까지의 범위의 행중에서 colIndex의 값이 dataValue와 같은 행들을 찾아서 targetCol에 해당하는 열의 값들을 배열로 반환합니다.


Parameter

nametyperequireddescription


matchColNumberY데이터를 검사할 열번호 혹은 컬럼 아이디


dataValueStringYcolIndex해당하는 열의 값과 비교할 data


targetColNumberY데이터를 가져올 열번호


exactMatchBooleanY정확히 일치하는지 여부


stRowIndexNumberY데이터를 가져오는 것을 시작할 행 번호


lastRowIndexNumberY데이터를 가져오는 것을 끝낼 행 번호




Return

typedescription


ObjecttargetCol에 해당하는 열의 값을 가지고 있는 배열 (1차원 배열)


Sample
var lastRowIndex = linkedDataList1.getRowCount() ;
var returnArr = linkedDataList1.getMatchedColumnData( 'c', '영화', 'd', true, 0,  lastRowIndex); // returnArr는 c컬럼의 값이 '영화'인 컬럼의 행 index에 해당하는 d컬럼의 데이터 배열.


getMatchedData(
									  colID
									       , 
									       dataValue
									       , 
									       exactMatch
									       , 
									       stRowIndex
									       , 
									       lastRowIndex
										)
							

stRowIndex부터 lastRowIndex 까지의 범위의 행중에서 colID 값이 dataValue와 같은 행들의 data를 배열로 반환합니다.


Parameter

nametyperequireddescription


colIDNumberY데이터를 검사할 열번호 혹은 컬럼 아이디


dataValueStringYcolIndex해당하는 열의 값과 비교할 data


exactMatchBooleanY정확히 일치하는지 여부


stRowIndexNumberY데이터를 가져오는 것을 시작할 행 번호


lastRowIndexNumberY데이터를 가져오는 것을 끝낼 행 번호




Return

typedescription


Object범위안의 data를 가지고 있는 배열 (2차원 배열)


Sample
var lastRowIndex = linkedDataList1.getRowCount();
var returnArr = linkedDataList1.getMatchedData( 'c', '영화', true, 0, lastRowIndex ); // returnArr는 DataList 전체에서 c컬럼의 값이 "영화" 인 행의 데이터 배열.


getMatchedIndex(
									  colID
									       , 
									       dataValue
									       , 
									       exactMatch
									       , 
									       stRowIndex
									       , 
									       lastRowIndex
										)
							

stRowIndex부터 lastRowIndex 까지의 범위의 행중에서 colID의 값이 dataValue와 같은 행들의 index를 반환합니다.


Parameter

nametyperequireddescription


colIDStringY데이터를 검사할 열번호 혹은 컬럼 아이디


dataValueStringYcolID해당하는 열의 값과 비교할 data


exactMatchBooleanY정확히 일치하는지 여부


stRowIndexNumberY데이터를 가져오는 것을 시작할 행 번호


lastRowIndexNumberY데이터를 가져오는 것을 끝낼 행 번호




Return

typedescription


Object범위안에 일치하는 index를 가지고 있는 배열


Sample
var lastRowIndex = linkedDataList1.getRowCount();
var returnArr = linkedDataList1.getMatchedIndex( 'c', '영화', true, 0, lastRowIndex );    // returnArr는 linkedDataList 전체에서 c컬럼의 값이 "영화" 인 행 Index의 배열.


getMatchedJSON(
									  colID
									       , 
									       dataValue
									       , 
									       exactMatch
									       , 
									       stRowIndex
									       , 
									       lastRowIndex
										)
							

stRowIndex부터 lastRowIndex까지의 범위의 행중에서 colID의 값이 dataValue와 같은 행들의 data를 JSON객체로 반환합니다.


Parameter

nametyperequireddescription


colIDNumberY데이터를 검사할 열번호 혹은 컬럼 아이디


dataValueStringYcolID해당하는 열의 값과 비교할 data


exactMatchBooleanY정확히 일치하는지 여부


stRowIndexNumberY데이터를 가져오는 것을 시작할 행 번호


lastRowIndexNumberY데이터를 가져오는 것을 끝낼 행 번호




Return

typedescription


Object범위안의 data를 가지고 있는 JSON객체


Sample
var lastRowIndex = linkedDataList1.getRowCount();
var returnJSONStr = JSON.stringify(linkedDataList1.getMatchedJSON( 'c', '영화', true, 0, lastRowIndex ));
// returnJSONStr 은 linkedDataList 전체에서 c컬럼의 값이 "영화" 인 행의 데이터 JSON객체 문자열.


getMatchedXML(
									  colID
									       , 
									       dataValue
									       , 
									       exactMatch
									       , 
									       stRowIndex
									       , 
									       lastRowIndex
										)
							

stRowIndex부터 lastRowIndex까지의 범위의 행중에서 colID의 값이 dataValue와 같은 행들의 data를 XML로 반환합니다.


Parameter

nametyperequireddescription


colIDNumberY데이터를 검사할 열번호 혹은 컬럼 아이디


dataValueStringYcolID해당하는 열의 값과 비교할 data


exactMatchBooleanY정확히 일치하는지 여부


stRowIndexNumberY데이터를 가져오는 것을 시작할 행 번호


lastRowIndexNumberY데이터를 가져오는 것을 끝낼 행 번호




Return

typedescription


Xml element범위안의 data를 가지고 있는 XML


Sample
var lastRowIndex = linkedDataList1.getRowCount();
var returnXMLStr = WebSquare.xml.indent(linkedDataList1.getMatchedXML( 'c', '영화', true, 0, lastRowIndex )); // returnXMLStr 은 linkedDataList 전체에서 c컬럼의 값이 "영화" 인 행의 데이터 XML 문자열.


getModifiedData(
									  
										)
							

변경(삽입, 갱신, 삭제) 행들의 데이터를 배열로 반환합니다.



Return

typedescription


Object변경(삽입, 갱신, 삭제) 행들의 데이터 배열 (2차원 배열)


Sample

var returnArr = linkedDataList1.getModifiedData(); // returnArr는 갱신, 삽입, 삭제 상태(1,2,3, U,C,D)의 행들의 데이터 배열.


getModifiedIndex(
									  
										)
							

추가나 삭제 상태인 행의 번호를 배열로 반환합니다.



Return

typedescription


Object추가나 삭제 상태인 행의 번호의 배열


Sample

var returnArr = linkedDataList1.getModifiedIndex(); // returnArr는 갱신, 삽입, 삭제 상태(1,2,3, U,C,D)의 행들의 배열.


getModifiedJSON(
									  
										)
							

변경(삽입, 갱신, 삭제) 행들의 데이터를 JSON객체로 반환합니다.



Return

typedescription


Object변경(삽입, 갱신, 삭제) 행들의 JSON객체 데이터


Sample

var returnJSON = linkedDataList1.getModifiedJSON(); // returnJSON 은 갱신, 삽입, 삭제 상태(1,2,3, U,C,D)의 행들의 JSON객체


getModifiedXML(
									  
										)
							

변경(삽입, 갱신, 삭제) 행들의 데이터를 XML로 반환합니다.



Return

typedescription


Xml Element변경(삽입, 갱신, 삭제) 행들의 데이터 XML


Sample

var returnXML = linkedDataList1.getModifiedXML(); // returnXML 은 갱신, 삽입, 삭제 상태(1,2,3, U,C,D)의 행들의 데이터 XML.


getObjectType(
									  
										)
							

dataCollection의 Type을 반환합니다.



Return

typedescription


StringdataCollection의 타입을 반환합니다.[dataMap, dataList, linkedDataList]


Sample

var dataCollectionType = linkedDataList1.getObjectType(); // dataCollectionType linkedDataList1의 type인 linkedDataList를 반환합니다.


getOption(
									  attr
										)
							

linkedDataList 객체의 옵션을 조회하는 API


Parameter

nametyperequireddescription


attrStringY조회하는 옵션의 이름




Return

typedescription


String조회한 객체의 옵션이 존재할 경우 옵션의 value를 반환합니다.


Sample
 var key = "id"
 $p.data.linkedDataList.getOption(id);
 //만약 최상위 객체의 key값의 option이 존재하지 않을 경우 null을 반환합니.


getOriginalCellData(
									  filteredRowIndex
									       , 
									       colID
										)
							

filteredRowIndex와 colID에 해당하는 셀의 데이터를 반환합니다.


Parameter

nametyperequireddescription


filteredRowIndexNumberY셀의 초기 행 번호


colIDStringY셀의 초기 컬럼 번호 혹은 컬럼의 아이디




Return

typedescription


StringrowIndex와 colIndex에 해당하는 셀의 데이터


Sample

var returnValue = linkedDataList.getOriginalCellData(0, "a"); // 초기의 첫 번째 row, "a" column에 해당하는 cell의 displayFormat이 적용되지 않은 실제 데이터를 반환


getParentRealRowIndex(
									  linkedRealRowIndex
										)
							

linkedRealRowIndex(linkedDataList 세계에서의 realRowIndex)를 통해 실제 realRowIndex(부모 dataList에 해당하는 rowIndex)를 반환한다.


Parameter

nametyperequireddescription


linkedRealRowIndexNumberY




Return

typedescription


Number부모 dataList의 rowIndex 즉 realRowIndex


Sample
 // dataList의 row가 [0,1,2,3,4,5,6,7,8,9], linkedDataList의 row는[1,3,5,7,9]이고 linkedDataList와 바인딩된 gridView는 [1,5,9]번 row가 출력되는 상황 가정
 linkedDataList1.getParentRealRowIndex(0); // 1
 linkedDataList1.getParentRealRowIndex(1); // 3
 linkedDataList1.getParentRealRowIndex(2); // 5
 linkedDataList1.getParentRealRowIndex(3); // 7
 linkedDataList1.getParentRealRowIndex(4); // 9


getParentRowIndex(
									  rowIndex
										)
							

drilldown 사용시 rowIndex에 해당하는 행의 부모 행의 rowIndex를 반환합니다.


Parameter

nametyperequireddescription


rowIndexNumberY부모를 찾으려는 행의 번호




Return

typedescription


Number부모 Row의 Index를 반환한다





getRangeData(
									  from
									       , 
									       to
										)
							

from부터 to 까지의 범위의 행의 data를 배열로 반환합니다.


Parameter

nametyperequireddescription


fromNumberY데이터를 가져오는 것을 시작할 행 번호


toNumberY데이터를 가져오는 것을 끝낼 행 번호




Return

typedescription


Object범위안의 data를 가지고 있는 배열 (1차원 배열)


Sample
// id가 a,b,c,d,e인 5개 컬럼이 존재하는 linkedDataList에서 a컬럼의 dataType이 date이고 b컬럼의 dataType이 number이며 각각의 displayFormat이 yyyy.MM.dd, #,###인 경우.
// 첫번째 행의 각 컬럼의 데이터는 다음과 같다. ( 20120101 , 23456 , Inswave , WebSquare , sample )
var dataArr = linkedDataList1.getRangeData(0, 1);   
dataArr.length 는 5이다. 
dataArr[0] 은 20120101 
dataArr[1] 은 23456 
...


getRangeJSON(
									  from
									       , 
									       to
										)
							

from부터 to 까지의 범위의 행의 data를 JSON객체로 반환합니다.


Parameter

nametyperequireddescription


fromNumberY데이터를 가져오는 범위의 시작 행 번호


toNumberY데이터를 가져오는 범위의 끝 행 번호




Return

typedescription


ObjectrowIndex에 해당하는 행의 JSON객체 데이터


Sample
//id가 a,b,c,d,e인 5개 컬럼이 존재하는 linkedDataList에서 a컬럼의 dataType이 date이고 b컬럼의 dataType이 number이며 각각의 displayFormat이 yyyy.MM.dd, #,###인 경우.
//첫번째 행의 각 컬럼의 데이터는 다음과 같다. ( 20120101 , 23456 , Inswave , WebSquare , sample )
var returnJSONStr = JSON.stringify(linkedDataList1.getRangeJSON(0, 1));
baseNode : gridData , repeatNode : vector , valueNode : value 일 경우,
returnJSONStr은 다음과 같다.
 [{"a":"20120101","b":"23456","c":"Inswave","d":"WebSquare","e":"sample"},
  {"a":"20120102","b":"34567","c":"Inswave","d":"WebSquare","e":"sample2"}]


getRangeXML(
									  from
									       , 
									       to
										)
							

from부터 to 까지의 범위의 행의 data를 xml로 반환합니다.


Parameter

nametyperequireddescription


fromNumberY데이터를 가져오는 범위의 시작 행 번호


toNumberY데이터를 가져오는 범위의 끝 행 번호




Return

typedescription


Xml ElementrowIndex에 해당하는 행의 xml데이터


Sample
// id가 a,b,c,d,e인 5개 컬럼이 존재하는 linkedDataList에서 a컬럼의 dataType이 date이고 b컬럼의 dataType이 number이며 각각의 displayFormat이 yyyy.MM.dd, #,###인 경우.
// 첫번째 행의 각 컬럼의 데이터는 다음과 같다. ( 20120101 , 23456 , Inswave , WebSquare , sample )
var returnXMLStr = WebSquare.xml.indent(linkedDataList1.getRangeXML(0, 1));
baseNode : gridData , repeatNode : vector , valueNode : value 일 경우,
returnXMLStr은 다음과 같다.











getRealRowIndex(
									  filteredRowIndex
										)
							

filteredRowIndex에 대한 실제 데이터의 filteredRowIndex를 리턴한다.


Parameter

nametyperequireddescription


filteredRowIndexNumberY현재 표시되고 있는 셀의 행 번호



Sample

linkedDataList1.getRealRowIndex(3); // 3번째 row에 대한 실제 filteredRowIndex를 리턴한다.


getRowCount(
									  
										)
							

linkedDataList의 데이터 row의 건수를 반환합니다.



Return

typedescription


NumberlinkedDataList의 데이터 row의 건수


Sample

var returnValue = linkedDataList.getRowCount(); // linkedDataList data의 row수가 20인 경우, returnValue는 20이다.


getRowData(
									  filteredRowIndex
										)
							

rowIndex에 해당하는 행의 데이터를 배열로 반환합니다.


Parameter

nametyperequireddescription


filteredRowIndexNumberY데이터를 가져올 행 번호




Return

typedescription


ObjectrowIndex에 해당하는 행의 데이터의 배열


Sample
var dataArr = linkedDataList.getRowData( 0 );
// dataArr[0] 은 20120101
// dataArr[1] 은 23456
// 위와 같이 원래 값을 반환.


getRowIndexByStatus(
									  statusStr
										)
							

statusStr과 상태가 일치하는 행의 번호를 배열로 반환합니다.


Parameter

nametyperequireddescription


statusStrStringY상태가 일치하는 행을 찾기 위한 문자열




Return

typedescription


ObjectstatusStr과 상태가 일치하는 행의 번호의 배열


Sample

var returnArr = linkedDataList1.getRowIndexByStatus('CUD'); // returnArr 는 linkedDataList에서 삽입, 갱신, 삭제 상태인 행들의 rowIndex 배열.


getRowJSON(
									  filteredRowIndex
										)
							

filteredRowIndex에 해당하는 행의 data를 JSON객체로 반환합니다.


Parameter

nametyperequireddescription


filteredRowIndexNumberY데이터를 가져올 행 번호




Return

typedescription


Object해당 행의 JSON객체 데이터


Sample
//id가 a,b,c,d,e인 5개 컬럼이 존재하는 linkedDataList에서 a컬럼의 dataType이 date이고 b컬럼의 dataType이 number이며 각각의 displayFormat이 yyyy.MM.dd, #,###인 경우.
//첫번째 행의 각 컬럼의 데이터는 다음과 같다. ( 20120101 , 23456 , Inswave , WebSquare , sample )
var returnJSONStr = JSON.stringify(linkedDataList1.getRowJSON(0));
baseNode : gridData , repeatNode : vector , valueNode : value 일 경우,
returnJSONStr은 다음과 같다.
{"a":"20120101","b":"23456","c":"Inswave","d":"WebSquare","e":"sample","rowStatus":"U"}


getRowStatus(
									  filteredRowIndex
										)
							

filteredRowIndex에 해당하는 행의 상태를 반환합니다. (초기상태:"R", 갱신:"U", 삽입:"C", 삭제:"D", 삽입 후 삭제:"V")


Parameter

nametyperequireddescription


filteredRowIndexNumberY상태를 반환할 행 번호




Return

typedescription


String행의 상태를 나타내는 문자 (초기상태:"R", 갱신:"U", 삽입:"C", 삭제:"D", 삽입 후 삭제:"V")


Sample

var returnValue = linkedDataList1.getRowStatus(0); // 첫 번째 행의 rowStatus 값(문자)를 반환한다.


getRowStatusValue(
									  filteredRowIndex
										)
							

filteredRowIndex에 해당하는 행의 상태를 숫자로 반환합니다. (초기상태:0, 갱신:1, 삽입:2, 삭제:3, 삽입 후 삭제:4)


Parameter

nametyperequireddescription


filteredRowIndexNumberY상태를 반환할 행 번호




Return

typedescription


Number행의 상태를 나타내는 숫자 (초기상태:0, 갱신:1, 삽입:2, 삭제:3, 삽입 후 삭제:4)


Sample

var returnValue = linkedDataList1.getRowStatusValue(0); // 첫 번째 행의 rowStatus 값(숫자)를 반환한다.


getRowXML(
									  filteredRowIndex
										)
							

filteredRowIndex에 해당하는 행의 data를 XML로 반환합니다.


Parameter

nametyperequireddescription


filteredRowIndexNumberY데이터를 가져올 행 번호




Return

typedescription


XML Element행의 XML 데이터


Sample
// id가 a,b,c,d,e인 5개 컬럼이 존재하는 linkedDataList에서 a컬럼의 dataType이 date이고 b컬럼의 dataType이 number이며 각각의 displayFormat이 yyyy.MM.dd, #,###인 경우.
// 첫번째 행의 각 컬럼의 데이터는 다음과 같다. ( 20120101 , 23456 , Inswave , WebSquare , sample )
var returnXMLStr = WebSquare.xml.indent(linkedDataList1.getRowXML(0));
 baseNode : gridData , repeatNode : vector , valueNode : value 일 경우,
 returnXMLStr은 다음과 같다.









getScope(
									  
										)
							

컴포넌트가 scope=true인 wframe의 자식 컴포넌트일 때 해당 부모 wframe 객체를 반환하는 함수  
 scope=true인 wframe의 자식 컴포넌트가 아닐 경우 null을 반환한다.



Return

typedescription


Objectwframe 객체 또는 null


Sample
 // 메인페이지에 wframe1이 있고 wframe1안에 wframe11이 있고 그 안에 linkedDataList1이 있는 경우
 linkedDataList1.getScope(); // wframe11 객체를 반환한다.


getScopeWindow(
									  
										)
							

컴포넌트가 scope=true인 wframe의 자식 컴포넌트일 때 해당 부모 wframe의 scope객체를 반환하는 함수  
 scope=true인 wframe의 자식 컴포넌트가 아닐 경우 전역 window객체를 반환한다.



Return

typedescription


Objectwframe객체의 scope객체 또는 전역window객체


Sample
 // 메인페이지에 wframe1이 있고 wframe1안에 wframe11이 있고 그 안에 linkedDataList1이 있는 경우
 var scope = linkedDataList1.getScopeWindow();
 scope.wframe11 === linkedDataList1.getScope(); // true


getSortCondition(
									  
										)
							

linkedDataList의 sortCondition을 반환하는 함수





getTotalCol(
									  
										)
							

컬럼의 개수를 반환 한다.



Return

typedescription


Number컬럼의 개수





getTotalRow(
									  
										)
							

행의 개수를 반환 한다.



Return

typedescription


Number행의 개수





getUnmatchedColumnData(
									  matchCol
									       , 
									       dataValue
									       , 
									       targetCol
									       , 
									       exactMatch
									       , 
									       stRowIndex
									       , 
									       lastRowIndex
										)
							

stRowIndex부터 lastRowIndex 까지의 범위의 행중에서 colIndex의 값이 dataValue와 다른 행들을 찾아서 targetCol에 해당하는 열의 값들을 배열로 반환합니다.


Parameter

nametyperequireddescription


matchColNumberY데이터를 검사할 열번호 혹은 컬럼 아이디


dataValueStringYcolIndex해당하는 열의 값과 비교할 data


targetColNumberY데이터를 가져올 열번호


exactMatchBooleanY정확히 일치하는지 여부


stRowIndexNumberY데이터를 가져오는 것을 시작할 행 번호


lastRowIndexNumberY데이터를 가져오는 것을 끝낼 행 번호




Return

typedescription


ObjecttargetCol에 해당하는 열의 값을 가지고 있는 배열 (1차원 배열)


Sample
var lastRowIndex = linkedDataList1.getRowCount() ;
var returnArr = linkedDataList1.getUnmatchedColumnData( 'c', '영화', 'd', true, 0,  lastRowIndex); // returnArr는 c컬럼의 값이 '영화'가 아닌 컬럼의 행 index에 해당하는 d컬럼의 데이터 배열.


getUnmatchedData(
									  colID
									       , 
									       dataValue
									       , 
									       exactMatch
									       , 
									       stRowIndex
									       , 
									       lastRowIndex
										)
							

stRowIndex부터 lastRowIndex 까지의 범위의 행중에서 colID의 값이 dataValue와 다른 행들의 data를 배열로 반환합니다.


Parameter

nametyperequireddescription


colIDNumberY데이터를 검사할 열번호 혹은 컬럼 아이디


dataValueStringYcolID해당하는 열의 값과 비교할 data


exactMatchBooleanY정확히 일치하는지 여부


stRowIndexNumberY데이터를 가져오는 것을 시작할 행 번호


lastRowIndexNumberY데이터를 가져오는 것을 끝낼 행 번호




Return

typedescription


Object범위안에 일치하는 data를 가지고 있는 배열 (2차원 배열)


Sample
var lastRowIndex = linkedDataList1.getRowCount();
var returnArr = linkedDataList1.getUnmatchedData( 'c', '영화', true, 0, lastRowIndex ); // returnArr는 linkedDataList 전체에서 c컬럼의 값이 "영화" 가 아닌 행의 데이터 배열.


getUnmatchedIndex(
									  colID
									       , 
									       dataValue
									       , 
									       exactMatch
									       , 
									       stRowIndex
									       , 
									       lastRowIndex
										)
							

stRowIndex부터 lastRowIndex 까지의 범위의 행중에서 colID의 값이 dataValue와 다른 행들의 index를 배열로 반환합니다.


Parameter

nametyperequireddescription


colIDNumberY데이터를 검사할 열번호 혹은 컬럼 아이디


dataValueStringYcolID해당하는 열의 값과 비교할 data


exactMatchBooleanY정확히 일치하는지 여부


stRowIndexNumberY데이터를 가져오는 것을 시작할 행 번호


lastRowIndexNumberY데이터를 가져오는 것을 끝낼 행 번호




Return

typedescription


Object범위안에 일치하는 index를 가지고 있는 배열


Sample
var lastRowIndex = linkedDataList1.getRowCount();
var returnArr = linkedDataList1.getUnmatchedIndex( 'c', '영화', false, 0, lastRowIndex ); // returnArr는 linkedDataList 전체에서 c컬럼의 값이 "영화"를 포함하고 있지 않는 행 Index의 배열.


getUnmatchedJSON(
									  colID
									       , 
									       dataValue
									       , 
									       exactMatch
									       , 
									       stRowIndex
									       , 
									       lastRowIndex
										)
							

stRowIndex부터 lastRowIndex 까지의 범위의 행중에서 colID의 값이 dataValue와 다른 행들의 data를 JSON객체로 반환합니다.


Parameter

nametyperequireddescription


colIDNumberY데이터를 검사할 열번호 혹은 컬럼 아이디


dataValueStringYcolID해당하는 열의 값과 비교할 data


exactMatchBooleanY정확히 일치하는지 여부


stRowIndexNumberY데이터를 가져오는 것을 시작할 행 번호


lastRowIndexNumberY데이터를 가져오는 것을 끝낼 행 번호




Return

typedescription


Object범위안에 일치하는 index를 가지고 있는 JSON객체


Sample
var lastRowIndex = linkedDataList1.getRowCount();
var returnJSONStr = JSON.stringify(linkedDataList1.getUnmatchedJSON( 'c', '영화', true, 0, lastRowIndex )); // returnJSONStr 은 linkedDataList 전체에서 c컬럼의 값이 "영화" 가 아닌 행의 데이터 JSON객체 문자열.


getUnmatchedXML(
									  colID
									       , 
									       dataValue
									       , 
									       exactMatch
									       , 
									       stRowIndex
									       , 
									       lastRowIndex
										)
							

stRowIndex부터 lastRowIndex 까지의 범위의 행중에서 colID의 값이 dataValue와 다른 행들의 data를 Xml로 반환합니다.


Parameter

nametyperequireddescription


colIDNumberY데이터를 검사할 열번호 혹은 컬럼 아이디


dataValueStringYcolID해당하는 열의 값과 비교할 data


exactMatchBooleanY정확히 일치하는지 여부


stRowIndexNumberY데이터를 가져오는 것을 시작할 행 번호


lastRowIndexNumberY데이터를 가져오는 것을 끝낼 행 번호




Return

typedescription


Xml element범위안에 일치하는 index를 가지고 있는 Xml


Sample
var lastRowIndex = linkedDataList1.getRowCount();
var returnXMLStr = WebSquare.xml.indent(linkedDataList1.getUnmatchedXML( 'c', '영화', true, 0, lastRowIndex )); // returnXMLStr 은 linkedDataList 전체에서 c컬럼의 값이 "영화" 가 아닌 행의 데이터 XML 문자열.


getUpdatedData(
									  
										)
							

갱신 상태인 행들의 데이터를 배열로 반환합니다.



Return

typedescription


Object갱신 상태인 행들의 데이터 배열 (2차원 배열)


Sample

var returnArr = linkedDataList1.getUpdatedData(); // returnArr는 갱신 상태(1, U)의 행들의 데이터 배열.


getUpdatedIndex(
									  
										)
							

갱신 상태인 행의 번호를 배열로 반환합니다.



Return

typedescription


Object갱신 상태인 행의 번호의 배열


Sample

var returnArr = linkedDataList1.getUpdatedIndex(); // returnArr는 갱신 상태(1, U)의 행들의 배열.


getUpdatedJSON(
									  
										)
							

갱신 상태인 행들의 데이터를 JSON객체로 반환합니다.



Return

typedescription


Object갱신 상태인 행들의 JSON객체 데이터


Sample

var returnJsonStr = JSON.stringify(linkedDataList1.getUpdatedJSON()); // returnJsonStr 은 갱신 상태(1, U)의 행들의 데이터 JSON객체 문자열.


getUpdatedXML(
									  
										)
							

갱신 상태인 행들의 데이터를 XML로 반환합니다.



Return

typedescription


Xml Element갱신 상태인 행들의 데이터 XML


Sample

var returnXMLStr = WebSquare.xml.indent(linkedDataList1.getUpdatedXML()); // returnXMLStr 은 갱신 상태(1, U)의 행들의 데이터 XML 문자열.


multisort(
									  options
										)
							

option에 따라서 여러개의 열을 동시에 정렬해줍니다.


Parameter

nametyperequireddescription


optionsObjectY정렬에 대한 옵션을 JSON형식으로 가지고 있는 object
 options.sortIndex : 정렬해 줄 열의 아이디 혹은 번호. 여러 열을 나열시에 빈칸(space)을 구분자로 한다.
 options.sortOrder : 정렬방법 (1:오름차순 -1:내림차순). 여러 열에 대한 각각의 정렬방법을 나열시에 빈칸(space)을 구분자로 한다.



Sample
var options = {};
options.sortIndex = "category member";
options.sortOrder = "1 1";
grid1.multisort( options );
 category컬럼의 카테고리를 먼저 오름차순으로 정렬 한 후, 동일 분류에 대하여 member컬럼의 회원 수를 오름차순으로 정렬한다.
 multisort의 경우, dataType을 고려한 정렬이 가능하다.


removeColumnFilter(
									  colID
										)
							

colID에 해당하는 열에 적용된 filter를 삭제합니다.


Parameter

nametyperequireddescription


colIDNumberYfilter를 삭제할 열 번호 혹은 컬럼 아이디



Sample
linkedDataList1.removeColumnFilter( 'c' ); // c컬럼에 적용된 필터링을 해제한다.
여러 컬럼에 setColumnFilter를 사용한 경우, 해제되지 않는 filter의 operationType에 유의하여야 한다.


removeColumnFilterAll(
									  
										)
							

모든 열에 적용된 filter를 삭제합니다.


Sample

linkedDataList1.removeColumnFilterAll(); // 전체 필터링을 해제한다.


setColumnFilter(
									  filterOptions
										)
							

colIndex에 해당하는 열에 filter를 적용합니다.


Parameter

nametyperequireddescription


filterOptionsObjectYfilter를 적용할 옵션 
 filterOptions.type : 필터 타입("func", "regExp")
 filterOptions.colIndex : 적용할 그리드 컬럼 index 또는 컬럼 id
 filterOptions.key : 필터 적용 키
 filterOptions.condition : 이전 필터 데이터와 머지 조건(AND 혹은 OR)
 filterOptions.exactMatch : row filter에서 like검색이 아닌 equal검색을 시킬지에 대한 여부 (default:false)
 filterOptions.param : 사용자 Parameter(사용자 function으로 호출시 넘어감)



Sample
예제1) row 필터
//key로 넘어온 문자열에 대해 indexOf를 이용하여 필터링 하는 필터이다. 
//id가 a,b,c,d,e인 5개 컬럼이 존재하는 linkedDataList.
linkedDataList1.setColumnFilter( {type:'row', colIndex:'a', key:"영화", condition:'and'});
a컬럼이 "영화"문자가 포함된 행들만 필터링 되어 보인다. 
예제2) func 필터   
//cellData를 필터링 하여 true/false를 리턴하는 function을 사용자가 구현하여 처리하는 필터이다. 
//id가 a,b,c,d,e인 5개 컬럼이 존재하는 linkedDataList.
linkedDataList1.setColumnFilter( {type:'func', colIndex:'a', key:function(cellData, param) { if(cellData.indexOf("영화") > -1) { return true; }else{ return false} }, condition:'and',param:{}});
a컬럼이 "영화"문자가 포함된 행들만 필터링 되어 보인다. 
예제3) regExp 필터 
//정규표현식을 이용하여 필터링하는 필터이다. 
//id가 a,b,c,d,e인 5개 컬럼이 존재하는 linkedDataList.
linkedDataList1.setColumnFilter( {type:'regExp', colIndex:'a', key:/20120101|20120102|20120103/gi, condition:'and'});
a컬럼이 20120101 또는 20120102 또는 20120103을 포함하는 문자열으로 필터링한다. 사용자 정규표현식을 key로 넘겨서 처리할 수 있으며, key는 String이 아닌 regExp로 셋팅하여야 한다.


setCondition(
									  type
									       , 
									       condition
										)
							

linkedDataList의 필터링 혹은 정렬 조건을 설정.


Parameter

nametyperequireddescription


typestringY동작 종류 선택 - 필터링 ("filter") 혹은 정렬 ("sort")


conditionstringY필터링 조건 혹은 정렬 조건 (하단 샘플 참조.)



Sample
 // 필터링 예제
 
 linkedDataList1.setCondition("filter","filterCondition");   
 
 // 필터 조건 설정 예 (1)  
 // val(컴포넌트ID) - val()에 정의된 컴포넌트의 현재 value를 참조.    
 // (예) filterCondition = "column01 == val( 'selectbox1' )"     
 // 
 // 필터 조건 설정 예 (2)  
 // ref(data:DataCollection객체id.Column id) - ref()에 정의된 DataCollection객체의 현재 value를 참조. 
 // (예) filterCondition = "column01 == ref( data:dataList1.col1)"   
 //     
 // 필터 조건 설정 예 (3)  
 // Default : Column id가 지정한 value와 동일한 데이터만 참조 
 // (예) filtierCondition = "GENDER == 'W'"
    
 // 정렬  예제
    
 linkedDataList1.setCondition("sort","sortCondition");  
    
 // 오름차순 정렬
 // ASC( 컬럼명 ) - 해당 컬럼을 기준으로 오름차순 정렬.   
 // (예) sortCondition = ASC('col0')"
    
 // 내림차순 정렬 
 //  DESC( 컬럼명 ) -  해당 컬럼을 기준으로 내림차순 정렬.
 // (예) sortCondition = DESC('col1, col2')


setOption(
									  key
									       , 
									       value
										)
							

linkedDataList 객체의 옵션을 설정하는 API


Parameter

nametyperequireddescription


keyStringY조회하는 옵션의 이름


valueStringY조회한 옵션에 설정할 값



Sample
 var key = "id";
 var value = "linkedDataList1";
 $p.data.linkedDataList1.setOption(key, value);
 //만약 최상위 객체의 key값의 option이 존재하지 않을 경우 되지 않습니다.


sort(
									  bodyColumnID
									       , 
									       sortType
										)
							

linkedDataList의 bodyColumnID에 해당하는 열을 정렬해줍니다.


Parameter

nametyperequireddescription


bodyColumnIDStringY정렬시킬 열의 아이디


sortTypeNumberY정렬 옵션 0이면 오름차순 1이면 내림차순 2이면 정렬을 취소



Sample
linkedDataList1.sort('date', 0); // date컬럼의 값을 기준으로 오름차순으로 정렬한다.
sort함수를 사용시, dataType에 상관없이 text로 간주하여 정렬이 된다.
number 타입의 컬럼을 정렬해야 하는 경우에는 multisort 사용을 권장한다.






Copyrights Inswave Systems Co., Ltd.



