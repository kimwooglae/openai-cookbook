


WebSquare.uiplugin.inputCalendar 









PropertyEventMethod찾아보기

WebSquare.uiplugin.inputCalendar - 5.0_5.4826M.20230213.171915





인풋 칼렌다. Calendar와 InputBox의 조합.
 Calendar와 InputBox를 그룹화한 복합 컴포넌트. 
 사용자는 달력에서 날짜를 선택하거나 직접 입력 가능.
 유효성 검증(validCheck) 및 최소/최대 연도를 지정(minYear/maxYear) 기능을 제공.
 최상위에 위치한 <div> 태그가 하위에 복합 태그를 포함.

Type


uiplugin

Property Summary




alt

이미지로 구성된 달력아이콘의 HTML alt 속성에 들어갈 문자열로 웹 접근성 작업 시 필수 입력해야한다



autoFocus

[default:false, true] nextTabID가 지정되어 있는 경우, maxByteLength 지정값과 일치할 경우 자동으로 focus를 이동시킬지 유무



buttonTitle

inputCalendar의 달력이미지에 title속성값을 준다. 



calendarClass

[default:class1, class2, class3, class4, class5]Calendr의 스킨을 정의한다



calendarDisplayFormat

inputCalendar의 displayFormat 속성과는 별도로 달력에 표시되는 날짜 자체의 displayFormat을 설정하고자 할 때 사용한다



calendarDisplayFormatFunc

함수명을 입력받아 해당 함수의 return값으로 calendarDisplayFormat을 설정한다. 함수 호출 시 인자로 calendarValueType을 넘겨준다. 



calendarImage

컴포넌트의 오른쪽에 위치한 달력버튼의 이미지 파일 경로



calendarImageOver

컴포넌트의 오른쪽에 위치한 달력버튼에 마우스가 올라갔을 때의 이미지 파일 경로



calendarValueType

[default:yearMonthDate, yearMonth, year, yearMonthDateHour, yearMonthDateTime, yearMonthDateTimeSec]calendar의 표현 방법을 정의한다



cancelButtonShow

[default:false, true]calendar의 X모양의 버튼 표시 여부로 버튼은 우측 하단에 표현된다.



caption

calendar의 HTML caption Tag의 값을 설정한다.(calendar는 table Tag를 이용하여 구성되어있다)



class

HTML의 class 속성과 동일한 기능을 제공. CSS 파일이나 style 블럭에 정의한 여러 개의 class를 공백으로 구분하여 적용 가능.



dateValidCheck

입력된 날짜의 유효성을 검증. [default: false, true]



dateValidSet

입력된 날짜 값의 유효성을 확인하여, 유효하지 않을 경우 이전 값으로 복귀. [default: false, true] 



dateValidSetCustom

유효하지 않는 값이 입력된 경우, invalidMessageFunc만 호출. [default: false, true]



dayMoveFixed

년, 월 이동시 이전선택한 날짜를 유지 할지 유무



defaultDate

입력 값이 없는 상태에서 사용자가 초기에 달력 아이콘을 클릭할 때 달력에 표시되는 날짜. [Default: "" (빈 스트링)]



delimiter

[default:-]input과 calendar의 하단에 표현되는 년월일간의 구분자를 설정한다



disabled

[default:false, true] 컴포넌트 비활성 여부



disableDateValidSet

비활성화된 날짜가 입력될 경우, blur 시 이전에 입력했던 정상적인 값을 입력 창에 표시. [default: false, true]



displayDayType

[default:image, text]calendar의 요일 부분을 image 또는 text 표현할지 설정한다



displayFormat

input에 표현될 년월일에 대한 format으로 delimiter속성은 무시된다. ex) yyyy/MM/dd , yyyy/MM/dd (EEE)  



displayFormatFunc

함수명을 입력받아 해당 함수의 return값으로 displayFormat을 설정한다. 함수 호출 시 인자로 calendarValueType을 넘겨준다. 



displaymessage

validate(); 검증 결과가 실패일 경우, 메세지를 표시. [default: false, true]



dynamicHeaderOrder

pickerType="dynamic"인 경우 헤더 부분의  헤더 부분의 label 순서를 결정



editType

[default:focus, select] 사용자가 컴포넌트 클릭 시 결과 동작 지정



fixedDate

[today]calendar의 하단에 표현되는 날짜를 사용자가 선택한 날짜가 아닌 현재일로 고정하여 표현 할지의 속성



focusOnDateSelect

[default:false, true]모바일에서 달력의 날짜 선택시 input에 focus를 줄지 여부



focusOnOuterDiv

calendar 외부 div에 tabindex와 포커스를 줄지 여부( 웹접근성 사용시 필요 ) [default: false, true]



footerDiv

[default:false, true]calendar의 선택 된 날짜등이 있는 하위 영역을 table Tag가 아닌 div Tag로 표현할지 여부



handleIconClick

달력 아이콘 클릭시 처리하는 콜백 함수



id

컴포넌트 ID. 



inputReadOnly

읽기 전용 설정



invalidMessageFunc

validate(); 검증 결과가 실패일 경우, 결과 메시지를 동적으로 표시할 사용자 정의 함수 이름.  



ioFormat

[defulat:yyyyMMdd]사용자가 data를 입력하는 순서와 format 매칭시켜주는 기능이다



keepFixedDate

fixedDate = "today"로 설정 시, 하단에 표현되는 날짜를 오늘 날짜로 고정 시키는 기능을 설정



keepFocusSelect

달력버튼 클릭시 오늘 날짜로 자동포커스가 이동 할지 여부 [default: false, true]



keepInvalidDate

dateValidCheck 옵션에 의해 유효하지 않은 날짜 형식이라도 지우지 않고 그대로 유지할지 여부



mandatory

필수 선택 적용 여부. [default:false, true]



maxYear

calendar에 표시되는 최대연도로 config.xml의 calendar하위의 maxYear의 value 속성값이 기본값으로 설정된다.



minYear

calendar에 표시되는 최소연도로 config.xml의 calendar하위의 minYear의 value 속성값이 기본값으로 설정된다.



monthNames

calendar의 월에 해당하는 selectbox에 display값을 설정하는 기능으로 1월부터 12월의 display값을 ,(comma)로 구분하여 정의한다.



monthNamesForYearMonthType

calendarvaluetype이 yearMonth일 경우, calendar의 월에 해당하는 selectbox에 display값을 설정하는 기능으로 1월부터 12월의 display값을 ,(comma)로 구분하여 정의한다.



nextLastMonthDateSelect

달력에서 다음달과 이전달 날짜를 클릭할 경우 바로 선택된 날짜 설정 여부



nextTabID

Tab 키로 이동할 경우, Tab 키를 누를 때 선택되는 컴포넌트의 ID



outsideClickEvent

calendar 컴퍼넌트 calendarValueTYpe = "yearMonth" 시 년/월 변경영역 밖에 클릭시 이벤트 발생 여부



pickerType

클릭할 경우 현재 날짜로 이동하는 Today 버튼 표시 여부를 설정



placeholder

HTML5의 placeholder와 동일한 기능을 제공. 사용자에게 알려줘야 할 힌트 문구 등을 명시. 



readOnly

[default:false, true]readonly의 여부로 HTML의 readonly속성과 동일한 기능을 제공한다.



ref

DataCollection의 value 경로. DataCollection의 value와 웹스퀘어 컴포넌트를 바인딩할 때 사용. 



renderDiv

[default:true, false]calendar를 div로 구성할지의 여부로 기본적으로 table로 구성되어있다



renderType

[default:component, native]컴포넌트의 레이아웃 구조를 설정한다.



rightAlign

calendar를 오른쪽으로 정렬하여 표시함



setCurrentDate

날짜 input 현재일 출력 유무



showPlaceHolderOnReadOnly

읽기전용 모드(readOnly="true"에서도 placeholder 속성으로 지정된 값을 표시.



showToday

클릭할 경우 현재 날짜로 이동하는 Today 버튼 표시 여부를 설정



skipConfirm

[default: false, true] 사용자가 월(month)을 선택할 경우 자동으로 값이 설정됨. (확인 버튼이 표시 되지 않고 사용자는 확인 버튼을 클릭할 필요가 없음.) 



skipConfirmOnly

[default: false, true] << < > >> 버튼을 선택하여 연도 및 월을 선택하는 월(month) 목록에서 직접 월을 선택할 경우 확인 버튼 클릭 없이 자동으로 월이 선택됨. (확인 버튼은 표시됨.)



summary

HTML의 table Tag의 summary 속성과 동일한 기능을 제공한다



tabIndex

Tab 키를 이용하여 포커스를 변경할 경우, 해당 컴포넌트에 포커스를 주는 순서. 



title

HTML의 title 속성과 동일



todaySelect

달력에서 today버튼을 누름과 동시에 오늘 날짜가 입력창에 설정되고 달력은 닫히도록 하는 기능 설정. 



tooltip

사용자가 컴포넌트에 마우스-오버할 때 표시되는 텍스트



tooltipLocaleRef

tooltip 문구가 정의되어 있을 경우 클라이언트 다국어 적용시 툴팁에 출력하는 텍스트의 key.



topLayout

[default: false, true] Today 및 닫기 버튼을 우측 상단으로 이동.



type

HTML의 type 태그 속성과 동일



useAnchor

앵커를 이용해 책갈피로 이동시킬것인지 여부. renderDiv옵션이 false인 경우만 동작하며(inputCalendar가 table로 그려졌던 하위 버전의 옵션)



useButton

[default: false, true] 웹접근성 사용 시, '확인', '취소' 요소를 div태그에서 button태그로 변경.



useCalendarTabIndex

useAnchor = false인 경우에도 달력에 tab키로 포커스 이동을 가능하게 할지에 대한 여부



userData1

사용자 정의 데이터 속성



userData2

사용자 정의 데이터 속성



userData3

사용자 정의 데이터 속성



validateOnInput

[default:false] 값을 직접 입력할 때 유효성에 어긋나는 값이 입력되지 않도록 하는 속성 (oninput 이벤트를 지원하는 IE9이상 브라우저 지원)



validateOnInputMobile

[default:false] 값을 직접 입력할 때 유효성에 어긋나는 값이 입력되지 않도록 하는 속성. 모바일 전용. onkeyup 이벤트에서 처리.



validateRef

ref로 연동시에도 유효성 함수가 동작되도록 설정함



validator

유효성 체크 함수 이름.



validCheck

입력된 날짜의 유효성을 확인하여 유효하지 않은 날짜가 입력될 경우 alert을 표시



visibleHourList

[default:1,2,...,23,24] 시간이 표시되는 달력에서 시간 항목을 설정하는 속성. [,]를 구분자로 사용한다. 



visibleMinList

[default:1,2,...,59,60] 분이 표시되는 달력에서 분 항목을 설정하는 속성. [,]를 구분자로 사용한다. 



visibleSecList

[default:1,2,...,59,60] 초가 표시되는 달력에서 초 항목을 설정하는 속성. [,]를 구분자로 사용한다. 



visibleWeekNum

달력에 표시할 주(Week)의 개수를 설정



weekStartsOn

[default:0, 1, 2, 3, 4, 5, 6]calendar의 시작 요일을 설정한다(0:일, 1:월, 2:화, 3:수, 4:목, 5:금, 6:토)



wmode

[default:false, true] wmode를 사용하여 선택 항목 목록을 object 태그보다 상위에 표시. 



yearSuffix

연도 selectbox의 display되는 값의 숫자(연도) 뒤에 들어갈 문자열.



Event Summary




onblur

포커스를 잃었을 때 발생



onchange

component의 value가 변경되었을 때 발생하는 이벤트로 focus out 시점에 발생한다.



onclick

마우스로 inputcalendar를 클릭했을 때 발생



ondateselect

날짜 선택 시 발생



onfocus

포커스를 얻었을 때 발생



oniconclick

달력 아이콘이 클릭되면 발생



onkeydown

키보드에서 키를 눌렀을 때 발생



onkeypress

키보드에서 키를 눌렀을 때(누르고 있는 동안에도) 발생



onkeyup

키보드에서 키를 눌렀다 놓았을 때 발생



onmonthselect

달력화면에서 월 변경시 발생



onviewchange

키보드 또는 마우스 조작을 통해 값이 변경된 경우 발생.



onyearselect

달력화면에서 연도 변경시 발생


Method Summary




addClass(
									  className
										)
								

컴포넌트에 CSS class를 추가



bind(
									  eventType
									       , 
									       function
										)
								

컴포넌트에 이벤트와 핸들러 함수를 동적으로 할당



blur(
									  
										)
								

input에 포커스를 제거(blur)한다



changeClass(
									  oldClassName
									       , 
									       newClassName
										)
								

웹스퀘어 컴포넌트의 class를 변경. (웹스퀘어 컴포넌트 공통.) 



disableAfterDate(
									  dateStr
										)
								

입력 받은 날짜 이후의 날짜들을 달력에서 선택 불가능하도록 제한



disableBeforeDate(
									  dateStr
										)
								

입력 받은 날짜 이전의 날짜들은 달력에서 선택 불가능하도록 제한



disableDate(
									  dateStr
										)
								

특정 날짜를 비활성한다



disableValidate(
									  
										)
								

disableBeforeDate 또는 disableAfterDate 속성/API등으로 캘린더의 날짜중 일부를 '비활성화' 처리 했을 경우, 



enableAllDate(
									  
										)
								

disableAfterDate 및 disableBeforeDate API를 통해서 입력일 이전/이후 날짜 선택을 가능하도록 변경



enableDate(
									  dateStr
										)
								

특정 날짜를 활성화한다



focus(
									  
										)
								

입련란으로 포커스를 이동



getButtonTitle(
									  
										)
								

설정된 buttonTitle 값을 가져온다



getDataListInfo(
									  
										)
								

컴포넌트와 바인딩된 DataList를 반환



getDefaultDate(
									  
										)
								

현재 컴포넌트에 설정된 defaultDate를 반환. 



getDisabled(
									  
										)
								

현재 웹스퀘어 컴포넌트에 설정된 disabled 속성 값을 반환



getDisplayFormat(
									  
										)
								

현재 컴포넌트에 설정된 displayFormat을 반환합니다



getDisplayValue(
									  
										)
								

displayFormat이 적용된 날짜를 반환한다



getFormattedValue(
									  formatStr
										)
								

formatStr의 패턴이 적용된 value를 반환하며 foramtStr의 값이 없는 경우  displayFormat속성에 적용된 패턴을 사용하여 value를 반환한다



getGenerator(
									  
										)
								

컴포넌트가 Generator에 의해 생성된 경우, 자신을 생성한 부모 Generator 객체를 반환



getID(
									  
										)
								

웹스퀘어 컴포넌트의 ID를 반환



getInitStyle(
									  CSS
										)
								

컴포넌트의 초기 스타일을 반환



getIoFormat(
									  
										)
								

현재 컴포넌트에 설정된 ioFormat속성값을 반환한다



getNextTabID(
									  
										)
								

nextTabID 속성의 설정 값을 반환



getOpacity(
									  
										)
								

웹스퀘어 컴포넌트의 불투명도를 반환. (웹스퀘어 컴포넌트 공통.)



getOriginalID(
									  
										)
								

웹스퀘어 컴포넌트의 originalID를 반환. (웹스퀘어 컴포넌트 공통.)



getPluginName(
									  
										)
								

웹스퀘어 컴포넌트의 이름(pluginName)을 반환



getPosition(
									  positionName
										)
								

웹스퀘어 컴포넌트의 위치(left, top)를 반환. (웹스퀘어 컴포넌트 공통.) 



getReadOnly(
									  
										)
								

현재 웹스퀘어 컴포넌트에 설정된 readOnly 속성 값을 반환



getScope(
									  
										)
								

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)  



getScopeWindow(
									  
										)
								

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)



getSize(
									  sizeName
										)
								

웹스퀘어 컴포넌트의 크기(width, height)를 반환. (웹스퀘어 컴포넌트 공통.) 



getStyle(
									  propertyName
										)
								

웹스퀘어 컴포넌트의 CSS 속성 값을 반환



getStyleValue(
									  style
										)
								

[deprecated]



getTitle(
									  
										)
								

inputCalendar의 title 속성을 가져온다



getUdcHome(
									  
										)
								

UDC 객체가 자신을 정의한 UDC 파일 경로를 파일명을 포함해서 반환. (웹스퀘어 컴포넌트 공통.)



getUdcRoot(
									  
										)
								

UDC 객체가 자신을 정의한  UDC 파일 경로를 반환. (웹스퀘어 컴포넌트 공통.)



getUserData(
									  key
										)
								

setUserData로 웹스퀘어 컴포넌트에 설정한 key의 value 혹은 사용자가 직접 페이지 소스(XML)에 속성으로 정의한 value를 반환



getValue(
									  
										)
								

input에 입력 된 value를 구분자 없이 반환한다



hasClass(
									  className
										)
								

웹스퀘어 컴포넌트가 특정 class를 포함하고 있는지 확인



hide(
									  
										)
								

웹스퀘어 컴포넌트를 화면에서 숨김. (웹스퀘어 컴포넌트 공통.)



removeClass(
									  className
										)
								

웹스퀘어 컴포넌트에서 class를 삭제. (웹스퀘어 컴포넌트 공통.)



removeHoliday(
									  
										)
								

holiday 설정을 초기화한다



select(
									  
										)
								

input에 입력 된 값을 select한다



setButtonTitle(
									  
										)
								

buttonTitle 값을 설정한다



setCalendarValueType(
									  calendarValueType
									       , 
									       options
										)
								

calendarValueType과 displayFormat 및 ioFormat속성을 동적으로 변경한다



setDefaultDate(
									  dateStr
										)
								

defaultDate 속성을 설정



setDisabled(
									  disabled
										)
								

컴포넌트의 disabled 속성을 설정



setDisplayFormat(
									  format
										)
								

컴포넌트의 displayFormat속성을 설정한다



setEventPause(
									  evList
									       , 
									       flag
										)
								

지정한 이벤트를 중단함



setHoliday(
									  dateStr
									       , 
									       removeHoliday
										)
								

특정 날짜에 holiday를 지정한다



setHolidayRef(
									  setHolidayRef
										)
								

holidayRef 속성을 설정하는 기능으로 DataCollection과 연동시 "data:"라는 prefix를 꼭 붙여야한다.



setInitStyle(
									  property
										)
								

컴포넌트의 초기 스타일을 복구한다



setInputReadOnly(
									  readOnly
										)
								

인자로 넘겨받은 boolean값에 따라 inputbox만을 readOnly할 수 있다



setIoFormat(
									  ioFormat
									       , 
									       displayFormat
										)
								

inputCalendar의 ioFormat 및 displayFormat속성을 설정한다



setMaxYear(
									  maxYear
										)
								

calendar의 maxYear를 동적으로 설정한다



setMinYear(
									  minYear
										)
								

calendar의 minYear를 동적으로 설정한다



setNextTabID(
									  componentID
									       , 
									       componentScope
										)
								

nextTabID 속성을 설정.



setOpacity(
									  value
										)
								

웹스퀘어 컴포넌트의 불투명도를 설정. (웹스퀘어 컴포넌트 공통.)



setPlaceholder(
									  placeholderStr
										)
								

placeholder 속성값을 변경한다



setPosition(
									  left
									       , 
									       top
									       , 
									       mode
										)
								

웹스퀘어 컴포넌트의 위치(left, top)를 설정



setReadOnly(
									  readOnly
										)
								

readOnly 속성값을 설정한다



setRef(
									  ref
										)
								

ref 속성을 설정. DataCollection과 연동시 "data:"라는 prefix를 꼭 붙여야 함.



setSkin(
									  skin
										)
								

calendar의 skin을 설정한다



setStyle(
									  propertyName
									       , 
									       value
										)
								

웹스퀘어 컴포넌트의 CSS 속성을 설정



setUserData(
									  key
									       , 
									       value
										)
								

웹스퀘어 컴포넌트에 임의의 데이터를 설정. (웹스퀘어 컴포넌트 공통.) 



setValue(
									  value
										)
								

컴포넌트의 value를 설정한다



setValueCancel(
									  
										)
								

inputCalendar에 값이 입력 중인 상태일 때, 입력 중인 값을 무시하고 이전 값으로 되돌리는 함수.



show(
									  displayType
										)
								

웹스퀘어 컴포넌트를 화면에 표시. (웹스퀘어 컴포넌트 공통.)



toggleClass(
									  className
										)
								

웹스퀘어 컴포넌트에서 특정 class를 제거하거나 추가. (웹스퀘어 컴포넌트 공통.)



trigger(
									  type
									       , 
									       array
										)
								

컴포넌트에서 특정 이벤트를 발생시킴



unbind(
									  type
									       , 
									       function
										)
								

컴포넌트에서 이벤트를 제거



unbindRef(
									  
										)
								

ref 바인딩을 해제



validate(
									  
										)
								

컴포넌트의 유효성 관련 속성값을 통해 유효성 검사를 실행



validateObject(
									  
										)
								

컴포넌트의 유효성 관련 속성값을 통해 유효성 검사를 실행



visible(
									  flag
										)
								

[deprecated] 



Property Detail




alt

이미지로 구성된 달력아이콘의 HTML alt 속성에 들어갈 문자열로 웹 접근성 작업 시 필수 입력해야한다.


autoFocus

[default:false, true] nextTabID가 지정되어 있는 경우, maxByteLength 지정값과 일치할 경우 자동으로 focus를 이동시킬지 유무단, 한글이 마지막으로 입력된 경우에는 글자가 완성된 이후 추가 입력이 일어났을 때 focus를 이동시킨다. (한글은 글자가 완성되기 전에 maxByte에 도달하므로 글자가 완성된 이후 추가 입력이 발생하여 maxByte를 넘길때 이동시킨다.)


buttonTitle

inputCalendar의 달력이미지에 title속성값을 준다. 명시된 값을 브라우저에서 달력이미지에 마우스 over시 툴팁형태로 표현한다. 일반적으로 웹접근성 작업 시 설정한다.


calendarClass

[default:class1, class2, class3, class4, class5]Calendr의 스킨을 정의한다.


calendarDisplayFormat

inputCalendar의 displayFormat 속성과는 별도로 달력에 표시되는 날짜 자체의 displayFormat을 설정하고자 할 때 사용한다.


calendarDisplayFormatFunc

함수명을 입력받아 해당 함수의 return값으로 calendarDisplayFormat을 설정한다. 함수 호출 시 인자로 calendarValueType을 넘겨준다. calendarDisplayFormat이 이미 설정되어 있는 경우에는 이 속성은 무시된다.


calendarImage

컴포넌트의 오른쪽에 위치한 달력버튼의 이미지 파일 경로.


calendarImageOver

컴포넌트의 오른쪽에 위치한 달력버튼에 마우스가 올라갔을 때의 이미지 파일 경로.


calendarValueType

[default:yearMonthDate, yearMonth, year, yearMonthDateHour, yearMonthDateTime, yearMonthDateTimeSec]calendar의 표현 방법을 정의한다.


cancelButtonShow

[default:false, true]calendar의 X모양의 버튼 표시 여부로 버튼은 우측 하단에 표현된다.해당 버튼을 click하면 calendar가 닫힌다.


caption

calendar의 HTML caption Tag의 값을 설정한다.(calendar는 table Tag를 이용하여 구성되어있다)일반적으로 웹 접근성 작업 시 입력한다.


class

HTML의 class 속성과 동일한 기능을 제공. CSS 파일이나 style 블럭에 정의한 여러 개의 class를 공백으로 구분하여 적용 가능.Engine 내부에서 각 컴포넌트 별로 지정된 class를 적용하나, class 속성을 이용하여 컴포넌트의 CSS를 제어 가능. 본 컴포넌트는 복합 구조를 가지고 있어 본 속성으로만 CSS를 제어하기 어렵기 때문에 하위 태그에 적용된 class를 이용해야 함.


dateValidCheck

입력된 날짜의 유효성을 검증. [default: false, true]입력된 날짜의 유효성(length, year, month, date 범위 및 윤년 등)을 검정.
(옵션 설명)
 "true" : 입력된 날짜의 유효성을 검증함. 
 "false" (기본 값) : 입력된 날짜의 유효성을 검증하지 않음. 

(관련 함수)
 validate()


dateValidSet

입력된 날짜 값의 유효성을 확인하여, 유효하지 않을 경우 이전 값으로 복귀. [default: false, true] 유효성 확인 함수는 validator를 통해 구현.
(옵션 설명)
 "true" : 유효성 확인. 
 "false" (기본 값) : 유효하지 않더라도 이전 값으로 복귀하지 않음.   

(관련 속성)
 validator


dateValidSetCustom

유효하지 않는 값이 입력된 경우, invalidMessageFunc만 호출. [default: false, true]validCheck="true" dateValidCheck="true"인 경우 표시되는 alert은 표시하지 않음.  단, dateValidSet="true"인 경우만 유효. 

(관련 API)
 validCheck="true"
 dateValidCheck="true"
 dateValidSet="true"
 invalidMessageFunc="함수"
 setValueCancel()


dayMoveFixed

년, 월 이동시 이전선택한 날짜를 유지 할지 유무.


defaultDate

입력 값이 없는 상태에서 사용자가 초기에 달력 아이콘을 클릭할 때 달력에 표시되는 날짜. [Default: "" (빈 스트링)]날짜는 calendarValueType 설정에 따라 입력해야 함. 설정하지 않을 경우, 현재 날짜가 달력에 표시되고 getDefaultDate(); 함수를 실행하면 빈 스트링이 반환됨. 
(관련 API)
 calendarValueType (속성)
 getDefaultDate(); (함수)
 setDefaultDate(); (함수)


delimiter

[default:-]input과 calendar의 하단에 표현되는 년월일간의 구분자를 설정한다.


disabled

[default:false, true] 컴포넌트 비활성 여부. 
 (옵션 설명)
 "false" (기본 값) 컴포넌트를 비활성화 하지 않음. 
 "true" 컴포넌트를 비활성화 함.


disableDateValidSet

비활성화된 날짜가 입력될 경우, blur 시 이전에 입력했던 정상적인 값을 입력 창에 표시. [default: false, true]disableBeforeDate 또는 disableAfterDate 속성으로 비활성화된 날짜를 입력할 경우 발생. 
(옵션 설명)
 "true" : 비활성화된 날짜 값을 입력 시, 이전에 입력했던 유효한 값을 표시. 
 "false" (기본 값) : 비활성화된 날짜 값이 입력됨. 

(관련 API)
 disableBeforeDate
 disableAfterDate


displayDayType

[default:image, text]calendar의 요일 부분을 image 또는 text 표현할지 설정한다


displayFormat

input에 표현될 년월일에 대한 format으로 delimiter속성은 무시된다. ex) yyyy/MM/dd , yyyy/MM/dd (EEE)  만약 사용자가 입력하는 년월일의 순서가 yyyyMMdd와 다르다면 ioFormat 속성을 함께 적용한다. ex)dd/MM/yyyy


displayFormatFunc

함수명을 입력받아 해당 함수의 return값으로 displayFormat을 설정한다. 함수 호출 시 인자로 calendarValueType을 넘겨준다. displayFormat이 이미 설정되어 있는 경우에는 이 속성은 무시된다.


displaymessage

validate(); 검증 결과가 실패일 경우, 메세지를 표시. [default: false, true]기본적으로 엔진 내부에 정의된 메시지를 표시. 
(옵션 설명)
 "true" : 검증 실패 시, 결과 메시지를 표시. 
 "false" (기본 값) :  검증 실패 시, 결과 메시지를 표시하지 않음.  
(관련 API)
 validate();


dynamicHeaderOrder

pickerType="dynamic"인 경우 헤더 부분의  헤더 부분의 label 순서를 결정. [default: month, year]
(옵션 설명)
 "month" (기본 값) : 월 - 연도 순서로 출력. 
 "year" : 연도 - 월 순서로 출력.


editType

[default:focus, select] 사용자가 컴포넌트 클릭 시 결과 동작 지정. 
 (옵션 설명)
 "select" (기본 값) 포커스가 발생할 때 선택된 텍스트를 선택.  
 "focus" 텍스트의 맨 끝으로 커서를 이동.


fixedDate

[today]calendar의 하단에 표현되는 날짜를 사용자가 선택한 날짜가 아닌 현재일로 고정하여 표현 할지의 속성.


focusOnDateSelect

[default:false, true]모바일에서 달력의 날짜 선택시 input에 focus를 줄지 여부


focusOnOuterDiv

calendar 외부 div에 tabindex와 포커스를 줄지 여부( 웹접근성 사용시 필요 ) [default: false, true]


footerDiv

[default:false, true]calendar의 선택 된 날짜등이 있는 하위 영역을 table Tag가 아닌 div Tag로 표현할지 여부


handleIconClick

달력 아이콘 클릭시 처리하는 콜백 함수


id

컴포넌트 ID. 컴포넌트 ID는 전역 객체로 할당됨. 각 컴포넌트 ID를 통해 Script에서 해당 컴포넌트에 접근 가능.


inputReadOnly

읽기 전용 설정. [default: false, true]
(옵션 설명)
 "true" : 읽기 전용을 설정하여, 입력 상자에 입력이 불가. 
 "false" (기본 값) : 읽기 전용을 설정하지 않음.


invalidMessageFunc

validate(); 검증 결과가 실패일 경우, 결과 메시지를 동적으로 표시할 사용자 정의 함수 이름.  displaymessage="true"일 경우만 유효. 
// (사용자 정의 함수 예)
// 아래 type에 대한 검증 실패 시, 메시지를 동적으로 생성하는 예.
// mandatory, dateValidCheck

 scwin.fn_msg = function(){
    var msg = "";
    var invalidType = this.getType();  
    if (invalidType == "mandatory") {
        msg = "Enter a date. 날짜를 입력하세요. ";
    } else {
        msg = "Invalid date. 날짜 형식을 확인하세요.";
    }
    alert(msg); 
 };
(관련 API)
 validate();
 mandatory="true"
 dateValidCheck="true"


ioFormat

[defulat:yyyyMMdd]사용자가 data를 입력하는 순서와 format 매칭시켜주는 기능이다.('y','M','d','H','m' 문자만 허용한다.)


keepFixedDate

fixedDate = "today"로 설정 시, 하단에 표현되는 날짜를 오늘 날짜로 고정 시키는 기능을 설정true : fixedDate = "today" 설정 시, 하단에 표현되는 날짜가 오늘 날짜로 고정됨. false : fixedDate = "today" 설정 시, 하단에 표현되는 날짜가 사용자가 달력에서 선택한 날짜에 따라 변경됨.


keepFocusSelect

달력버튼 클릭시 오늘 날짜로 자동포커스가 이동 할지 여부 [default: false, true]


keepInvalidDate

dateValidCheck 옵션에 의해 유효하지 않은 날짜 형식이라도 지우지 않고 그대로 유지할지 여부


mandatory

필수 선택 적용 여부. [default:false, true]validate 함수를 통해 입력값을 검증할 경우 필수 입력을 확인. 
(옵션 설명)
 "false" (기본 값) : 필수 선택 적용하지 않음. 
 "true" 필수 선택 적용. 
(관련 함수)
 validate();


maxYear

calendar에 표시되는 최대연도로 config.xml의 calendar하위의 maxYear의 value 속성값이 기본값으로 설정된다.ex)


minYear

calendar에 표시되는 최소연도로 config.xml의 calendar하위의 minYear의 value 속성값이 기본값으로 설정된다.ex)


monthNames

calendar의 월에 해당하는 selectbox에 display값을 설정하는 기능으로 1월부터 12월의 display값을 ,(comma)로 구분하여 정의한다.ex) Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec


monthNamesForYearMonthType

calendarvaluetype이 yearMonth일 경우, calendar의 월에 해당하는 selectbox에 display값을 설정하는 기능으로 1월부터 12월의 display값을 ,(comma)로 구분하여 정의한다.ex) Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec


nextLastMonthDateSelect

달력에서 다음달과 이전달 날짜를 클릭할 경우 바로 선택된 날짜 설정 여부. [default: false, true]


nextTabID

Tab 키로 이동할 경우, Tab 키를 누를 때 선택되는 컴포넌트의 ID.


outsideClickEvent

calendar 컴퍼넌트 calendarValueTYpe = "yearMonth" 시 년/월 변경영역 밖에 클릭시 이벤트 발생 여부


pickerType

클릭할 경우 현재 날짜로 이동하는 Today 버튼 표시 여부를 설정. [default: selectbox, dynamic]
(옵션 설명)
 "selectbox" (기본 값) : 연도나 월을 selectbox 형태에서 선택. 
 "dynamic" : selectbox없이 연도나 월을 리스트 형태로 선택.


placeholder

HTML5의 placeholder와 동일한 기능을 제공. 사용자에게 알려줘야 할 힌트 문구 등을 명시. InputCalendar의 값이 비어 있을 때 placeholder로 설정한 문구가 표시되며, 값을 입력하는 순간 문구는 사라짐. 브라우저 별로 동작 방식이 상이. (예: IE는 포커싱을 할 경우 문구가 사라지나, Chrome은 텍스트 입력 시 문구가 사라짐.)


readOnly

[default:false, true]readonly의 여부로 HTML의 readonly속성과 동일한 기능을 제공한다.달력 아이콘과 input 모두 readonly로 적용되며 input만 readonly 시킬 때는 inputReadOnly 속성을 설정한다.


ref

DataCollection의 value 경로. DataCollection의 value와 웹스퀘어 컴포넌트를 바인딩할 때 사용. "data:" prefix를 추가하여 data:[DataCollection ID].[Key id 또는 Column id] 형태로 지정해야 함. DataList와 바인딩된 경우, GridView에서 선택된 행의 값이 바인딩됨.
 (작성 예)
 data:dataMap1.deptInstance Data와 연동 할 경우 연동 할 XML 데이터의 XPath를 명시해야 함. 
 (작성 예)
 res/userInfo/dept/@value


renderDiv

[default:true, false]calendar를 div로 구성할지의 여부로 기본적으로 table로 구성되어있다.


renderType

[default:component, native]컴포넌트의 레이아웃 구조를 설정한다.component : 내부적으로 div 및 table을 이용하여 달력을 표현합니다. 웹 접근성을 위해서는 사용을 지양해야 합니다.native : 주로 웹 접근성을 위해 사용되는 속성으로 달력 내부의 selectbox를 html의 select태그를 사용하여 렌더링하며, 달력의 숫자 및 버튼들을 html의 button태그로 렌더링합니다.


rightAlign

calendar를 오른쪽으로 정렬하여 표시함.


setCurrentDate

날짜 input 현재일 출력 유무


showPlaceHolderOnReadOnly

읽기전용 모드(readOnly="true"에서도 placeholder 속성으로 지정된 값을 표시.true: 표시. false (기본 값): 표시하지 않음. 관련 속성: readOnly, placeholder


showToday

클릭할 경우 현재 날짜로 이동하는 Today 버튼 표시 여부를 설정. [default: true, false]
(옵션 설명)
 "true" (기본 값) : Today 버튼을 달력에 표시. 
 "false" : Today 버튼을 달력에 표시하지 않음.


skipConfirm

[default: false, true] 사용자가 월(month)을 선택할 경우 자동으로 값이 설정됨. (확인 버튼이 표시 되지 않고 사용자는 확인 버튼을 클릭할 필요가 없음.) true: 확인 버튼 클릭 없이 자동 설정.false (기본 값): 사용자가 확인 버튼을 클릭해야 선택한 값이 설정.


skipConfirmOnly

[default: false, true] << < > >> 버튼을 선택하여 연도 및 월을 선택하는 월(month) 목록에서 직접 월을 선택할 경우 확인 버튼 클릭 없이 자동으로 월이 선택됨. (확인 버튼은 표시됨.)true: 월 목록에서 월을 선택할 경우 해당 값이 자동으로 설정. (확인 버튼은 표시됨.)false (기본 값): 월 목록에서 월을 선택하고 확인 버튼을 클릭해야 해당 값이 설정됨.


summary

HTML의 table Tag의 summary 속성과 동일한 기능을 제공한다. 일반적으로 웹접근성 화면 구현시 사용된다.


tabIndex

Tab 키를 이용하여 포커스를 변경할 경우, 해당 컴포넌트에 포커스를 주는 순서. HTML의 tabindex 속성과 동일.


title

HTML의 title 속성과 동일. 마우스 오버 시, title로 저장한 값이 툴팁으로 표시됨. 일반적으로 웹접근성 지원용으로 설정.


todaySelect

달력에서 today버튼을 누름과 동시에 오늘 날짜가 입력창에 설정되고 달력은 닫히도록 하는 기능 설정. true: today버튼 눌렀을 때, 오늘 날짜가 입력창에 바로 설정 후 달력 닫힌다.   false (기본 값): 오늘 날짜에 포커스


tooltip

사용자가 컴포넌트에 마우스-오버할 때 표시되는 텍스트. 웹스퀘어가 제공하는 툴팁으로, 컴포넌트의 추가 정보를 명시.


tooltipLocaleRef

tooltip 문구가 정의되어 있을 경우 클라이언트 다국어 적용시 툴팁에 출력하는 텍스트의 key.key에 해당하는 텍스트가 없을 경우 "global_undefined"가 화면에 표시됨.


topLayout

[default: false, true] Today 및 닫기 버튼을 우측 상단으로 이동.true: Today 및 닫기 버튼을 우측 상단에 표시. false: 원래의 위치(컴포넌트 하단)에 표시.


type

HTML의 type 태그 속성과 동일. [default: text]


useAnchor

앵커를 이용해 책갈피로 이동시킬것인지 여부. renderDiv옵션이 false인 경우만 동작하며(inputCalendar가 table로 그려졌던 하위 버전의 옵션)센스리더 사용자에겐 달력 열기 버튼을 사용할 수 없도록 하기 위해서 useAnchor=false를 줌.


useButton

[default: false, true] 웹접근성 사용 시, '확인', '취소' 요소를 div태그에서 button태그로 변경.true: '확인', '취소' 요소를 button 태그로 변경함. false (기본 값): '확인', '취소' 요소를 기존의 div 태그로 유지함.


useCalendarTabIndex

useAnchor = false인 경우에도 달력에 tab키로 포커스 이동을 가능하게 할지에 대한 여부.


userData1

사용자 정의 데이터 속성. getUserData("userData1") API를 통해 설정한 값을 얻어올 수 있음. 
 // 속성 값 얻어오기 예시
 getUserData("userData1");


userData2

사용자 정의 데이터 속성. getUserData("userData2") API를 통해 설정한 값을 얻어올 수 있음. 
 // 속성 값 얻어오기 예시
 getUserData("userData2");


userData3

사용자 정의 데이터 속성. getUserData("userData3") API를 통해 설정한 값을 얻어올 수 있음. 
 // 속성 값 얻어오기 예시
 getUserData("userData3");


validateOnInput

[default:false] 값을 직접 입력할 때 유효성에 어긋나는 값이 입력되지 않도록 하는 속성 (oninput 이벤트를 지원하는 IE9이상 브라우저 지원)true: 유효성에 어긋나는 값은 입력되지 않는다. (한글, 영문 등 달력 날짜값과 관계없는 값은 입력이 되지 않도록 입력을 막는다.)false (기본 값): oninput 시점에 유효성 검사를 수행하지 않음.


validateOnInputMobile

[default:false] 값을 직접 입력할 때 유효성에 어긋나는 값이 입력되지 않도록 하는 속성. 모바일 전용. onkeyup 이벤트에서 처리.true: 유효성에 어긋나는 값은 입력되지 않는다. (한글, 영문 등 달력 날짜값과 관계없는 값은 입력이 되지 않도록 입력을 막는다.)false (기본 값): onkeyup 시점에 유효성 검사를 수행하지 않음.


validateRef

ref로 연동시에도 유효성 함수가 동작되도록 설정함. 관련 속성으로 validCheck, dateValidSet, displaymessag 등이 있다.


validator

유효성 체크 함수 이름.컴포넌트에서 blur가 발생하는 시점에 본 속성에 정의한 함수가 실행됨. 즉, onblur 이벤트 이전에 실행되며, blur가 발생하는 시점에 유효성을 확인하며 return을 통해 value를 변경 할 수 있음.


validCheck

입력된 날짜의 유효성을 확인하여 유효하지 않은 날짜가 입력될 경우 alert을 표시. [default:false, true]


visibleHourList

[default:1,2,...,23,24] 시간이 표시되는 달력에서 시간 항목을 설정하는 속성. [,]를 구분자로 사용한다. (ex) calendarValueType="yearMonthDateTime", visibleHourList="5,10,15,20" 인 경우, 시간 목록 선택 시 [5,10,15,20] 목록만 나타난다.


visibleMinList

[default:1,2,...,59,60] 분이 표시되는 달력에서 분 항목을 설정하는 속성. [,]를 구분자로 사용한다. (ex) calendarValueType="yearMonthDateTime", visibleMinList="0,5,10,15,20,25,30,35,40,45,50,55" 인 경우, 분 목록 선택 시 5의 배수 목록만 나타난다.


visibleSecList

[default:1,2,...,59,60] 초가 표시되는 달력에서 초 항목을 설정하는 속성. [,]를 구분자로 사용한다. (ex) calendarValueType="yearMonthDateTime", visibleSecList="0,5,10,15,20,25,30,35,40,45,50,55" 인 경우, 초 목록 선택 시 5의 배수 목록만 나타난다.


visibleWeekNum

달력에 표시할 주(Week)의 개수를 설정. 
(옵션 설명)
 기본 값: "6". (달력에 6주에 해당하는 날짜를 표시. 6보다 작으면 달력 높이가 줄고, 6보다 크면 달력의 높이가 증가함.)
(관련 속성)
 calendarValueType=
   "yearMonthDate"
   "yearMonthDateHour"
   "yearMonthDateTime"
   "yearMonthDateTimeSec"
   "yearMonth" (해당 없음. 달력이 표시되지 않음.)
   "year" (해당 없음. 달력이 표시되지 않음.)


weekStartsOn

[default:0, 1, 2, 3, 4, 5, 6]calendar의 시작 요일을 설정한다(0:일, 1:월, 2:화, 3:수, 4:목, 5:금, 6:토)


wmode

[default:false, true] wmode를 사용하여 선택 항목 목록을 object 태그보다 상위에 표시. 선택 항목 목록이 object(ActiveX, Flash 등)에 가려질 경우 사용. 본 컴포넌트가 아닌 object(ActiveX, Flash 등)태그에 wmode 사용할 것을 권장. 
 (옵션 설명)
 "true" wmode 사용.
 "false" (기본 값) wmode 사용하지 않음.


yearSuffix

연도 selectbox의 display되는 값의 숫자(연도) 뒤에 들어갈 문자열.연도만 display 시킬 때는 $blank로 정의한다.





Event Detail




onblur

포커스를 잃었을 때 발생

Parameter

nametypedescription


eObject이벤트 객체





onchange

component의 value가 변경되었을 때 발생하는 이벤트로 focus out 시점에 발생한다.스크립트를 통해 값이 변경 된 경우에도 발생하며, 이전값/이후값을 비교 할 때는 onviewchage 이벤트를 사용한다.



onclick

마우스로 inputcalendar를 클릭했을 때 발생

Parameter

nametypedescription


eObject이벤트 객체





ondateselect

날짜 선택 시 발생

Parameter

nametypedescription


dateStrString선택한 날짜의 문자열


dateObjDate선택한 날짜의 Date 객체


Sample
//사용자가 2002년 04월 15일을 선택 한 경우 엔진에서 넘겨주는 파라메터 예시
dateStr : "20020415" (String 객체)
dateObj : Mon Apr 15 2002 00:00:00 GMT+0900 (Date 객체)


onfocus

포커스를 얻었을 때 발생

Parameter

nametypedescription


eObject이벤트 객체





oniconclick

달력 아이콘이 클릭되면 발생



onkeydown

키보드에서 키를 눌렀을 때 발생

Parameter

nametypedescription


eObject이벤트 객체





onkeypress

키보드에서 키를 눌렀을 때(누르고 있는 동안에도) 발생

Parameter

nametypedescription


eObject이벤트 객체





onkeyup

키보드에서 키를 눌렀다 놓았을 때 발생

Parameter

nametypedescription


eObject이벤트 객체





onmonthselect

달력화면에서 월 변경시 발생. 이전 월과 새로 선택된 월을 파라미터로 전달 받음.(pickerType="dynamic" calendarValueType="yearMonth" 경우발생)

Parameter

nametypedescription


infoJSONoldValue, newValue를 포함한 JSON을 반환한다.


Sample
//사용자가 2월인 상태에서 3월 선택 한 경우 엔진에서 넘겨주는 파라미터 예시
info.oldValue : "2"
info.newValue : "3"


onviewchange

키보드 또는 마우스 조작을 통해 값이 변경된 경우 발생.스크립트를 통해 값이 변경된 경우에는 발생하지 않음. (native onchange 이벤트와 유사함.)

Parameter

nametypedescription


infoJSONoldValue, newValue를 포함한 JSON을 반환한다.
 info.oldValue : 이전 값
 info.newValue : 변경된 값


Sample
//사용자가 2002년 04월 15일로 설정 되어있던 값을 2099년 12월 31일로 설정 한 경우
<![CDATA[
    var oldValue = info.oldValue;   //이전 값
    //return 예시 ) "20020415"

    var newValue = info.newValue;   //선택 된 값
    //return 예시 ) "20991231"
]]>


onyearselect

달력화면에서 연도 변경시 발생. 이전 연도와 새로 선택된 연도를 파라미터로 전달 받음.(pickerType="dynamic" calendarValueType="yearMonth" 경우발생)

Parameter

nametypedescription


infoJSONoldValue, newValue를 포함한 JSON을 반환한다.


Sample
//사용자가 2017년도인 상태에서 2016년도 선택 한 경우 엔진에서 넘겨주는 파라미터 예시
info.oldValue : "2017"
info.newValue : "2016"



Method Detail




addClass(
									  className
										)
							

컴포넌트에 CSS class를 추가. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


classNameStringY추가할 class의 이름



Sample
// (예제)
// input1 컴포넌트에 oddClass라는 class를 추가    
input1.addClass("oddClass");


bind(
									  eventType
									       , 
									       function
										)
							

컴포넌트에 이벤트와 핸들러 함수를 동적으로 할당. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


eventTypeStringY할당할 이벤트


functionFunctionY이벤트에 대한 핸들러 함수.



Sample
// (예제 1)
// input1의 onclick 이벤트에 대한 핸들러 함수를 직접 정의하여 할당. 
input1.bind("onclick", function(e){ alert(input1.getValue();}));

// (예제 2)
// 미리 commObj.ev_click 함수를 정의.
var commObj = {};
commObj.ev_click = function(e){
    alert("click :: "+this.id);
};

// input1 컴포넌트에 onclick 이벤트와 정의한 핸들러 함수를 동적으로 할당. 
input1.bind("onclick", commObj.ev_click );


blur(
									  
										)
							

input에 포커스를 제거(blur)한다


Sample

 inputCalendar1.blur();


changeClass(
									  oldClassName
									       , 
									       newClassName
										)
							

웹스퀘어 컴포넌트의 class를 변경. (웹스퀘어 컴포넌트 공통.) 기본적으로 addClass를 통해 추가된 class만 변경 가능. 웹스퀘어 컴포넌트의 class 속성에 직접 정의된 class를 삭제하려면 config.xml 파일에 아래 설정을 추가해야 함. 
// config.xml에 아래 설정을 추가. 
<removeDefaultClass value="true" />


Parameter

nametyperequireddescription


oldClassNameStringY변경할 class


newClassNameStringY새로 사용할 class



Sample
// inputBox 컴포넌트에 class가 속성으로 직접 정의됨.


// config.xml 파일에 아래를 추가.

    <removeDefaultClass value="true" />


// class를 변경 가능. 
// (tmpInputClass class를 tmpInputWarninClass로 변경.)
input1.changeClass("tmpInputClass","tmpInputWarninClass");


disableAfterDate(
									  dateStr
										)
							

입력 받은 날짜 이후의 날짜들을 달력에서 선택 불가능하도록 제한.


Parameter

nametyperequireddescription


dateStrStringY비활성화 처리의 기준 날짜.



Sample
//ioFormat과 동일하게 입력
//ioFormat이 yyyyMMdd인 경우
inputCalendar.disableAfterDate("20170410");

//ioFormat이 ddMMyyyy인 경우
inputCalendar.disableAfterDates("10042017");
//display 예시 ) 2017년 4월 10일 이후 날짜는 비활성화되어 선택 불가능.


disableBeforeDate(
									  dateStr
										)
							

입력 받은 날짜 이전의 날짜들은 달력에서 선택 불가능하도록 제한.


Parameter

nametyperequireddescription


dateStrStringY비활성화 처리 기준 날짜



Sample
//ioFormat과 동일하게 입력
//ioFormat이 yyyyMMdd인 경우
inputCalendar.disableBeforeDate("20170410");

//ioFormat이 ddMMyyyy인 경우
inputCalendar.disableBeforeDate("10042017");
//display 예시 ) 2017년 4월 10일 이전 날짜는 비활성화 되어 선택 불가능.


disableDate(
									  dateStr
										)
							

특정 날짜를 비활성한다.


Parameter

nametyperequireddescription


dateStrStringY비활성할 날짜



Sample
inputCalendar1.disableDate("20160627 20180627"); 또는 전체 날짜를 비활성화 할 경우
inputCalendar1.disableDate("*");로 설정한다. (단, enableDate API로 활성화한 날짜는 비활성화되지 않는다.)


disableValidate(
									  
										)
							

disableBeforeDate 또는 disableAfterDate 속성/API등으로 캘린더의 날짜중 일부를 '비활성화' 처리 했을 경우, 파라미터로 전달 받은 날짜 값이 '비활성화' 된 상태 인지 아닌지를 판단해서 결과 값으로 반환한다.



Return

typedescription


Boolean입력 값이 비활성화된 날짜인 경우 true, 그렇지 않으면 false를 반환한다.


Sample
 예: disableBeforeDate = "20170911" disableAfterDate = "20170927"
 var returnValue = inputCalendar1.disableValidate("20170901");
 returnValue는 "true"를 반환한다.


enableAllDate(
									  
										)
							

disableAfterDate 및 disableBeforeDate API를 통해서 입력일 이전/이후 날짜 선택을 가능하도록 변경.


Sample
inputCalendar.enableAllDate();
// (출력 예) 비활성화된 날짜들이 다시 활성화되어 선택 가능.


enableDate(
									  dateStr
										)
							

특정 날짜를 활성화한다.


Parameter

nametyperequireddescription


dateStrStringY활성화할 날짜



Sample
calendar1.enableDate("20160627 20180627");
//display 예시 ) 2016년 06월 27일, 2018년 06월 27일에 해당하는 날짜는 활성화 한다.
calendar1.enableDate("*"); // disableDate API로 비활성화한 날짜를 제외한 전체 날짜를 활성화한다.


focus(
									  
										)
							

입련란으로 포커스를 이동. 브라우저의 포커스 동작 방식에 영향을 받음.


Sample
inputCalendar1.focus();
//input에 value가 있는 경우 마지막 문자 다음에 포커스가 위치한다.


getButtonTitle(
									  
										)
							

설정된 buttonTitle 값을 가져온다. buttonTitle은 달력이미지에 설정된 title 속성값이다.





getDataListInfo(
									  
										)
							

컴포넌트와 바인딩된 DataList를 반환.



Return

typedescription


Objectnodeset, label, value id를 객체로 반환


Sample
// 사용 예
inputCalendar1.getDataListInfo();


getDefaultDate(
									  
										)
							

현재 컴포넌트에 설정된 defaultDate를 반환. (defaultDate: 달력 아이콘을 클릭하면 표시되는 날짜. defalutDate 미설정시, 현재 시스템 날짜가 표시됨.)



Return

typedescription


String현재 설정된 defaultDate


Sample
inputCalendar1.getDefaultDate();
// (반환 예시 1) defaultDate = "20101225"인 경우, 20101225가 반환됨. 
// (반환 예시 2) defaultDate가 빈 값인 경우, 빈 문자열이 반환됨.


getDisabled(
									  
										)
							

현재 웹스퀘어 컴포넌트에 설정된 disabled 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Booleandisabled 속성 값


Sample
// 컴포넌트의 disabled 속성 값 확인 예제
var returnValue = componentId.getDisabled();
// (반환 값 예시) false


getDisplayFormat(
									  
										)
							

현재 컴포넌트에 설정된 displayFormat을 반환합니다.



Return

typedescription


String현재 설정된 displayFormat


Sample
//별도의 displayFormat속성을 정의하지 않은 경우
var returnValue = inputCalendar1.getDisplayFormat();
//return 예시 ) "yyyy-MM-dd"


getDisplayValue(
									  
										)
							

displayFormat이 적용된 날짜를 반환한다.



Return

typedescription


Stringforamt이 적용 된 값


Sample
//inputCalendar1컴포넌트의 displayFormat을 "yyyy-MM-dd"으로 적용하고 20171123을 입력 한 경우
var returnValue = inputCalendar1.getDisplayValue();
//return 예시 )"2017-11-23"


getFormattedValue(
									  formatStr
										)
							

formatStr의 패턴이 적용된 value를 반환하며 foramtStr의 값이 없는 경우  displayFormat속성에 적용된 패턴을 사용하여 value를 반환한다.


Parameter

nametyperequireddescription


formatStrStringNformat을 적용할 문자열




Return

typedescription


Stringformat이 적용된 value


Sample
//formatStr 파라메터를 넘기지 않는 경우
var returnValue1 = inputCalendar1.getFormattedValue();
//return 예시 ) "2002-04-15"

//formatStr 파라메터를 넘기는 경우
var returnValue2 = inputCalendar1.getFormattedValue("dd-MM yyyy");
//return 예시 ) "15-04 2002"


getGenerator(
									  
										)
							

컴포넌트가 Generator에 의해 생성된 경우, 자신을 생성한 부모 Generator 객체를 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Object부모 Generator 객체


Sample
//부모 Generator가 자식으로 Trigger를 생성한 예제
  

// 아래 예제의 경우 trigger1을 클릭하면 generator1 객체가 console에 표시됨. 
 scwin.trigger1.onclick = function(){ console.log(this.getGenerator());} 



getID(
									  
										)
							

웹스퀘어 컴포넌트의 ID를 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


String웹스퀘어 컴포넌트 ID


Sample
// 동적으로 웹스퀘어 컴포넌트를 받을 경우, 아래와 같이 ID 확인 가능.
function fn_validCheck(tmpObj){
    var compID = tmpObj.getID();
}
// 위의 예제 에서 tmpObj가 "input1" ID를 가지고 있는 경우,
// (반환 값) "input1"


getInitStyle(
									  CSS
										)
							

컴포넌트의 초기 스타일을 반환. initStyle 속성을 true로 설정한 컴포넌트만 유효하게 동작한다.(웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


CSSStringN속성 (지정하지 않으면 모든 정보 출력)






getIoFormat(
									  
										)
							

현재 컴포넌트에 설정된 ioFormat속성값을 반환한다.



Return

typedescription


String현재 설정된 ioFormat속성값


Sample
//별도의 ioFormat속성을 지정하지 않은 경우
var returnValue = inputCalendar1.getIoFormat();
return 예시 ) "yyyyMMdd"


getNextTabID(
									  
										)
							

nextTabID 속성의 설정 값을 반환.
(관련 속성)
nextTabID


Sample
// 사용 예
var nextTabID = inputCalendar1.getNextTabID();


getOpacity(
									  
										)
							

웹스퀘어 컴포넌트의 불투명도를 반환. (웹스퀘어 컴포넌트 공통.)엔진 내부적으로 CSS의 opacity 속성 값을 반환.



Return

typedescription


IntegerOpacity 값


Sample
// inputBox 컴포넌트에 opacity CSS를 적용.

        
// inputBox 컴포넌트의 opacity 값을 반환. 
var returnValue = input1.getOpacity(); 
// returnValue는 0 ~ 1 사이의 실수.
// (반환 값) "0.2"


getOriginalID(
									  
										)
							

웹스퀘어 컴포넌트의 originalID를 반환. (웹스퀘어 컴포넌트 공통.)originalID는 Scope 기능을 사용할 경우 존재. scope="true"인 WFrame를 사용할 경우, WFrame 내부의 컴포넌트 ID는 원래 사용자가 정의한 값(originalID) 앞에 prefix(wframeID + "_")가 추가되는 방식으로 변경됨.  originalID는 이 때, prefix가 추가되기 전 ID를 의미.



Return

typedescription


String컴포넌트의 originalID


Sample
// WFrame을 사용하는 다중 화면 구조 예시

// WFrame을 포함한 메인 화면 (main.xml) 
 

// 메인 화면 WFrame에 연결되는 소스 화면 (text.xml)


// text.xml 화면의 내부 스크립트에서 ID 및 originalID 확인하는 예제.
// getID 실행 
textbox1.getID(); // 실행 결과는 "wframe1_textbox1"
 
// getOriginalID 실행 
textbox1.getOriginalID(); // 실행 결과는 "textbox1"


getPluginName(
									  
										)
							

웹스퀘어 컴포넌트의 이름(pluginName)을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


String웹스퀘어 컴포넌트의 이름 (pluginName)


Sample
// 아래와 같이 공통 함수에서 동적으로 웹스퀘어 객체를 받는 경우, 컴포넌트 종류에 따른 분기 처리가 가능.
var commObj = {};

commObj.fn_makeReqData = function(tmpObj){
    var tmpID = tmpObj.getID(); // 컴포넌트 ID
    var tmpCompType = tmpObj.getPluginName();   // 컴포넌트 이름

    if(tmpCompType == "input"){
        //..로직..
    }else if(tmpCompType == "gridView"){
        //..로직 ..
    }else{
        //..로직..
    }
};


getPosition(
									  positionName
										)
							

웹스퀘어 컴포넌트의 위치(left, top)를 반환. (웹스퀘어 컴포넌트 공통.) 위치 값이 %로 설정된 경우, 픽셀로 변환된 값을 반환.


Parameter

nametyperequireddescription


positionNameStringY[left, top] 위치 종류




Return

typedescription


Number컴포넌트의 위치 값


Sample
// 아래와 같이 input 컴포넌트에 CSS 속성 margin이 적용된 경우,


// (예제) 위의 inputBox 컴포넌트의 top 값을 확인     
var returnValue = input1.getPosition("top"); 

// 픽셀 단위의 위치 값이 반환됨.

// (반환 값) 10


getReadOnly(
									  
										)
							

현재 웹스퀘어 컴포넌트에 설정된 readOnly 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Boolean현재 설정되어있는 readOnly 속성


Sample
// 컴포넌트의 readOnly 속성 값 확인 예제
var returnValue = componentId.getReadOnly();
// (반환 값 예시) false


getScope(
									  
										)
							

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)  scope="true"인 WFrame의 자식 컴포넌트가 아닌 경우, null을 반환.



Return

typedescription


ObjectWFrame 객체 또는 null


Sample
// (예제)
// 메인페이지에 wframe1이 있고, wframe1 내부에 wframe11이 존재. 
// 그리고, wframe11 내부에 textbox1이 존재.
   
textbox1.getScope(); 
// (반환 값) wframe11 객체


getScopeWindow(
									  
										)
							

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)scope="true"인 WFrame의 자식 컴포넌트가 아닌 경우, 전역 window 객체를 반환.



Return

typedescription


ObjectWFrame 객체의 scope 객체 또는 전역 window 객체


Sample
// (예제)
// 메인페이지에 wframe1이 있고, wframe1 내부에 wframe11이 존재. 
// 그리고, wframe11 내부에 textbox1이 존재.
   
var scope = textbox1.getScopeWindow();
scope.wframe11 === textbox1.getScope(); // true


getSize(
									  sizeName
										)
							

웹스퀘어 컴포넌트의 크기(width, height)를 반환. (웹스퀘어 컴포넌트 공통.) %로 설정된 경우, 픽셀로 변환된 값을 반환.


Parameter

nametyperequireddescription


sizeNameStringY크기 값의 종류. sizeName 별 계산 방법은 아래 표를 참고. 
height : element.clientHeight
innerHeight : element.clientHeight + padding
outerHeight : element.clientHeight + padding + border
outerMarginHeight : element.clientHeight + padding + border + margin
width : element.clientWidth
innerWidth : element.clientWidth + padding
outerWidth : element.clientWidth + padding + border
outerMarginWidth : element.clientWidth + padding + border + margin




Return

typedescription


Number컴포넌트의 크기 값


Sample
var returnValue = componentId.getSize("width");
// (반환 예) 100 
// 픽셀 단위의 크기 값이 반환됨. 
// %로 설정된 경우, 픽셀로 변환된 값이 반환됨.


getStyle(
									  propertyName
										)
							

웹스퀘어 컴포넌트의 CSS 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


propertyNameStringY반환할 CSS 속성




Return

typedescription


StringCSS 속성 값


Sample
//아래와 같이 input 컴포넌트가 정의 된 경우


// (예제) 위의 inputBox 컴포넌트의 width 값을 확인   
var returnValue = input1.getStyle("width");

// (반환 값) "144px"


getStyleValue(
									  style
										)
							

[deprecated]getStyle 사용 권장.웹스퀘어 컴포넌트에 적용된 해당 CSS 속성 값을 반환.


Parameter

nametyperequireddescription


styleStringY반환하려는 CSS 속성.




Return

typedescription


Stringstyle 해당 CSS 속성 값 (색을 반환하는 경우, HexCode로 반환됨.)





getTitle(
									  
										)
							

inputCalendar의 title 속성을 가져온다.



Return

typedescription


StringinputCalendar의 title 속성값.


Sample
var title = inputCalendar1.getTitle();


getUdcHome(
									  
										)
							

UDC 객체가 자신을 정의한 UDC 파일 경로를 파일명을 포함해서 반환. (웹스퀘어 컴포넌트 공통.)파일명은 마지막 .xml까지 포함. .xml을 제외한 경로는 getUdcRoot를 사용해서 반환.UDC 객체가 아닌 컴포넌트에서 호출된 경우에는 undefined가 반환됨.



Return

typedescription


StringUDC 파일 경로. (UDC가 아닌 경우, undefined가 반환됨.)


Sample
// 예제
// UDC 파일 경로는 /a/b/udc.xml 
// 화면 XML은  /a/c/main.xml 
// UDC 객체의 ID는 udc1
  
udc1.getUdcHome(); 
// (실행 결과) /a/b/udc.xml


getUdcRoot(
									  
										)
							

UDC 객체가 자신을 정의한  UDC 파일 경로를 반환. (웹스퀘어 컴포넌트 공통.)파일명을 포함하지 않음. 파일명을 포함한 경로는 getUdcHome을 사용해서 반환.UDC 객체가 아닌 컴포넌트에서 호출된 경우에는 undefined가 반환됨.



Return

typedescription


StringUDC 파일 경로. (UDC가 아닌 경우, undefined가 반환됨.)


Sample
// 예제
// UDC 파일 경로는 /a/b/udc.xml 
// 화면 XML은  /a/c/main.xml 
// UDC 객체의 ID는 udc1
  
udc1.getUdcHome();    
// (실행 결과) /a/b/


getUserData(
									  key
										)
							

setUserData로 웹스퀘어 컴포넌트에 설정한 key의 value 혹은 사용자가 직접 페이지 소스(XML)에 속성으로 정의한 value를 반환. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


keyStringY데이터의 key




Return

typedescription


Stringkey에 해당하는 value


Sample
// Input 컴포넌트에 사용자 속성(setTest)을 설정하는 예제


// 위에서 설정한 setTest을 값을 반환하는 예제. 
input1.getUserData("setTest");
// (반환 값) "Hello"

//setUserData를 통해 'valueTest'(key)와 'WebSquare'(data)로 설정하는 예제. 
input1.setUserData("valueTest","WebSquare");

// 위에서 설정한 setTest을 값을 반환하는 예제. 
input1.getUserData("WebSquare");
// (반환 값) "WebSquare"


getValue(
									  
										)
							

input에 입력 된 value를 구분자 없이 반환한다. ex) 2007/11/08 -> 20071108



Return

typedescription


String구분자 없는 날짜 문자열.


Sample
//선택된 날짜가 2011년 1월 1일 인 경우

//별도의 설정이 없는 기본 달력 또는 calendarValueType속성이 yearMonthDate인 경우, yyyyMMdd 형태.
var returnValue = calendar1.getValue();
//return 예시 ) "20110101" 

//calendarValueType속성이 yearMonth인 경우, yyyyMM 형태.
//return 예시 ) "201101"

calendarValueType속성이 yearMonthDateHour인 경우, yyyyMMddHH 형태.
//return 예시 ) "2011010100"

calendarValueType속성이 yearMonthDateTime인 경우, yyyyMMddHHmm 형태.
//return 예시 ) "201101010000"

calendarValueType속성이 yearMonthDateTimeSec인 경우, yyyyMMddHHmmss 형태.
//return 예시 ) "20110101000000"


hasClass(
									  className
										)
							

웹스퀘어 컴포넌트가 특정 class를 포함하고 있는지 확인. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


classNameStringY검색할 class 이름




Return

typedescription


Booleanclass의 포함 여부


Sample
// inputBox 컴포넌트에 class가 속성으로 직접 정의됨.

        
var returnValue = input1.hasClass("tmpInputClass");
// (반환 값) true


hide(
									  
										)
							

웹스퀘어 컴포넌트를 화면에서 숨김. (웹스퀘어 컴포넌트 공통.)display:none; 및 visibility:hidden; CSS를 적용.


Sample
// (예제) 컴포넌트를 숨김
componentId.hide();


removeClass(
									  className
										)
							

웹스퀘어 컴포넌트에서 class를 삭제. (웹스퀘어 컴포넌트 공통.)기본적으로 addClass를 통해 추가된 class만 삭제 가능. 컴포넌트의 속성으로 직접 정의된 class를 삭제하기 위해서는 config.xml 파일에 아래 설정을 추가해야 함. 
 // config.xml 파일에 아래 설정 추가 
 <removeDefaultClass value="true" />


Parameter

nametyperequireddescription


classNameStringY삭제 할 class명



Sample
// inputBox의 속성으로 class가 직접 정의된 경우,


// config.xml 파일에 아래 항목을 추가.

    <removeDefaultClass value="true" />


// removeClass를 통해 삭제 가능. 
input1.removeClass("tmpInputClass");


removeHoliday(
									  
										)
							

holiday 설정을 초기화한다.


Sample
inputCalendar1.removeHoliday();


select(
									  
										)
							

input에 입력 된 값을 select한다.


Sample
inputCalendar1.select();
//display 예시 ) input의 날짜 문자열을 drag하여 선택한 상태가 된다.


setButtonTitle(
									  
										)
							

buttonTitle 값을 설정한다. buttonTitle은 달력이미지에 설정된 title 속성값이다.





setCalendarValueType(
									  calendarValueType
									       , 
									       options
										)
							

calendarValueType과 displayFormat 및 ioFormat속성을 동적으로 변경한다.


Parameter

nametyperequireddescription


calendarValueTypeStringY[yearMonth, yearMonthDate, yearMonthDateHour, yearMonthDateTime, yearMonthDateTimeSec]새로 설정할 calendarValueType.


optionsJSONN설정할 ioFormat 및 displayFormat. 지정하지 않을 경우 해당 calendarValueType 기본값이 설정됨
 options.ioFormat : 새로 설정할 ioFormat. 없을 경우 해당 calendarValueType의 기본값이 설정됨.
 options.displayFormat : 새로 설정할 displayFormat. 없을 경우 해당 calendarValueType의 기본값이 설정됨.



Sample
//별도의 옵션이 없이 calendarValueType만 변경 한 경우
inputCalendar1.setCalendarValueType("yearMonth");   //calendarValueType이 yearMonth로 변경되고, ioFormat은 yyyyMM, displayFormat은 yyyy-MM로 자동변경.


//displayFormat에 요일을 추가 할 경우
inputCalendar1.setCalendarValueType("yearMonthDate", {"displayFormat" : "yyyy-MM-dd(EEE)"});
//input의 display 예시 ) 2002-04-15(월)


setDefaultDate(
									  dateStr
										)
							

defaultDate 속성을 설정. calendarValueType에 따라 날짜를 설정해야 함.


Parameter

nametyperequireddescription


dateStrStringY설정하려는 날짜



Sample
// calendarValueType = "yearMonthDate"인 경우, 아래와 같이 설정 가능.
inputCalendar1.setDefaultDate("20020415"); 
//  (반환 예시) 초기에 달력 아이콘을 클릭하면 2002년 04월 15일이 표시됨.


setDisabled(
									  disabled
										)
							

컴포넌트의 disabled 속성을 설정.


Parameter

nametyperequireddescription


disabledBooleanYdisabled 상태
true: disabled 속성 활성화
false: disabled 속성 비활성화



Sample
//컴포넌트에 disabled 설정
componentId.setDisabled(true);


setDisplayFormat(
									  format
										)
							

컴포넌트의 displayFormat속성을 설정한다.


Parameter

nametyperequireddescription


formatStringY새로 설정할 displayFormat



Sample
//input의 입력 값이 "2002-04-15" 일 경우
inputCalendar1.setDisplayFormat("yyyy.MM.dd");
//input display 예시 ) 2002.04.15


setEventPause(
									  evList
									       , 
									       flag
										)
							

지정한 이벤트를 중단함. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


evListStringN중단할 이벤트 목록. (null을 지정할 경우 해당 컴포넌트의 모든 사용자 이벤트가 중단되거나 중단 해제됨.)


flagBooleanY이벤트 중단 여부. 
true: 중단
false: 중단 해제.



Sample
// (예제 1)
// onclick 이벤트를 중단. 
input1.setEventPause("onclick", true); 

// (예제 2)
// onfocus 및 onblur 이벤트의 중단을 해제.
input1.setEventPause("onfocus,onblur", false); 

// (예제 3)
// input1에 등록된 모든 사용자 이벤트를 중단.
input1.setEventPause(null, true);


setHoliday(
									  dateStr
									       , 
									       removeHoliday
										)
							

특정 날짜에 holiday를 지정한다.


Parameter

nametyperequireddescription


dateStrStringYholiday를 지정할 날짜


removeHolidayBooleanN기존 holiday 삭제 여부



Sample
inputCalendar1.setHoliday("20160627"); 또는 전체 연도에 적용시에는
inputCalendar1.setHoliday("*0815");로 설정한다. 
//display 예시 ) 2016년 06월 27일에 해당하는 날짜의 글자색이 빨간색으로 적용된다.


setHolidayRef(
									  setHolidayRef
										)
							

holidayRef 속성을 설정하는 기능으로 DataCollection과 연동시 "data:"라는 prefix를 꼭 붙여야한다.명시하지 않는 경우 InstanceData의 XPath로 인식한다.


Parameter

nametyperequireddescription


setHolidayRefStringY적용할 setHolidayRef 경로.



Sample
//dataList1의 col1과 inputCalendar 컴포넌트의 공휴일 표시하려는 경우
inputCalendar.setHolidayRef("data:dataList1.col1");

//InstanceData의 test/holiday와 연동 할 경우.
inputCalendar.setHolidayRef("test/holiday");


setInitStyle(
									  property
										)
							

컴포넌트의 초기 스타일을 복구한다. initStyle 속성을 true로 설정한 컴포넌트만 유효하게 동작한다 (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


propertyStringNCSS 속성 (지정하지 않으면 모든 속성의 초기 값으로 복구.)



Sample
// (예제)
group1.setInitStyle();


setInputReadOnly(
									  readOnly
										)
							

인자로 넘겨받은 boolean값에 따라 inputbox만을 readOnly할 수 있다.


Parameter

nametyperequireddescription


readOnlyBooleanY속성을 활성화 시키려면 true, 비활성화 시키려면 false




Return

typedescription





Sample
 예: inputCalendar1.setInputReadOnly(true); 함수의 입력값이 true일 경우, input부분만 readOnly 상태가 된다.
 함수 입력 값이 false인 경우, ReadOnly속성은 적용되지 않는다.


setIoFormat(
									  ioFormat
									       , 
									       displayFormat
										)
							

inputCalendar의 ioFormat 및 displayFormat속성을 설정한다. 기존의 setFormat API가 대체되었습니다.


Parameter

nametyperequireddescription


ioFormatStringY새로 설정할 ioFormat


displayFormatStringN새로 설정할 displayFormat



Sample
//input에 사용자가 입력하는 date의 순서가 일 월 년도 순일 경우
inputCalendar1.setIoFormat("ddMMyyyy", "dd-MM yyyy");
//2002년 04월 15일을 입력 할 경우 사용자는 input에 15042002로 입력해야 한다.
//display 예시 ) 15-04 2002


setMaxYear(
									  maxYear
										)
							

calendar의 maxYear를 동적으로 설정한다.


Parameter

nametyperequireddescription


maxYearStringYmaxYear값



Sample
inputCalendar1.setMaxYear(2050);


setMinYear(
									  minYear
										)
							

calendar의 minYear를 동적으로 설정한다.


Parameter

nametyperequireddescription


minYearNumberYminYear값



Sample
inputCalendar1.setMinYear(2000);


setNextTabID(
									  componentID
									       , 
									       componentScope
										)
							

nextTabID 속성을 설정.두번째 인자로 nextTabID에 해당하는 컴포넌트가 위치한 frame의 ID를 넘겨주면 scope를 설정할 수 있음.
(관련 속성)
nextTabID


Parameter

nametyperequireddescription


componentIDStringYnextTabID로 설정할 컴포넌트의 ID


componentScopeStringNnextTabID로 설정할 컴포넌트의 scope



Sample
// 사용 예
inputCalendar1.setNextTabID("input2", "wframe1");


setOpacity(
									  value
										)
							

웹스퀘어 컴포넌트의 불투명도를 설정. (웹스퀘어 컴포넌트 공통.)엔진 내부적으로 CSS 속성인 opacity(불투명도)를 설정.


Parameter

nametyperequireddescription


valueNumberYOpacity 값 (0과 1 사이의 실수)



Sample
// (예제) 불투명도를 0.45로 설정
componentId.setOpacity(0.45);


setPlaceholder(
									  placeholderStr
										)
							

placeholder 속성값을 변경한다.


Parameter

nametyperequireddescription


placeholderStrStringY변경할 placeholder의 값



Sample

inputCalendar1.setPlaceholder("이름을 입력하세요");


setPosition(
									  left
									       , 
									       top
									       , 
									       mode
										)
							

웹스퀘어 컴포넌트의 위치(left, top)를 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


leftNumberY설정할 left 위치 값 또는 null.


topNumberY설정할 top 위치 값 또는 null.


modeStringN위치 설정 방법. [default: absolute, delta] 
absolute: 입력된 값을 위치로 설정.
delta: 현재 위치에 입력된 left 및 top 값을 추가.



Sample
// (예제) 컴포넌트의 top만 100px로 설정.
componentId.setPosition(null, 100);


setReadOnly(
									  readOnly
										)
							

readOnly 속성값을 설정한다. readOnly 속성을 활성화 시키려면 true 비활성화 시키려면 false를 입력합니다.


Parameter

nametyperequireddescription


readOnlyBooleanYreadOnly 속성을 활성화 시키려면 true 비활성화 시키려면 false



Sample
//컴포넌트의 readonly 적용.
componentId.setReadOnly(true);


setRef(
									  ref
										)
							

ref 속성을 설정. DataCollection과 연동시 "data:"라는 prefix를 꼭 붙여야 함.명시하지 않을 경우, InstanceData의 XPath로 인식됨.


Parameter

nametyperequireddescription


refStringY설정할 ref의 경로



Sample
//dataMap1의 birthday key와 input1 컴포넌트의 value를 binding 하는 경우
input1.setRef("data:dataMap1.birthday");

//InstanceData의 res/userData/birthday와 연동 할 경우.
input1.setRef("res/userData/birthday");


setSkin(
									  skin
										)
							

calendar의 skin을 설정한다.


Parameter

nametyperequireddescription


skinStringY[class1, class2, class3, class4, class5]사용할 skin명



Sample

inputCalendar1.setSkin("class2");


setStyle(
									  propertyName
									       , 
									       value
										)
							

웹스퀘어 컴포넌트의 CSS 속성을 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


propertyNameStringY설정할 CSS 속성


valueStringY해당 CSS 속성에 적용할 값



Sample
// (예제 1) 컴포넌트의 width를 200px로 설정
componentId.setStyle("width", "200px");

// (예제 2) 배경색을 olive로 변경
componentId.setStyle("background-color","olive");


setUserData(
									  key
									       , 
									       value
										)
							

웹스퀘어 컴포넌트에 임의의 데이터를 설정. (웹스퀘어 컴포넌트 공통.) 컴포넌트에 설정 가능한 key를 입력해야 함. 설정 가능한 key가 아닌 경우, 해당 내용이 로그에 출력됨.


Parameter

nametyperequireddescription


keyStringY설정할 데이터의 key


valueStringY설정한 데이터의 value



Sample
// 컴포넌트에 'data'라는 key로 'WebSquare'라는 value를 설정하는 예제.

componentId.setUserData("data", "WebSquare");

// 컴포넌트에 설정이 불가능한 key를 임력할 경우, key 설정이 불가능. 
 
componentId.setUserData("title", "WebSquare");
// 아래와 같이 로그가 출력됨. 
// !!!WARNING - [title] can't be defined as UserData.


setValue(
									  value
										)
							

컴포넌트의 value를 설정한다. calendar 역시 value로 선택되어진다.


Parameter

nametyperequireddescription


valueStringYvalue값



Sample
//별도의 속성을 설정하지 않은 경우(displayFormat, delimiter속성 등)
inputCalendar1.setValue("20020415");
//calendar는 2002년 4월 15일로 이동하며, input에는 2002-04-15로 표현된다.


setValueCancel(
									  
										)
							

inputCalendar에 값이 입력 중인 상태일 때, 입력 중인 값을 무시하고 이전 값으로 되돌리는 함수.dateValidSetCustom="true"인 경우 유효.invalidMessageFunc에서 alert 대신 Popup을 띄우고 해당 팝업의 onpageunload에서 이 함수를 호출할 경우, Popup이 닫히면 이전 값으로 복구됨.





show(
									  displayType
										)
							

웹스퀘어 컴포넌트를 화면에 표시. (웹스퀘어 컴포넌트 공통.)CSS display 속성을 주어진 값으로 설정하고 "visibility: show;"를 적용.


Parameter

nametyperequireddescription


displayTypeStringN적용할 CSS display 속성의 값.   
block : display: block;을 적용. (기본 값)
inline : display: inline;을 적용.
none : display: none;을 적용.
"" : show 수행 이전의 display 속성 값으로 복구.



Sample
// (예제) display: block; CSS를 설정.
componentId.show();  

// (예제) 위제 설정한 display 속성 값을 취소하고 원래의 display 값을 복구.
componentId.show("");


toggleClass(
									  className
										)
							

웹스퀘어 컴포넌트에서 특정 class를 제거하거나 추가. (웹스퀘어 컴포넌트 공통.)웹스퀘어 컴포넌트가 파라미터로 주어진 class를 포함한 경우, 해당 class를 제거. 웹스퀘어 컴포넌트에 파라미터로 주어진 class가 없는 경우, 해당 class를 추가. 기본적으로 addClass를 통해 추가된 class만 삭제 가능. 웹스퀘어 컴포넌트의 속성으로 직접 정의된 class를 삭제하기 위해서는 config.xml 파일에 아래 설정을 추가. 
 // config.xml 파일에 아래 설정 추가
 <removeDefaultClass value="true" />


Parameter

nametyperequireddescription


classNameStringY추가/삭제할 class



Sample
// inputBox 컴포넌트에 class가 속성으로 직접 정의됨.


//config.xml 파일에 아래를 추가.

    <removeDefaultClass value="true" />


// tmpInputClass class를 삭제.
input1.toggleClass("tmpInputClass");

// (위에서 삭제된) tmpInputClass class를 다시 추가.
input1.toggleClass("tmpInputClass");


trigger(
									  type
									       , 
									       array
										)
							

컴포넌트에서 특정 이벤트를 발생시킴. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


typeStringY발생시킬 이벤트


arrayArrayN이벤트 핸들러에 전달할 파라미터 배열



Sample
// (예제 1)
// input1 컴포넌트에 onclick 이벤트를 발생시킴.
input1.trigger("onclick");

// (예제 2)
// input1에 onviewchange 이벤트를 발생시키고 핸들러 함수에 (1,2) 인자를 전달하여 호출.
input1.trigger("onviewchange", [1,2]);


unbind(
									  type
									       , 
									       function
										)
							

컴포넌트에서 이벤트를 제거. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


typeStringN제거할 이벤트. (생략할 경우 해당 컴포넌트의 모든 이벤트를 제거.)


functionFunctionN제거할 이벤트의 핸들러 함수. (생략할 경우 해당 위에 지정한 이벤트에 등록된 모든 핸들러 함수를 제거.)



Sample
// (예제 1)
// input1에 등록된 모든 이벤트를 제거.
input1.unbind();

// (예제 2)
// input1의 onviewchange 이벤트에 대한 모든 핸들러 함수를 제거.
input1.unbind("onviewchange");

// (예제 3)
// input1의 onviewchange 이벤트에 대한 func1 이벤트 핸들러 함수를 제거.
input1.unbind("onviewchange", func1);


unbindRef(
									  
										)
							

ref 바인딩을 해제.





validate(
									  
										)
							

컴포넌트의 유효성 관련 속성값을 통해 유효성 검사를 실행.
(관련 속성)
 displaymessage="true"
(유효성 검증 속성)
 mandatory
 dateValidCheck



Return

typedescription


Boolean입력 값이 유효한 값일 경우 true, 그렇지 않으면 false를 반환한다.


Sample
// mandatory = "true"

var returnValue = inputCalendar1.validate();
 (반환 값) - false (input의 값이 없을 경우) 
 (반환 값) - true (input의 값이 있을 경우) 

// displaymessage="true" 속성을 지정할 경우, 유효성 검사에서 false가 반환될 경우 엔진에서 내부에서 설정된 메세지가 표시됨.
// (메세지 예시) 필수 입력 항목입니다.


validateObject(
									  
										)
							

컴포넌트의 유효성 관련 속성값을 통해 유효성 검사를 실행.
(관련 속성)
 displaymessage="true"
(유효성 관련 속성)
 mandatory



Return

typedescription


Objectobject 유효성 검사 결과 객체
    object.callerId 유효성 검사 대상 컴포넌트 ID
    object.type 유효성 검사 항목
   object.value 유효성 검사 결과 값


Sample
//아래와 같이 inputCalendar 컴포넌트에 mandatory 속성을 정의했을 경우


var returnObj = inputCalendar1.validateObject();
// (반환 값 - inputCalendar의 값이 없을 경우 )returnObj 객체 반환

returnObj.callerId = "inputCalendar1" returnObj.type = "mandatory" returnObj.value = ""  
// (반환 값 - inputCalendar의 값이 있을 경우)비어있는 객체가 반환 

// displaymessage="true" 설정을 사용할 경우, 검사에 실패하면 Engine에 설정된 메시지가 alert으로 표시됨. 
// (메세지 예시) 필수 입력 항목입니다


visible(
									  flag
										)
							

[deprecated] show/hide 혹은 setStyle 사용을 권장.엔진 내부적으로 CSS visibility 속성을 설정.


Parameter

nametyperequireddescription


flagBooleanY설정할 CSS visibility 속성 값 
true : visibility: visible;
false : visibility: hidden;










Copyrights Inswave Systems Co., Ltd.



