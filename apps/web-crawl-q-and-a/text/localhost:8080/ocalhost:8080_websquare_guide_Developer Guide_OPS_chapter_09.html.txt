
오픈소스 및 외부 라이브러리 연계9.오픈소스 및 외부 라이브러리 연계9.1JQuery 연계jQuery는 dom 탐색 및 제어, ajax, 이벤트처리, 애니메이션 처리등을 쉽게 구현할 수 있게 개발된 오픈소스 자바스크립트 라이브러리이며 WebSquare 페이지에서는 주로 애니메이션 처리등을 하기위해 JQuery를 연계하여 사용합니다.웹스퀘어 기동 프로세스<script> tag중 src에 지정된 외부 js 파일을 loading합니다.각 컴포넌트의 toHTML()을 통해 화면을 그립니다. - DOM트리 완성<script> tag중 src 값이 없는 것의 CDATA 영역을 가져다 eval 시킵니다.jQuery와 웹스퀘어 구동 순서에 따른 주의사항svg-editor.js를 위 "웹스퀘어 기동 프로세스" 의 A 방법으로 loading 하는 경우 아래와 같은 문제가 있습니다.A. anonymous function 선언과 동시에 실행을 합니다.B. function 내부에서 document.getElementById 등을 통해 Element를 참조합니다.C. 위 '웹스퀘어 기동 프로세스' 의 B 이전 단계 이기 때문에 엘리먼트(컴포넌트) 가 존재하지 않습니다.document ready functionjQuery나 ExtJS(SenCha) 모두 사용자 체감 속도 향상을 위해 선언된 function이 onload 이전에 DOM tree가 load 되면 바로 호출 될 수 있도록 function을 제공합니다.-	load가 완료되지 않았을 경우 setTimeout 등을 통해 대기함.해당 function은 read(jQuery) 와 onReady(ExtJS) 입니다.웹스퀘어에서 src 가 없는 <script> tag를 이용하여 작성하는 경우 이미 C에 해당하는 순서이므로 이미 DOM tree load가 완료된 상황이기 때문에 순서를 보장하기 위한 용도로 해당 function들을 사용할 필요는 없습니다.<script> tag에 src가 없는 경우괄호 안에 함수를 선언하여 표현식으로 만들고 anonymous 함수를 리턴 받아 실행<script src="/jquery/js/jquery-1.6.2.min.js" type="javascript" />
<script src="/jquery/js/jquery-ui-1.8.16.custom.min.js" type="javascript" />
<script type="javascript"><![CDATA[
 (function(){
    ....
 })();
]]></script>또는<script src="/jquery/js/jquery-1.6.2.min.js" type="javascript" />
<script src="/jquery/js/jquery-ui-1.8.16.custom.min.js" type="javascript" />
<script type="javascript"><![CDATA[
 $(function(){
    ....
 });
]]></script>와 같이 ready 함수를 불러 jquery 를 통해 call 하도록 만들 수도 있습니다. 단, 복잡한 로직일 경우, 케이스를 따져보아야 합니다.웹스퀘어의 util.js 함수를 이용한 처리<script type="javascript"><![CDATA[
       WebSquare.util.js("/lnb_test/jquery.js",  function(){
       //중략...

      jQuery().ready(function(){ 
      // applying the settings
          jQuery('#li_lmb_menu').Accordion({
            active: 'h3.selected',
            header: 'h3.head',
            alwaysOpen: false,
            animated: true,
            showSpeed: 200,
            hideSpeed:200
          });  
          jQuery('#li_xtraMenu').Accordion({
            active: 'h4.selected',
            header: 'h4.head',
            alwaysOpen: false,
            animated: true,
            showSpeed: 200,
            hideSpeed: 200
          });
      });
     });
]]></script>util.js 대신 <script> tag 이용util.js callback 함수를 anonymous 함수로 빼서 실행그 안에 jQuery 에 ready 로 넘겼던 것을 위와 동일 하게 처리함(ready 로 처리하는 경우 IE에서 비정상 동작)<script src="/lnb_test/jquery.js" type="javascript" />
 <script type="javascript"><![CDATA[ 
 (function() {
        중략...
 (function(){ 
            // applying the settings
                jQuery('#li_lmb_menu').Accordion({
                    active: 'h3.selected',
                    header: 'h3.head',
                    alwaysOpen: false,
                    animated: true,
                    showSpeed: 200,
                    hideSpeed:200
                });
                jQuery('#li_xtraMenu').Accordion({
                    active: 'h4.selected',
                    header: 'h4.head',
                    alwaysOpen: false,
                    animated: true,
                    showSpeed: 200,
                    hideSpeed: 200
                });
        })();
    )();연계시 주의 사항script를 include하는 시점은 상관없지만 document.ready의 이벤트는 반드시 WebSquare Page가 그려진 후에 호출될 수 있도록 합니다.별도로 구성된 js를 include하는 경우 해당 js에서 document.ready 이벤트를 호출하지 않습니다.document.ready 이벤트는 해당 Page XML의 Global Script 영역에서 호출합니다.WebSquare에서 생성한 Component의 단순 css의 변경은 addClass 또는 removeClass와 같이 제공된 컴포넌트에서 제공되는 api를 이용하여 처리하는 것을 권장합니다.애니메이션 효과를 위하여 Object의 id로 검색하여 css를 직접 컨트롤하는 경우는 단순 Component로 제한합니다.여러 Object로 구성된 Component, 예를들어 TreeView, Grid, WindowContainer등과 같은 컴포넌트는 JQuery를 이용하여 컨트롤하지 않습니다.웹스퀘어 엔진에서 이벤트에 따라 해당 Component의 css를 동적으로 control하므로 엔진이 아닌 다른 곳에서 css를 control하는 경우 문제가 발생할 수 있습니다.오픈 소스 라이브러리는 모두 상대 경로를 사용하는데 반해 웹스퀘어는 절대 경로를 사용함으로 주의를 요합니다.<script type="javascript" src="$$IMAGE_URL$$/common/ko/js/jquery-1.7.min.js"></script>
    <script type="javascript"><![CDATA[
    function doInit() {
    var num1;
    var num2;
    var num3;
 
    $("#left_menu").find("dd").find("a").css('line-height','13px');
 
    $("#left_menu").find("dt").find("a").bind("click", function() { 
        selectMenu( $("#left_menu").find("dt").index($(this).parent().parent())) 
    } );
    $("#left_menu").find("dt").find("a").bind("mouseover", function() { 
        overCheck( $("#left_menu").find("dt").index($(this).parent().parent())) 
    } );
    }
    doInit();
    ]]></script>또는 아래의 방식도 가능하다.<script type="javascript" src="$$IMAGE_URL$$/common/ko/js/jquery-1.7.min.js"></script>
    <script type="javascript"><![CDATA[
    $(document).ready( function() {        
        var num1;
    var num2;
    var num3;
    $("#left_menu").find("dd").find("a").css('line-height','13px');
 
    $("#left_menu").find("dt").find("a").bind("click", function() { 
        selectMenu( $("#left_menu").find("dt").index($(this).parent().parent())) 
    } );
    $("#left_menu").find("dt").find("a").bind("mouseover", function() { 
        overCheck( $("#left_menu").find("dt").index($(this).parent().parent())) 
    } );
    })
 
    function doInit() {
    //업무스크립트
    }
    doInit();
    ]]></script>9.2ExtJS 연계javascript 기반의 ExtJs를 연계하는 방법을 소개합니다.ExtJs에서 제공하는 파일을 Context-Root 하위에 복사합니다.웹스퀘어 XML Page에서 ExtJS에서 제공하는 chart stylesheet와 js 파일을 include합니다.<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/ext-3.1.0/resources/css/ext-all.css" type="text/css"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ev="http://www.w3.org/2001/xml-events"
    xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
    <head>
    ...... 중간생략 ......
  <script type="javascript" src="/ext-3.1.0/adapter/ext/ext-base.js"></script>
  <script type="javascript" src="/ext-3.1.0/ext-all.js"></script>Chart가 표시될 영역에 group 컴포넌트를 생성합니다.<xf:group id="chartdiv" 
style="position:relative;width:585px;height:250px;overflow:auto;padding-top:5px;overflow-x:hidden;"/>json String으로 결과를 받는 submission을 생성하여 서버로부터 Data를 조회한 후 Chart를 그리는 function을 호출합니다.<xf:submission id="getData" action="getChartData.do" method="post"
    mediatype="application/json" encoding="UTF-8" instance=""
    replace="none" errorHandler="" customHandler=""
    mode="asynchronous" processMsg="조회중입니다">
    <script type="javascript" ev:event="xforms-submit-done"><![CDATA[
        drawChart(e.responseText);
    ]]></script>연계시 주의 사항script를 include하는 시점은 상관없지만 document.ready의 이벤트는 반드시 WebSquare Page가 그려진 후에 호출될 수 있도록 합니다.별도로 구성된 js를 include하는 경우 해당 js에서 document.ready 이벤트를 호출하지 않습니다.document.ready 이벤트는 해당 Page XML의 Global Script 영역에서 호출합니다.WebSquare에서 생성한 Component의 단순 css의 변경은 addClass 또는 removeClass와 같이 제공된 컴포넌트에서 제공되는 api를 이용하여 처리하는 것을 권장합니다.애니메이션 효과를 위하여 Object의 id로 검색하여 css를 직접 컨트롤하는 경우는 단순 Component로 제한합니다.여러 Object로 구성된 Component, 예를들어 TreeView, Grid, WindowContainer등과 같은 컴포넌트는 JQuery를 이용하여 컨트롤하지 않습니다.웹스퀘어 엔진에서 이벤트에 따라 해당 Component의 css를 동적으로 control하므로 엔진이 아닌 다른 곳에서 css를 control하는 경우 문제가 발생할 수 있습니다.<script type="javascript" src="$$IMAGE_URL$$/common/ko/js/jquery-1.7.min.js"></script>
    <script type="javascript"><![CDATA[
    function doInit() {
    var num1;
    var num2;
    var num3;
 
    $("#left_menu").find("dd").find("a").css('line-height','13px');
 
    $("#left_menu").find("dt").find("a").bind("click", function() { 
        selectMenu( $("#left_menu").find("dt").index($(this).parent().parent())) 
    } );
    $("#left_menu").find("dt").find("a").bind("mouseover", function() { 
        overCheck( $("#left_menu").find("dt").index($(this).parent().parent())) 
    } );
    }
    doInit();
    ]]></script>또는 아래의 방식도 가능합니다.<script type="javascript" src="$$IMAGE_URL$$/common/ko/js/jquery-1.7.min.js"></script>
    <script type="javascript"><![CDATA[
    $(document).ready( function() {        
        var num1;
    var num2;
    var num3;
    $("#left_menu").find("dd").find("a").css('line-height','13px');
 
    $("#left_menu").find("dt").find("a").bind("click", function() { 
        selectMenu( $("#left_menu").find("dt").index($(this).parent().parent())) 
    } );
    $("#left_menu").find("dt").find("a").bind("mouseover", function() { 
        overCheck( $("#left_menu").find("dt").index($(this).parent().parent())) 
    } );
    })
 
    function doInit() {
    //업무스크립트
    }
    doInit();
    ]]></script>9.3ExtJS 연계javascript 기반의 ExtJs를 연계하는 방법을 소개합니다.ExtJs에서 제공하는 파일을 Context-Root 하위에 복사합니다.웹스퀘어 XML Page에서 ExtJS에서 제공하는 chart stylesheet와 js 파일을 include합니다.<?xmlversion"1.0"encoding"UTF-8"?><?xml-stylesheethref"/ext-3.1.0/resources/css/ext-all.css"type"text/css"?><htmlxmlns"http://www.w3.org/1999/xhtml"xmlns:ev"http://www.w3.org/2001/xml-events"xmlns:w2"http://www.inswave.com/websquare"xmlns:xf"http://www.w3.org/2002/xforms">
    <head>
    ...... 중간생략 ......
  <scripttype"javascript"src"/ext-3.1.0/adapter/ext/ext-base.js"</script>
  <scripttype"javascript"src"/ext-3.1.0/ext-all.js"</script>Chart가 표시될 영역에 group 컴포넌트를 생성합니다.<xf:group id="chartdiv" 
style="position:relative;width:585px;height:250px;overflow:auto;padding-top:5px;overflow-x:hidden;"/>json String으로 결과를 받는 submission을 생성하여 서버로부터 Data를 조회한 후 Chart를 그리는 function을 호출합니다.<xf:submission id="getData" action="getChartData.do" method="post"
    mediatype="application/json" encoding="UTF-8" instance=""
    replace="none" errorHandler="" customHandler=""
    mode="asynchronous" processMsg="조회중입니다">
    <script type="javascript" ev:event="xforms-submit-done"><![CDATA[
        drawChart(e.responseText);
    ]]></script>
</xf:submission>submission으로 전송받은 json String의 내용은 다음과 같습니다.{"infoList":[{"name":"Jul07","visits":"245000","views":"300000"},
{"name":"Aug07","visits":"240000","views":"350000"},
{"name":"Sep07","visits":"355000","views":"400000"},
{"name":"Oct07","visits":"375000","views":"420000"},
{"name":"Nov07","visits":"490000","views":"450000"},
{"name":"Dec07","visits":"495000","views":"580000"},
{"name":"Jan08","visits":"520000","views":"600000"},
{"name":"Feb08","visits":"620000","views":"620000"}]}서버에서 Data 조회 후 결과로 받은 json String을 WebSquare에 포함된 JSON 객체를 이용하여 json Object로 변환하여 차트 data에 셋팅하고 FusionChart에서 제공하는 api를 이용하여 group 영역에 Display합니다.function drawChart(chartDataString) {
    var jsonObj = JSON.parse(chartDataString);
    var store = new Ext.data.JsonStore({
        fields:['name', 'visits', 'views'],
        data: jsonObj.infoList
        ]
    });
 
    // extra extra simple
    new Ext.Panel({
        title: 'ExtJS.com Visits Trend, 2007/2008 (No styling)',
        renderTo: 'chartdiv',
        width:500,
        height:300,
        layout:'fit',
 
        items: {
            xtype: 'linechart',
            store: store,
            xField: 'name',
            //yField: 'visits',
   listeners: {
    itemclick: function(o){
     var rec = store.getAt(o.index);
     Ext.example.msg('Item Selected', 'You chose {0}.', rec.get('name'));
    }
   },extraStyle:{
    padding : 10,
    animationEnabled: true,
    legend:{display : 'bottom'}
   },
   series : [{
    type: 'line',
    displayName: 'Views',
    yField: 'views',
    style: { 
     size: 7, 
     borderColor: 0x187bff, 
     fillColor:0x187bff, 
     color: 0x187bff,
     connectPoints:true
    }
   },
   {
    type: 'line',
    displayName: 'Visits',
    yField: 'visits',
    style: { 
     size: 7, 
     borderColor: 0xff0000, 
     fillColor:0xff0000, 
     connectPoints:true,
     color: 0xff0000
    }
   }
   ]
   }
 });
}실행결과그림 9-1.Extjs_chart19.4HighChart 연계Highchart는 내부적으로 JQuery를 사용하며 javascript와 SVG, VML을 지원하는 모든 브라우저에서 사용가능하다.Highchart에서 제공하는 파일을 Context-Root 하위에 카피합니다.웹스퀘어 XML Page에서 JQuery의 js와 HighChart에서 제공하는 js 파일을 include합니다.<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.min.js" type="text/javascript"></script>
<script src="/Highcharts/js/highcharts.js" type="text/javascript"></script>Chart가 표시될 영역에 group 컴포넌트를 생성합니다.<xf:group id="chartdiv" 
style="position:relative;width:585px;height:250px;overflow:auto;padding-top:5px;overflow-x:hidden;"/>json String으로 결과를 받는 submission을 생성하여 서버로부터 Data를 조회한 후 Chart를 그리는 function을 호출합니다.<xf:submission id="getData" action="getChartData.do" method="post"
    mediatype="application/json" encoding="UTF-8" instance=""
    replace="none" errorHandler="" customHandler=""
    mode="asynchronous" processMsg="조회중입니다">
    <script type="javascript" ev:event="xforms-submit-done"><![CDATA[
        drawChart(e.responseText);
    ]]></script>
</xf:submission>submission으로 전송받은 json String의 내용은 다음과 같습니다.{"infoList":[{"y":86650,"color":"#4572A7"},
{"y":95140,"color":"#AA4643"},
{"y":71390,"color":"#89A54E"},
{"y":86810,"color":"#80699B"},
{"y":94290,"color":"#3D96AE"},
{"y":79090,"color":"#DB843D"}]}서버에서 Data 조회 후 결과로 받은 XML을 이용하여 chart를 표시할 XML을 생성하여 FusionChart에서 제공하는 api를 이용하여 group 영역에 Display합니다.function drawChart(chartDataString) {
    var jsonObj = JSON.parse(chartDataString);
    chart = new Highcharts.Chart({
 
    chart: {
        renderTo: 'group1',
        defaultSeriesType: 'column'
    },
    credits: {
        enabled: false
    },
    title: {
        text: null
    },
    xAxis: {
        categories: [
            '08월', 
            '07월', 
            '06월', 
            '05월', 
            '04월', 
            '03월'
        
    },
    yAxis: {
        min: null,
        title: {
            text: null
        },
        labels: {
            align: 'left',
            enabled: false,            // hide yAxis
            x: 3,
            y: 16,
            formatter: function() {
                return Highcharts.numberFormat(this.value, 0);
            
        },
        gridLineColor: null,
        stackLabels: {
            style: {
                color: 'black'
            },
            enabled: true
        
    },
    legend: {
        layout: 'vertical',
        backgroundColor: '#FFFFFF',
        align: 'left',
        verticalAlign: 'top',
        x: 100,
        y: 35,
        floating: true,
        shadow: true,
        enabled: false
    },
    tooltip: {
        formatter: function() {
            return ''+
                this.x +': '+ this.y +' 원';
        
    },
    plotOptions: {
        column: {
            pointPadding: 0.2,
            borderWidth: 0,
            dataLabels: {
                enabled: true,
                color: colors[0],
                style: {
                    fontWeight: 'bold'
                },
                formatter: function() {
                    return Highcharts.numberFormat(this.y, 0);
                
            
        
    },
    exporting: {
        enabled: false
    },
    series: [{
        name: null,//'hello world',
        data: jsonObj.infoList
    }]
    });
 }실행결과그림 9-2.Highchart_chart19.5Daum 우편번호 서비스다음 우편번호 서비스 연계 샘플: http://postcode.map.daum.net/guide9.5.1스크립트를 동적으로 로딩그림 9-3.Daum 우편번호 서비스$r_title (예제)
<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ev="http://www.w3.org/2001/xml-events"
    xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
    <head>
        <w2:type>DEFAULT</w2:type>
        <w2:buildDate/>
        <xf:model>
            <xf:instance>
                <data xmlns=""/>
            </xf:instance>
            <w2:dataCollection baseNode="map">
            </w2:dataCollection>
            <w2:workflowCollection>
            </w2:workflowCollection>
        </xf:model>
        <script src="http://dmaps.daum.net/map_js_init/postcode.v2.js?autoload=false"></script>
        <script type="text/javascript"><![CDATA[
    scwin.trigger1_onclick = function(e) {
        // load함수를 이용하여 core스크립트의 로딩이 완료된 후, 
        // 우편번호 서비스를 실행합니다.
        daum.postcode.load(function(){
            new daum.Postcode({
                oncomplete: function(data) {
                    // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성
                    // Daum에서 제공하는 샘플 예제 참고
                    input1.setValue(data.postcode);
                }
            }).open();
        });            
    };
    ]]></script>
    </head>
    <body>
        <xf:input id="input1"
            style="position: absolute ;left:22px;top:22px;width: 144px;height: 21px;">
        </xf:input>
        <xf:trigger type="button" id="trigger1"
            style="position: absolute ;left:180px;top:22px;width:97px;height:23px;" ev:onclick="scwin.trigger1_onclick">
            <xf:label><![CDATA[우편번호 검색]]></xf:label>
        </xf:trigger>
    </body>
</html>9.5.2WebSquare 화면에 삽입 (visibleHelper 사용)Daum 우편번호 서비스의 API는 내부적으로 document.write를 수행합니다. WebSquare5도 구동 시에 동일한 작업을 수행하기 때문에 상호 충돌이 발생할 수 있습니다.이 경우 아래 방법으로 WebSquare5와 Daum 우편번호 서비스를 분리하여 충돌을 피할 수 있습니다.websquare/config.xml 파일에 아래 설정을 추가하십시오.코드 9-1.config.xml 설정 예<WebSquare>
..중략..
<visibleHelper>
<targetHandler value="_visibleHelper"/>
</visibleHelper>
 
</WebSquare>websquare/websquare.html 파일에 visibleHelper 정의를 추가하십시오.코드 9-2.websquare.html 편집 예<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns='http://www.w3.org/1999/xhtml' xmlns:ev='http://www.w3.org/2001/xml-events' xmlns:w2='http://www.inswave.com/websquare' xmlns:xf='http://www.w3.org/2002/xforms'>
 <head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <meta http-equiv="X-UA-Compatible" content="IE=Edge" />
 <title> WebSquare </title>
 <script type="text/javascript" src="javascript.wq?q=/bootloader"></script>
 <script type="text/javascript">
 window.onload = init;
 
 function init() {
 try{
 WebSquare.startApplication();
 } catch(e) {
 alert(e.message);
 }
 }
 
  var _visibleHelper = function( htmlStr ) {
                         var obj = document.getElementById("visDiv");
                         obj.innerHTML = htmlStr;
            }
 </script>
 </head>
<body>
<div id="visDiv"></div>
    <script type="text/javascript" src="http://dmaps.daum.net/map_js_init/postcode.v2.js"></script>
</body>
</html>WebSquare 화면 파일에서 Daum 우편번호 서비스를 호출합니다.$r_title(WebSquare 화면 파일 (예))
 <?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ev="http://www.w3.org/2001/xml-events"
    xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
    <head>
    <w2:type>DEFAULT</w2:type>
    <w2:buildDate />
    <xf:model>
    <xf:instance>
    <data xmlns="" />
    </xf:instance>
    <w2:dataCollection baseNode="map"></w2:dataCollection>
    <w2:workflowCollection></w2:workflowCollection>
    </xf:model>
    <script type="text/javascript"><![CDATA[    
    new daum.Postcode({
        oncomplete: function(data) {
            // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분입니다.
            // 예제를 참고하여 다양한 활용법을 확인해 보세요.
        }
    }).open();
    
        ]]></script>
    </head>
    <body>
    <xf:input id="inp_input1" style="position: relative;width: 144px;height: 21px;"></xf:input>
    </body>
</html>그림 9-4.실행 화면
