


WebSquare.uiplugin.checkcombobox 









PropertyEventMethod찾아보기

WebSquare.uiplugin.checkcombobox - 5.0_5.4826M.20230213.171915





체크 콤보 박스. HTML의 <select> 태그의 확장 버전. 
 SelectBox와 CheckBox가 결합된 형태로 다중 선택을 지원.
 최상위에 <div> 태그를 두고 하위에 복합 태그를 사용함.

Type


uiplugin

Property Summary




allOption

전체 항목 표시 여부



animation

선택 항목 목록에 적용할 애니메이션 효과



appearance

선택 항목 표현 방식



checkboxClickSync

목록의 checkbox 클릭을 통해 선택된 항목과 싱크를 맞춤



checkDisabledOnAllCheck

전체 선택시 disabled 처리된 항목도 함께 선택하는 기능



chooseOption

선택 안내 메시지 표시 여부. [default: false,true] 



chooseOptionLabel

선택 안내 메시지로 표시할 텍스트의 label을 정의



chooseOptionLabelLocaleRef

클라이언트 다국어 적용시 화면에 출력하는 chooseOptionLabel의 key. 



class

HTML의 class 속성과 동일한 기능을 제공. CSS 파일이나 style 블럭에 정의한 여러 개의 class를 공백으로 구분하여 적용 가능.



closeonmouseleave

subLayer로 열린 경우, 선택 항목 목록에서 마우스 커서가 빠져나갈 때 목록을 닫을지 여부



customLabelFormatter

label 값을 커스텀할 수 있는 사용자 정의 함수를 설정



delimiter

선택 항목 목록에 value와 label을 함께 표시할 때 사용하는 구분자



direction

항목의 열림 방향



disabled

컴포넌트 비활성 상태



displayAllOptionLabel

"전체" 항목을 선택한 경우, 선택된 아이템 label 전체를 출력하지 않고 "전체 선택"으로 출력



displaymessage

validate API의 검증 결과가 실패일 경우, 결과 메세지 표시 여부. [default:false, true] 



displayMode

선택 항목의 표현 방법. [default: label, value delim label, label delim value, value]



enableColumn

선택 항목 목록에서 특정 항목을 disable 처리하는 기능. disable 처리된 목록은 보이기만 할 뿐 선택이 되지 않음.



enableColumnFalseValue

enableColumn 사용 시 목록에서 특정 항목을 감추기 위한 조건에 해당하는 값



escape

<>&"를 HTML Escape 문자로 변환하여 화면에 표시



id

컴포넌트 ID. 



invalidMessage

validate API의 검증 결과가 실패일 경우 표시할 메시지. displaymessage="true"일 경우만 유효.



invalidMessageFunc

validate API의 검증 결과가 실패일 경우, 결과 메시지를 동적으로 표시할 사용자 정의 함수 이름. 



labelWidthAuto

컴포넌트에 정의된 width을 무시하고 항목 중 가장 긴 텍스트에 맞게 출력. [default: false, true] 



mandatory

필수 선택 적용 여부. [default: false, true] 



navBtn

선택 목록 하단에 [선택해제] 및 [선택적용] 버튼을 표시. 



nextTabID

Tab 키로 이동할 경우, Tab 키를 누를 때 선택되는 컴포넌트의 ID



rangeSeparator

연속적으로 선택된 값을 "x-y" 형태로 간단하게 보여주는 기능 



readOnly

읽기 전용 적용 여부



ref

DataCollection의 value 경로. DataCollection의 value와 웹스퀘어 컴포넌트를 바인딩할 때 사용. 



renderType

브라우저에 표현될 레이아웃 구조



search

사용자 입력 값 검색 방법. [default:start, contain, none] 



searchTarget

사용자의 입력 값을 기반으로 선택 항목을 제안하기 위해 검색할 대상을 지정



separator

선택된 항목들이 여러 개인 경우, 구분자로 사용할 문자



showCheckedTop

체크된 항목을 리스트 상단에 정렬시키는 속성



sortMethod

선택 항목 목록 정렬 방법



sortOption

선택 항목 목록 정렬 기준. [label, value] 



submenuSize

선택 항목 목록 크기 결정 방법



tabIndex

Tab 키를 이용하여 포커스를 변경할 경우, 해당 컴포넌트에 포커스를 주는 순서. 



title

HTML의 title 속성과 동일



useDrag

목록이 펼쳐졌을 때 마우스 드래그 동작을 통해 여러 checkbox를 직사각형 형태로 선택 / 선택해제(shift+drag) 할 수 있는 기능 



useEdit

checkcombobox 값을 직접 타이핑하여 편집할 수 있는 기능
(옵션 설명)
 "true" : 마우스로 checkcombobox를 클릭하면 편집 모드 상태가 되어 값을 직접 타이핑하여 편집하는 기능을 사용할 수 있다



useItemLocale

아이템 목록 다국어 사용 여부



useKeywordHighlight

검색 결과 중 사용자 입력값에 별도의 class를 적용하여 다르게 표시할지 여부



useLocale

다국어 사용.



userData1

사용자 정의 데이터 속성



userData2

사용자 정의 데이터 속성



userData3

사용자 정의 데이터 속성



validateOnInput

[default:false] useEdit 사용 시 값이 입력될 때마다 유효성을 검증하는 기능 (oninput 이벤트를 지원하는 IE9이상 브라우저 지원)
 (옵션 설명)
 "false" (기본 값) : 적용하지 않음



validator

유효성 체크 함수 이름.



visibleColMax

목록을 펼쳤을 때 보여줄 열의 최대 개수. 보여줄 열의 개수를 항목의 개수에 따라 자동으로 설정할 때 사용한다.



visibleColNum

목록의 열의 개수



visibleColumn

선택 항목 목록에서 특정 항목을 감추는 기능. 



visibleColumnFalseValue

visibleColumn 사용 시 목록에서 특정 항목을 감추기 위한 조건에 해당하는 값



visibleRowNum

표현 될 항목 행수



wmode

wmode를 사용하여 선택 항목 목록을 object 태그보다 상위에 표시. [default: false, true]



Event Summary




onblur

포커스를 잃었을 때 발생



onchange

사용자가 항목을 선택/변경하거나 API를 이용하여 value를 설정할 경우 발생. 



oncheckboxclick

목록에서 항목을 선택(체크/체크 해제)할 때마다 발생



onclick

마우스로 CheckComboBox를 클릭할 때 발생



onclose

목록을 선택하고 다른 영역을 클릭하여 목록이 닫혔을 때 발생



ondblclick

마우스로 checkcombobox를 더블 클릭했을 때 발생



onfocus

포커스를 얻었을 때 발생



onviewchange

키보드 또는 마우스 조작을 통해 값이 변경된 경우 발생.


Method Summary




addClass(
									  className
										)
								

컴포넌트에 CSS class를 추가



addItem(
									  value
									       , 
									       label
									       , 
									       index
										)
								

선택 항목을 추가. index를 지정하지 않으면 하위로 추가됨.



bind(
									  eventType
									       , 
									       function
										)
								

컴포넌트에 이벤트와 핸들러 함수를 동적으로 할당



changeClass(
									  oldClassName
									       , 
									       newClassName
										)
								

웹스퀘어 컴포넌트의 class를 변경. (웹스퀘어 컴포넌트 공통.) 



checkAll(
									  checked
										)
								

모든 항목을 선택하거나 해제



deleteItem(
									  index
										)
								

주어진 index에 해당하는 항목을 삭제



focus(
									  
										)
								

웹스퀘어 컴포넌트에 포커스를 줌



getDisabled(
									  
										)
								

현재 웹스퀘어 컴포넌트에 설정된 disabled 속성 값을 반환



getGenerator(
									  
										)
								

컴포넌트가 Generator에 의해 생성된 경우, 자신을 생성한 부모 Generator 객체를 반환



getID(
									  
										)
								

웹스퀘어 컴포넌트의 ID를 반환



getInfo(
									  index
										)
								

index에 해당하는 항목의 정보가 담긴 JSON을 반환



getInfoArray(
									  
										)
								

모든 항목들의 각각의 정보가 담긴 JSON을 Array에 담아 반환



getInitStyle(
									  CSS
										)
								

컴포넌트의 초기 스타일을 반환



getItemCount(
									  
										)
								

선택 항목 개수를 반환



getItemDisabled(
									  index
										)
								

주어진 index에 해당하는 항목의 disabled 설정을 반환



getNextTabID(
									  
										)
								

nextTabID 속성의 설정 값을 반환



getOpacity(
									  
										)
								

웹스퀘어 컴포넌트의 불투명도를 반환. (웹스퀘어 컴포넌트 공통.)



getOriginalID(
									  
										)
								

웹스퀘어 컴포넌트의 originalID를 반환. (웹스퀘어 컴포넌트 공통.)



getPluginName(
									  
										)
								

웹스퀘어 컴포넌트의 이름(pluginName)을 반환



getPosition(
									  positionName
										)
								

웹스퀘어 컴포넌트의 위치(left, top)를 반환. (웹스퀘어 컴포넌트 공통.) 



getReadOnly(
									  
										)
								

현재 웹스퀘어 컴포넌트에 설정된 readOnly 속성 값을 반환



getScope(
									  
										)
								

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)  



getScopeWindow(
									  
										)
								

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)



getSelectedInfo(
									  
										)
								

선택 된 항목들의 정보가 담긴 JSON을 Array에 담아 반환



getSize(
									  sizeName
										)
								

웹스퀘어 컴포넌트의 크기(width, height)를 반환. (웹스퀘어 컴포넌트 공통.) 



getStyle(
									  propertyName
										)
								

웹스퀘어 컴포넌트의 CSS 속성 값을 반환



getStyleValue(
									  style
										)
								

[deprecated]



getText(
									  separator
										)
								

선택된 항목의 label을 반환. 선택된 항목이 여러 개인 경우, separator를 사용하여 반환.



getTextArray(
									  
										)
								

선택 된 항목들의 label을 Array에 담아 반환



getTitle(
									  
										)
								

컴포넌트의 title 속성 값을 반환



getUdcHome(
									  
										)
								

UDC 객체가 자신을 정의한 UDC 파일 경로를 파일명을 포함해서 반환. (웹스퀘어 컴포넌트 공통.)



getUdcRoot(
									  
										)
								

UDC 객체가 자신을 정의한  UDC 파일 경로를 반환. (웹스퀘어 컴포넌트 공통.)



getUserData(
									  key
										)
								

setUserData로 웹스퀘어 컴포넌트에 설정한 key의 value 혹은 사용자가 직접 페이지 소스(XML)에 속성으로 정의한 value를 반환



getValue(
									  separator
										)
								

선택된 항목의 value를 반환. 선택된 항목이 여러 개인 경우 separator를 사용하여 반환됨.



getValueArray(
									  
										)
								

선택 된 항목들의 value를 담은 Array를 반환



hasClass(
									  className
										)
								

웹스퀘어 컴포넌트가 특정 class를 포함하고 있는지 확인



hide(
									  
										)
								

컴포넌트를 화면에서 보이지 않도록 숨깁니다



initCheckCombobox(
									  
										)
								

CheckComboBox를 초기화



openTable(
									  
										)
								

선택 항목 목록을 여는 기능. 



removeAll(
									  isInitialize
										)
								

[default:false, true] 모든 항목을 삭제하는 기능으로 allOption이 정의 된 경우 isInitialize값을 true로 적용하면 해당 항목은 삭제되지 않는다



removeClass(
									  className
										)
								

웹스퀘어 컴포넌트에서 class를 삭제. (웹스퀘어 컴포넌트 공통.)



setDelimiter(
									  
										)
								

checkcombobox delimiter 동적 변경



setDisabled(
									  disabled
										)
								

웹스퀘어 컴포넌트의 disabled 속성을 설정



setDisplyaMode(
									  
										)
								

checkcombobox displayMode 동적 변경



setEnableColumn(
									  columnId
									       , 
									       enableColumnFalseValue
										)
								

enableColumn 속성을 동적으로 설정.



setEventPause(
									  evList
									       , 
									       flag
										)
								

지정한 이벤트를 중단함



setInitStyle(
									  property
										)
								

컴포넌트의 초기 스타일을 복구한다



setItemDisabled(
									  index
									       , 
									       flag
										)
								

주어진 index에 해당하는 항목의 disabled 속성을 설정



setItemSet(
									  nodeset
									       , 
									       label
									       , 
									       value
										)
								

선택 항목 목록을 설정. 



setNextTabID(
									  componentID
									       , 
									       componentScope
										)
								

nextTabID 속성을 설정.



setNodeSet(
									  nodeset
									       , 
									       label
									       , 
									       value
										)
								

선택 항목 목록을 설정. 



setOpacity(
									  value
										)
								

웹스퀘어 컴포넌트의 불투명도를 설정. (웹스퀘어 컴포넌트 공통.)



setPosition(
									  left
									       , 
									       top
									       , 
									       mode
										)
								

웹스퀘어 컴포넌트의 위치(left, top)를 설정



setReadOnly(
									  readOnly
										)
								

웹스퀘어 컴포넌트의 readOnly 속성을 설정



setRef(
									  path
										)
								

ref 속성을 설정. DataCollection과 연동시 "data:"라는 prefix를 꼭 붙여야 함.



setSelectedInfo(
									  infoArray
										)
								

항목의 선택여부가 담긴 정보(JSON)를 기반으로 항목을 선택/해지



setSize(
									  width
									       , 
									       height
										)
								

웹스퀘어 컴포넌트의 크기(width, height)를 설정



setStyle(
									  propertyName
									       , 
									       value
										)
								

웹스퀘어 컴포넌트의 CSS 속성을 설정



setText(
									  label
										)
								

파라메터로 넘어온 label이 항목에 있는 경우 해당 항목이 선택되며 separator속성에 정의 한 구분자로 label간의 구분자를 넣어야 함.



setUserData(
									  key
									       , 
									       value
										)
								

웹스퀘어 컴포넌트에 임의의 데이터를 설정. (웹스퀘어 컴포넌트 공통.) 



setValue(
									  value
										)
								

파라메터로 넘어온 값에 해당하는 선택 항목을 선택.  



setVisibleColumn(
									  columnId
									       , 
									       visibleColumnFalseValue
										)
								

visibleColumn 속성을 동적으로 설정.



show(
									  displayType
										)
								

웹스퀘어 컴포넌트를 화면에 표시. (웹스퀘어 컴포넌트 공통.)



toggleClass(
									  className
										)
								

웹스퀘어 컴포넌트에서 특정 class를 제거하거나 추가. (웹스퀘어 컴포넌트 공통.)



trigger(
									  type
									       , 
									       array
										)
								

컴포넌트에서 특정 이벤트를 발생시킴



unbind(
									  type
									       , 
									       function
										)
								

컴포넌트에서 이벤트를 제거



unbindRef(
									  
										)
								

ref 바인딩을 해제



validateObject(
									  
										)
								

컴포넌트의 유효성 관련 속성값을 통해 유효성 검사를 실행



visible(
									  flag
										)
								

[deprecated] 



Property Detail




allOption

전체 항목 표시 여부. label은 "-전체-" 로 value는 "all" 로 설정. [default: false, true]
(옵션 설명)
"false" (기본 값) : 전체 항목을 표시.  
"true" : 전체 항목을 표시하지 않음.


animation

선택 항목 목록에 적용할 애니메이션 효과. [default: "", show, fadeIn, slideDown] 
 (옵션 설명)
 "" (기본 값) : 전체 내역이 한번에 표시.
 "show" : 한 점에서 퍼지면서 내역을 표시.
 "fadeIn" : 전체 내역을 점점 선명하게 표시. 
 "slideDown" : 하위로 내려오면서 순차적으로 내역을 표시.


appearance

선택 항목 표현 방식.
(옵션 설명)
 "minimal" : 선택 항목을 한 개씩 표시. 사용자는 방향키를 이용하여 선택 항목 변경 가능.  
 "full" (기본 값) : 전체 선택 항목을 표시


checkboxClickSync

목록의 checkbox 클릭을 통해 선택된 항목과 싱크를 맞춤. [default: false, true] 
(옵션 설명)
 "true" : 싱크를 맞춤. 
 "false"  (기본 값) : 싱크를 맞추지 않음.


checkDisabledOnAllCheck

전체 선택시 disabled 처리된 항목도 함께 선택하는 기능. [default: true, false]
(옵션 설명)
 "true" (기본 값) : 전체 선택 시 disabled 처리된 항목도 함께 선택.
 "false" : 전체 선택 시 disabled 처리된 항목은 선택하지 않음.


chooseOption

선택 안내 메시지 표시 여부. [default: false,true] chooseOptionLabel 속성이 설정된 경우 해당 값을 표시. 단, chooseOptionLabel 속성이 설정되지 않고 chooseOption="true"인 경우, 선택 항목 목록에 "-선택-"(label)이 표시됨.  이 때 value는 ""(empty string)으로 설정됨.
 (옵션 설명)
 "true" : 선택 안내 메시지를 표시.  chooseOptionLabel 속성에 설정 된 값을 표시. 
 "false" (기본 값) : 선택 안내 메시지를 표시하지 않음. 

 (관련 속성)
 chooseOptionLabel


chooseOptionLabel

선택 안내 메시지로 표시할 텍스트의 label을 정의. chooseOption="true"인 경우 유효. 
 (관련 속성)
 chooseOption="true"


chooseOptionLabelLocaleRef

클라이언트 다국어 적용시 화면에 출력하는 chooseOptionLabel의 key. key에 해당하는 텍스트가 없을 경우 "global_undefined"가 화면에 표시됨.


class

HTML의 class 속성과 동일한 기능을 제공. CSS 파일이나 style 블럭에 정의한 여러 개의 class를 공백으로 구분하여 적용 가능.Engine 내부에서 각 컴포넌트 별로 지정된 class를 적용하나, class 속성을 이용하여 컴포넌트의 CSS를 제어 가능.


closeonmouseleave

subLayer로 열린 경우, 선택 항목 목록에서 마우스 커서가 빠져나갈 때 목록을 닫을지 여부. [default:false, true] 
(옵션 설명)
 "false" (기본 값) : 목록을 닫지 않음. 
 "true" : 목록을 닫음.


customLabelFormatter

label 값을 커스텀할 수 있는 사용자 정의 함수를 설정. [default:""]


delimiter

선택 항목 목록에 value와 label을 함께 표시할 때 사용하는 구분자. displayMode 속성에서 참조.
 (관련 속성)
 displayMode


direction

항목의 열림 방향. [default: auto, down, up]


disabled

컴포넌트 비활성 상태. [default: false, true]  
(옵션 설명)
 "false" (기본 값) : 컴포넌트를 비활성화 하지 않음. 
 "true" : 컴포넌트를 비활성화 함.


displayAllOptionLabel

"전체" 항목을 선택한 경우, 선택된 아이템 label 전체를 출력하지 않고 "전체 선택"으로 출력. [default: false, true]


displaymessage

validate API의 검증 결과가 실패일 경우, 결과 메세지 표시 여부. [default:false, true] 기본적으로 Engine에서 정의된 메세지가 표현됨. 단, invalidMessageFunc 속성을 이용하면 별도의 메시지를 정의 가능.
(옵션 설명)
 "false" (기본 값) :  결과 메시지를 표시하지 않음. 
 "true" : 결과 메시지를 표시. 
 
(관련 API)
 validate(); (함수)
 invalidMEssageFunc (속성)


displayMode

선택 항목의 표현 방법. [default: label, value delim label, label delim value, value]label과 value를 함께 표현하는 것이 가능. 구분자는 delimiter 속성에 정의 된 값을 사용.
(옵션 설명)
 "label" (기본 값) : label을 표시 (예시: "label")
 "value delim label" : value 구분자 label 순서로 표시 (예시: "value + 구분자 + label")
 "label delim value" : label 구분자 value 순서로 표시 (예시: "label + 구분자 + value")
 "value" : value를 표시 (예시: "value")

(관련 속성)
 delimiter


enableColumn

선택 항목 목록에서 특정 항목을 disable 처리하는 기능. disable 처리된 목록은 보이기만 할 뿐 선택이 되지 않음.선택 항목 목록이 DataList와 바인딩된 경우, disable 여부를 알려주는 컬럼을 지정. disable 여부를 알려주는 컬럼의 값이 enableColumnFalseValue 속성에 지정한 값과 같은 경우, 해당 행은 disable 처리됨.selectedIndex는 영향을 받지 않음. 즉 목록에 보이는 인덱스가 아닌 전체 인덱스를 기준으로 동작.해당 속성은 setEnableColumn 함수를 통해 동적으로 설정 가능. 
(예제) 
 checkcombobox1이 dataList1과 바인딩되어있고,
 enableColumn="col3" 및 enableColumnFalseValue="false" 설정 사용.

 아래를 실행.  
 dataList1.getCellData(row, "col3");
 위의 결과로 false가 반환될 경우, 해당 행은 목록에서 disable 처리됨.

(관련 API)
 enableColumnFalseValue (속성)
 setenableColumn (함수)


enableColumnFalseValue

enableColumn 사용 시 목록에서 특정 항목을 감추기 위한 조건에 해당하는 값. 
(옵션 설명)
 기본 값: "0", "false", "FALSE", 혹은 "F"

(예시)
 아래를 실행. 
 dataList.getCellData(row, enableColumn);
 위의 결과 값이 "0, false, FALSE, F" 중 하나에 해당되면, 해당 행은 목록에서 disable 처리됨.
 
(관련 속성)
 enableColumn


escape

<>&"를 HTML Escape 문자로 변환하여 화면에 표시.
(옵션 설명)
 "true" (기본 값) : Escape 문자로 변환하지 않음.
 "false" : Escape 문자로 변환하여 화면에 표시.


id

컴포넌트 ID. 컴포넌트 ID는 전역 객체로 할당됨. 각 컴포넌트 ID를 통해 Script에서 해당 컴포넌트에 접근 가능.


invalidMessage

validate API의 검증 결과가 실패일 경우 표시할 메시지. displaymessage="true"일 경우만 유효.invalidMessageFunc과 동시 적용 불가.
(관련 API)
 validate();
 displaymessage="true"

(!주의!)
 invalidMessageFunc 속성과 동시 적용 불가.


invalidMessageFunc

validate API의 검증 결과가 실패일 경우, 결과 메시지를 동적으로 표시할 사용자 정의 함수 이름. displaymessage="true"일 경우만 유효. invalidMessage와 동시 적용 불가. 
(사용자 정의 함수 예)
 // 아래 type에 대한 검증 실패 시, 메시지를 동적으로 생성하는 예.
 // mandatory, allowChar, ignoreChar, minLength, maxLength, minByteLength, maxByteLength

 function fn_msg(){ 
    var tmpType = checkbox1.getType(); 
    var tmpValue = checkbox1.getValue(); 
    if(tmpType == "mandatory")
        { return "필수 검증 항목입니다."; } 
    }

(관련 API)
 validate();
 displaymessage="true"

(!주의!)
 invalidMessage 속성과 동시 적용 불가.


labelWidthAuto

컴포넌트에 정의된 width을 무시하고 항목 중 가장 긴 텍스트에 맞게 출력. [default: false, true] 단, position: absolute;이고 우측에 컴포넌트가 배치된 경우, UI가 틀어질 수 있음. 우측에 컴포넌트가 없도록 디자인하거나, position: relative; 사용을 권장.
(옵션 설명)
 "false" (기본 값) : 컴포넌트에 정의된 width 값을 사용.  
 "true" : 가장 긴 텍스트에 폭을 맞추어 출력.


mandatory

필수 선택 적용 여부. [default: false, true] validate 함수를 통해 입력값을 검증할 경우 필수 입력을 확인. 
(옵션 설명)
 "false" (기본 값) : 필수 선택 적용하지 않음. 
 "true" : 필수 선택 적용.
 
(관련 함수)
 validate();


navBtn

선택 목록 하단에 [선택해제] 및 [선택적용] 버튼을 표시. ([선택해제] - 항목 선택을 취소. [선택적용] - 항목 선택을 적용.)
(옵션 설명)
 "true" : [선택해제] 및 [선택적용] 버튼을 표시.
 "false" (기본 값) : 표시하지 않음.


nextTabID

Tab 키로 이동할 경우, Tab 키를 누를 때 선택되는 컴포넌트의 ID.


rangeSeparator

연속적으로 선택된 값을 "x-y" 형태로 간단하게 보여주는 기능 목록을 펼쳤을 때의 순서를 기준으로 연속성을 판단한다.
(예제) 
 항목이 1부터 100까지 있고 "1,3,4,5,6,12,13,14,25,26,27,88,89,90,91" 이 선택된 경우 rangeSeperator를 "-"로 설정하면 아래와 같이 출력된다.
 "1,3-6,12-14,25-27,88-91"


readOnly

읽기 전용 적용 여부. [default: false, true] 
 (옵션 설명)
 "false" (기본 값) : 읽기 전용 적용하지 않음.
 "true" : 읽기 전용 적용.


ref

DataCollection의 value 경로. DataCollection의 value와 웹스퀘어 컴포넌트를 바인딩할 때 사용. "data:" prefix를 추가하여 data:[DataCollection ID].[Key id 또는 Column id] 형태로 지정해야 함. DataList와 바인딩된 경우, GridView에서 선택된 행의 값이 바인딩됨.
// (작성 예)
 data:dataMap1.dept

// Instance Data와 연동 할 경우 연동 할 XML 데이터의 XPath를 명시해야 함. 
// (작성 예)
 res/userInfo/dept/@value


renderType

브라우저에 표현될 레이아웃 구조. [default: component, native]
(옵션 설명) 
 "component" : 최상위 <div> 태그 하위에 table 태그를 사용하여 항목을 표현.
 "native" : group으로 감싼 <div> 태그를 사용하여 항목을 표현. table태그를 사용하지 않음.


search

사용자 입력 값 검색 방법. [default:start, contain, none] interactionMode="false"인 경우 유효. 
(옵션 설명)
 "start" (기본 값)입력값과 항목의 시작과 같을 경우만 검색. 
 "contain" 입력값이 항목에 속해 있는 모든 경우 검색. 
 "none" 입력값이 항목과 완전히 같은 경우만 검색. 

(관련 속성)
 interactionMode="false"


searchTarget

사용자의 입력 값을 기반으로 선택 항목을 제안하기 위해 검색할 대상을 지정. [default:label, value, both] 
(옵션 설명)
 "label" (기본 값) : label 검색
 "value" : value 검색
 "both" : label과 value 모두 검색.


separator

선택된 항목들이 여러 개인 경우, 구분자로 사용할 문자. [default:" "(space)]


showCheckedTop

체크된 항목을 리스트 상단에 정렬시키는 속성. [default: false, true] 
 (옵션 설명)
 checkboxClickSync = true일때만 동작한다.
 "false" (기본 값) : 체크된 항목이 원래의 리스트 위치에 그대로 보여진다.
 "true" : 체크된 항목들이 리스트의 상단에 보이고 체크되지 않은 항목이 그 아래에 보이게 된다.


sortMethod

선택 항목 목록 정렬 방법. sortOption 속성이 정의된 경우에만 유효. [default: ascending, descending] 
 (옵션 설명)
 "ascending" (기본 값) : 오름차순으로 선택 항목 목록을 정렬.
 "descending" : 내림차순으로 선택 항목 목록을 정렬.  

 (관련 속성)
 sortOption


sortOption

선택 항목 목록 정렬 기준. [label, value] 기본적으로 오름차순으로 정렬되며, sortMethod 속성이 설정된 경우 해당 설정을 따름. 
 (옵션 설명)
 "label" : label을 기준으로 선택 항목 목록 정렬.
 "value" : value를 기준으로 선택 항목 목록 정렬.  

 (관련 속성)
 sortMethod="ascending" 
 sortMethod="descending"


submenuSize

선택 항목 목록 크기 결정 방법. [default: fixed, auto, column] 
(옵션 설명)
 "fixed" (기본 값) : 기본 width 사용
 "auto" : label에 따라 자동 조정. 
 "column" : column 수에 비례해서 가로 길이가 결정된다. (70px짜리 column이 2개면 목록 가로길이는 140px, 8개면 560px)

(관련 속성)
 labelWidthAuto="true"
 visibleColNum, visibleColMax : column 수를 결정하는 속성. 두 속성 모두 기본값은 1.


tabIndex

Tab 키를 이용하여 포커스를 변경할 경우, 해당 컴포넌트에 포커스를 주는 순서. HTML의 tabindex 속성과 동일.


title

HTML의 title 속성과 동일. 마우스 오버 시, title로 저장한 값이 툴팁으로 표시됨. 일반적으로 웹접근성 지원용으로 설정.


useDrag

목록이 펼쳐졌을 때 마우스 드래그 동작을 통해 여러 checkbox를 직사각형 형태로 선택 / 선택해제(shift+drag) 할 수 있는 기능 shift키를 누른 상태로 마우스를 드래그하면 선택해제 모드가 된다.
(옵션 설명)
 "true" : shift키를 누르지 않은 상태에서는 마우스 드래그를 통해 직사각형 영역 안의 모든 checkbox를 선택한다. shift키를 누르고 드래그하면 영역 안의 checkbox 선택을 해제한다. 
 "false" : (기본 값) 마우스 드래그 동작읉 통한 여러 checkbox를 선택하는 기능을 사용하지 않는다.


useEdit

checkcombobox 값을 직접 타이핑하여 편집할 수 있는 기능
(옵션 설명)
 "true" : 마우스로 checkcombobox를 클릭하면 편집 모드 상태가 되어 값을 직접 타이핑하여 편집하는 기능을 사용할 수 있다.
 "false" : (기본 값) 값을 직접 편집할 수 없음 (마우스로 목록을 열고 체크박스를 체크하거나 setValue API 호출을 통해서 값을 변경해야 함.)


useItemLocale

아이템 목록 다국어 사용 여부.


useKeywordHighlight

검색 결과 중 사용자 입력값에 별도의 class를 적용하여 다르게 표시할지 여부. [default: false, true] 
 (옵션 설명)
 "false" (기본 값) : 적용하지 않음. 
 "true" : 검색된 키워드에 "w2autoComplete_keyword" class를 적용.


useLocale

다국어 사용.선택 항목의 label에 표현되는 값을 클라이언트의 다국어 key를 이용하여 표현.(세부 내용은 다국어 설정 가이드 - 클라이언트 편을 참고.)
(옵션 설명)
 "false" (기본 값): 클라이언트의 다국어 key를 이용하지 않음. 
 "true" : 클라이언트의 다국어 key를 이용하여 다국어 지원. 

(관련 옵션)
 chooseOptionLabel에 대해서도 다국어 key가 필요함. (chooseOptionLabelLocaleRef)


userData1

사용자 정의 데이터 속성. getUserData("userData1") API를 통해 설정한 값을 얻어올 수 있음. 
 // 속성 값 얻어오기 예시
 getUserData("userData1");


userData2

사용자 정의 데이터 속성. getUserData("userData2") API를 통해 설정한 값을 얻어올 수 있음. 
 // 속성 값 얻어오기 예시
 getUserData("userData2");


userData3

사용자 정의 데이터 속성. getUserData("userData3") API를 통해 설정한 값을 얻어올 수 있음. 
 // 속성 값 얻어오기 예시
 getUserData("userData3");


validateOnInput

[default:false] useEdit 사용 시 값이 입력될 때마다 유효성을 검증하는 기능 (oninput 이벤트를 지원하는 IE9이상 브라우저 지원)
 (옵션 설명)
 "false" (기본 값) : 적용하지 않음. 
 "true" : checkcombobox 값 편집 시 키보드로 입력할 때마다 값에 대한 유효성 검사를 적용해서 유효하지 않는 값의 입력을 막는다.
(관련 속성)
 useEdit


validator

유효성 체크 함수 이름.컴포넌트에서 blur가 발생하는 시점에 본 속성에 정의한 함수가 실행됨. 즉, onblur 이벤트 이전에 실행되며, blur가 발생하는 시점에 유효성을 확인하며 return을 통해 value를 변경 할 수 있음.
(관련 이벤트)
 onblur


visibleColMax

목록을 펼쳤을 때 보여줄 열의 최대 개수. 보여줄 열의 개수를 항목의 개수에 따라 자동으로 설정할 때 사용한다.visibleColNum = Math.min(visibleColMax, Math.ceil(itemCount / visibleRowNum))visibleColNum 설정이 있을 경우 이 설정은 무시된다.
(옵션 설명)
 "visibleRowNum=5,visibleColMax=8"
 항목의 총 수가 40개보다 적은 경우에는 항목이 5배수 단위로 늘어날 때마다 열이 1개씩 추가된다.
 항목의 총 수가 4개이면 4*1, 12개이면 5*3, 24개이면 5*5, 30개이면 5*6 직사각형 형태로 출력된다. 
 항목의 총 수가 40개보다 큰 경우에는 세로 스크롤이 생긴다. 목록은 5*8 직사각형 형태로 출력된다.
(관련 속성)
 visibleColNum : 이 설정이 적용되어 있는 경우 visibleColMax 설정은 무시된다.


visibleColNum

목록의 열의 개수. 기본값은 1이다.
(옵션 설명)
 3 : 열의 개수가 3개, 행의 개수가 Math.ceil(데이터 수/3)인 직사각형 형태로 목록이 표현된다.


visibleColumn

선택 항목 목록에서 특정 항목을 감추는 기능. 선택 항목 목록이 DataList와 바인딩된 경우, 표시 여부를 알려주는 컬럼을 지정. 표시 여부를 알려주는 컬럼의 값이 visibleColumnFalseValue 속성에 지정한 값과 같은 경우, 해당 행은 선택 항목 목록에 표시되지 않음. selectedIndex는 영향을 받지 않음. 즉 목록에 보이는 인덱스가 아닌 전체 인덱스를 기준으로 동작.해당 속성은 setVisibleColumn 함수를 통해 동적으로 설정 가능. 
(예제) 
 checkCombobox가 dataList1과 바인딩되어있고,
 visibleColumn="col3" 및 visibleColumnFalseValue="false" 설정 사용.

 아래를 실행.  
 dataList1.getCellData(row, "col3");
 위의 결과로 false가 반환될 경우, 해당 행은 선택 항목 목록에 표시되지 않음. 

(관련 API)
 visibleColumnFalseValue (속성)
 setVisibleColumn (함수)


visibleColumnFalseValue

visibleColumn 사용 시 목록에서 특정 항목을 감추기 위한 조건에 해당하는 값. 
(옵션 설명)
 기본 값: "0", "false", "FALSE", 혹은 "F"

(예시)
 아래를 실행. 
 dataList.getCellData(row, visibleColumn);
 위의 결과 값이 "0, false, FALSE, F" 중 하나에 해당되면, 해당 행은 선택 항목 목록에 표시되지 않음.
 
(관련 속성)
 visibleColumn


visibleRowNum

표현 될 항목 행수. "1"로 설정하는 것은 비권장.


wmode

wmode를 사용하여 선택 항목 목록을 object 태그보다 상위에 표시. [default: false, true]선택 항목 목록이 object(ActiveX, Flash 등)에 가려질 경우 사용. 본 컴포넌트가 아닌 object(ActiveX, Flash 등)태그에 wmode 사용할 것을 권장. 
 (옵션 설명)
 "true" : wmode 사용.
 "false" (기본 값) : wmode 사용하지 않음.





Event Detail




onblur

포커스를 잃었을 때 발생.

Parameter

nametypedescription


eObject이벤트 객체





onchange

사용자가 항목을 선택/변경하거나 API를 이용하여 value를 설정할 경우 발생. 사용자의 항목 선택만 제어할 때는 onviewchange 이벤트를 사용.

Parameter

nametypedescription


infoJSONoldValue, newValue를 포함한 JSON을 반환한다.
 info.oldValue : 이전 값
 info.newValue : 변경된 값


Sample
// 컴포넌트 태그 안에 event가 있는 경우
<![CDATA[
    var oldValue = info.oldValue;
    var newValue = info.newValue;
]]>


oncheckboxclick

목록에서 항목을 선택(체크/체크 해제)할 때마다 발생.

Parameter

nametypedescription


indexNumber선택된 항목의 index값


isCheckedBoolean선택 여부. 
 checkbox가 체크된 경우 "true"
 checkbox가 체크 해제된경우 "false"


valueString선택된 항목의 value





onclick

마우스로 CheckComboBox를 클릭할 때 발생.

Parameter

nametypedescription


eObject이벤트 객체





onclose

목록을 선택하고 다른 영역을 클릭하여 목록이 닫혔을 때 발생.

Parameter

nametypedescription


flagBoolean닫히는 유형. 
 "true" : 다른 영역을 클릭하여 목록이 닫혔을 때
 "false" : 화살표를 클릭하거나 엔터키를 눌러서 목록이 닫혔을 때





ondblclick

마우스로 checkcombobox를 더블 클릭했을 때 발생.

Parameter

nametypedescription


eObject이벤트 객체





onfocus

포커스를 얻었을 때 발생.

Parameter

nametypedescription


eObject이벤트 객체





onviewchange

키보드 또는 마우스 조작을 통해 값이 변경된 경우 발생.스크립트를 통해 값이 변경된 경우에는 발생하지 않음. (native onchange 이벤트와 유사함.)

Parameter

nametypedescription


infoJSONoldInfo, newInfo, oldValue, newValue를 포함한 오브젝트를 반환.
 info.oldValue : 이전 값
 info.newValue : 변경된 값 
 info.oldInfo : 이전에 상태를 기준으로 전체 항목들의 각각을 JSON으로 변환하여 저장한 배열 
 info.newInfo : 변경 된 후의 상태를 기준으로 전체 항목들의 각각을 JSON으로 변환하여 저장한 배열


Sample
<![CDATA[
    var oldValue = info.oldValue;   // 이전 value
    var newValue = info.newValue;   // 현재 value
    var oldInfoArr = info.oldInfo;  // 이전 상태의 항목 정보 Array
    var newInfoArr = info.newInfo;  // 현재 상태의 항목 정보 Array

    //현재 상태의 항목 중 첫번째 항목에 대한 세부 정보에 접근 할 경우
    var tmpInfo = newInfoArr[0];
    var tmpInfoValue = tmpInfo.value;   // (반환 예) "1"
    var tmpInfoLabel = tmpInfo.label;   // (반환 예) "사과"
    var tmpInfoChecked = tmpInfo.checked;   // (반환 예) true
    var tmpInfoIndex = tmpInfo.index;   // (반환 예) 0
]]>



Method Detail




addClass(
									  className
										)
							

컴포넌트에 CSS class를 추가. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


classNameStringY추가할 class의 이름



Sample
// (예제)
// input1 컴포넌트에 oddClass라는 class를 추가    
input1.addClass("oddClass");


addItem(
									  value
									       , 
									       label
									       , 
									       index
										)
							

선택 항목을 추가. index를 지정하지 않으면 하위로 추가됨.단, allOption 속성으로 지정항 항목은 index에 포함되며, chooseOption 속성으로 지정한 항목은 index에 포함되지 않음.


Parameter

nametyperequireddescription


valueStringY항목의 value


labelStringY항목의 label


indexNumberN항목의 index




Return

typedescription


Number추가된 항목의 index


Sample
// 아래와 같이 항목을 추가하지 않고 chooseOption속성과 allOption속성을 true로 정의 한 경우


// index를 지정하지 않고 항목 추가
checkcombobox1.addItem( "1" , "사과");
//결과 - "전체 선택" 항목 하위로(제일 마지막에) 추가된다. 항목의 순서는 "전체 선택", "사과" 가 된다.
//      "선택"(chooseOption)은 선택 가능한 항목에는 빠져있고 항목이 선택되지 않은 경우 label에 표현된다.

// index를 0으로 지정하여 항목 추가
checkcombobox1.addItem( "2" , "오렌지",0);
//결과 - 0번째에 항목이 추가되어 "전체 선택" 항목 위에 추가된다. 항목의 순서는 "오렌지", "전체 선택", "사과" 가 된다.
//      "선택"(chooseOption)은 선택 가능한 항목에는 빠져있고 항목이 선택되지 않은 경우 label에 표현된다.


bind(
									  eventType
									       , 
									       function
										)
							

컴포넌트에 이벤트와 핸들러 함수를 동적으로 할당. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


eventTypeStringY할당할 이벤트


functionFunctionY이벤트에 대한 핸들러 함수.



Sample
// (예제 1)
// input1의 onclick 이벤트에 대한 핸들러 함수를 직접 정의하여 할당. 
input1.bind("onclick", function(e){ alert(input1.getValue();}));

// (예제 2)
// 미리 commObj.ev_click 함수를 정의.
var commObj = {};
commObj.ev_click = function(e){
    alert("click :: "+this.id);
};

// input1 컴포넌트에 onclick 이벤트와 정의한 핸들러 함수를 동적으로 할당. 
input1.bind("onclick", commObj.ev_click );


changeClass(
									  oldClassName
									       , 
									       newClassName
										)
							

웹스퀘어 컴포넌트의 class를 변경. (웹스퀘어 컴포넌트 공통.) 기본적으로 addClass를 통해 추가된 class만 변경 가능. 웹스퀘어 컴포넌트의 class 속성에 직접 정의된 class를 삭제하려면 config.xml 파일에 아래 설정을 추가해야 함. 
// config.xml에 아래 설정을 추가. 
<removeDefaultClass value="true" />


Parameter

nametyperequireddescription


oldClassNameStringY변경할 class


newClassNameStringY새로 사용할 class



Sample
// inputBox 컴포넌트에 class가 속성으로 직접 정의됨.


// config.xml 파일에 아래를 추가.

    <removeDefaultClass value="true" />


// class를 변경 가능. 
// (tmpInputClass class를 tmpInputWarninClass로 변경.)
input1.changeClass("tmpInputClass","tmpInputWarninClass");


checkAll(
									  checked
										)
							

모든 항목을 선택하거나 해제.


Parameter

nametyperequireddescription


checkedBolleanY선택/해제 상태



Sample
//전체 선택
checkcombobox1.checkAll(true);

//전체 해제
checkcombobox1.checkAll(false);


deleteItem(
									  index
										)
							

주어진 index에 해당하는 항목을 삭제. allOption="true"인 경우, 해당 항목도 index에 포함됨.


Parameter

nametyperequireddescription


indexNumberN삭제할 항목의 index




Return

typedescription


JSON삭제된 항목의 정보가 담긴 JSON
 label : 항목의 label
 value : 항목의 value


Sample
// 아래와 같이 항목을 추가하고 chooseOption 및 allOption 속성이 true인 경우



사과
1


오렌지
2





var returnValue = checkcombobox1.deleteItem(0); //allOption이 true로 정의되어있음으로 allOption에 대한 항목이 삭제된다.
// (반환 값) {label: "전체 선택", value: "all"}



focus(
									  
										)
							

웹스퀘어 컴포넌트에 포커스를 줌. (웹스퀘어 컴포넌트 공통.)





getDisabled(
									  
										)
							

현재 웹스퀘어 컴포넌트에 설정된 disabled 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Booleandisabled 속성 값


Sample
// 컴포넌트의 disabled 속성 값 확인 예제
var returnValue = componentId.getDisabled();
// (반환 값 예시) false


getGenerator(
									  
										)
							

컴포넌트가 Generator에 의해 생성된 경우, 자신을 생성한 부모 Generator 객체를 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Object부모 Generator 객체


Sample
//부모 Generator가 자식으로 Trigger를 생성한 예제
  

// 아래 예제의 경우 trigger1을 클릭하면 generator1 객체가 console에 표시됨. 
 scwin.trigger1.onclick = function(){ console.log(this.getGenerator());} 



getID(
									  
										)
							

웹스퀘어 컴포넌트의 ID를 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


String웹스퀘어 컴포넌트 ID


Sample
// 동적으로 웹스퀘어 컴포넌트를 받을 경우, 아래와 같이 ID 확인 가능.
function fn_validCheck(tmpObj){
    var compID = tmpObj.getID();
}
// 위의 예제 에서 tmpObj가 "input1" ID를 가지고 있는 경우,
// (반환 값) "input1"


getInfo(
									  index
										)
							

index에 해당하는 항목의 정보가 담긴 JSON을 반환.


Parameter

nametyperequireddescription


indexIntegerY조회 대상 index




Return

typedescription


JSON항목의 세부 정보가 담긴 JSON
 index : 항목의 index
 label : 항목의 label
 value : 항목의 value
 checked : 항목의 선택 여부


Sample
//아래와 같이 항목을 추가하고 chooseOption속성과 allOption속성이 true로 정의 한 경우



사과
1


오렌지
2




var returnValue = checkcombobox1.getInfo(1);    //allOption이 true임으로 1번째가 사과 항목이다.
//return 예시 ) {index: 1, label: "사과", value: "1", checked: false}


getInfoArray(
									  
										)
							

모든 항목들의 각각의 정보가 담긴 JSON을 Array에 담아 반환.



Return

typedescription


Array모든 항목들의 정보(JSON)가 담긴 array
 info : 항목의 정보가 담긴 JSON


Sample
//아래와 같이 항목을 추가하고 chooseOption속성과 allOption속성이 true로 정의 한 경우



사과
1


오렌지
2




var listArray = checkcombobox1.getInfoArray();

//사과 항목의 정보를 꺼내 올 경우
var tmpListObj = listArray[1];
//return 예시 ) {index: 1, label: "사과", value: "1", checked: false}

//사과 항목의 value를 꺼내 올 경우
var tmpListValue = tmpListObj.value;
return 예시 ) "1"


getInitStyle(
									  CSS
										)
							

컴포넌트의 초기 스타일을 반환. initStyle 속성을 true로 설정한 컴포넌트만 유효하게 동작한다.(웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


CSSStringN속성 (지정하지 않으면 모든 정보 출력)






getItemCount(
									  
										)
							

선택 항목 개수를 반환.



Return

typedescription


Number선택 항목 개수


Sample
// 총 2개의 선택 항목이 있는 경우
var returnValue = checkcombobox1.getItemCount();
// (반환 값) 2


getItemDisabled(
									  index
										)
							

주어진 index에 해당하는 항목의 disabled 설정을 반환.


Parameter

nametyperequireddescription


indexNumberY항목의 index




Return

typedescription


Boolean해당 항목의 비활성화 여부


Sample
// 첫번째 항목이 활성화 되어있고, 첫번째 항목의 활성화 여부를 반환 받는 예

var returnValue = checkcombobox1.getItemDisabled(0);
// (반환 값) false


getNextTabID(
									  
										)
							

nextTabID 속성의 설정 값을 반환.
(관련 속성)
nextTabID


Sample
// 사용 예
var nextTabID = checkcombobox1.getNextTabID();


getOpacity(
									  
										)
							

웹스퀘어 컴포넌트의 불투명도를 반환. (웹스퀘어 컴포넌트 공통.)엔진 내부적으로 CSS의 opacity 속성 값을 반환.



Return

typedescription


IntegerOpacity 값


Sample
// inputBox 컴포넌트에 opacity CSS를 적용.

        
// inputBox 컴포넌트의 opacity 값을 반환. 
var returnValue = input1.getOpacity(); 
// returnValue는 0 ~ 1 사이의 실수.
// (반환 값) "0.2"


getOriginalID(
									  
										)
							

웹스퀘어 컴포넌트의 originalID를 반환. (웹스퀘어 컴포넌트 공통.)originalID는 Scope 기능을 사용할 경우 존재. scope="true"인 WFrame를 사용할 경우, WFrame 내부의 컴포넌트 ID는 원래 사용자가 정의한 값(originalID) 앞에 prefix(wframeID + "_")가 추가되는 방식으로 변경됨.  originalID는 이 때, prefix가 추가되기 전 ID를 의미.



Return

typedescription


String컴포넌트의 originalID


Sample
// WFrame을 사용하는 다중 화면 구조 예시

// WFrame을 포함한 메인 화면 (main.xml) 
 

// 메인 화면 WFrame에 연결되는 소스 화면 (text.xml)


// text.xml 화면의 내부 스크립트에서 ID 및 originalID 확인하는 예제.
// getID 실행 
textbox1.getID(); // 실행 결과는 "wframe1_textbox1"
 
// getOriginalID 실행 
textbox1.getOriginalID(); // 실행 결과는 "textbox1"


getPluginName(
									  
										)
							

웹스퀘어 컴포넌트의 이름(pluginName)을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


String웹스퀘어 컴포넌트의 이름 (pluginName)


Sample
// 아래와 같이 공통 함수에서 동적으로 웹스퀘어 객체를 받는 경우, 컴포넌트 종류에 따른 분기 처리가 가능.
var commObj = {};

commObj.fn_makeReqData = function(tmpObj){
    var tmpID = tmpObj.getID(); // 컴포넌트 ID
    var tmpCompType = tmpObj.getPluginName();   // 컴포넌트 이름

    if(tmpCompType == "input"){
        //..로직..
    }else if(tmpCompType == "gridView"){
        //..로직 ..
    }else{
        //..로직..
    }
};


getPosition(
									  positionName
										)
							

웹스퀘어 컴포넌트의 위치(left, top)를 반환. (웹스퀘어 컴포넌트 공통.) 위치 값이 %로 설정된 경우, 픽셀로 변환된 값을 반환.


Parameter

nametyperequireddescription


positionNameStringY[left, top] 위치 종류




Return

typedescription


Number컴포넌트의 위치 값


Sample
// 아래와 같이 input 컴포넌트에 CSS 속성 margin이 적용된 경우,


// (예제) 위의 inputBox 컴포넌트의 top 값을 확인     
var returnValue = input1.getPosition("top"); 

// 픽셀 단위의 위치 값이 반환됨.

// (반환 값) 10


getReadOnly(
									  
										)
							

현재 웹스퀘어 컴포넌트에 설정된 readOnly 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Boolean현재 설정되어있는 readOnly 속성


Sample
// 컴포넌트의 readOnly 속성 값 확인 예제
var returnValue = componentId.getReadOnly();
// (반환 값 예시) false


getScope(
									  
										)
							

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)  scope="true"인 WFrame의 자식 컴포넌트가 아닌 경우, null을 반환.



Return

typedescription


ObjectWFrame 객체 또는 null


Sample
// (예제)
// 메인페이지에 wframe1이 있고, wframe1 내부에 wframe11이 존재. 
// 그리고, wframe11 내부에 textbox1이 존재.
   
textbox1.getScope(); 
// (반환 값) wframe11 객체


getScopeWindow(
									  
										)
							

scope="true"인 WFrame의 자식 컴포넌트인 경우, 부모 WFrame 객체를 반환. (웹스퀘어 컴포넌트 공통.)scope="true"인 WFrame의 자식 컴포넌트가 아닌 경우, 전역 window 객체를 반환.



Return

typedescription


ObjectWFrame 객체의 scope 객체 또는 전역 window 객체


Sample
// (예제)
// 메인페이지에 wframe1이 있고, wframe1 내부에 wframe11이 존재. 
// 그리고, wframe11 내부에 textbox1이 존재.
   
var scope = textbox1.getScopeWindow();
scope.wframe11 === textbox1.getScope(); // true


getSelectedInfo(
									  
										)
							

선택 된 항목들의 정보가 담긴 JSON을 Array에 담아 반환.



Return

typedescription


Array선택 된 항목들의 정보(JSON)가 담긴 array


Sample
//아래와 같이 항목을 추가하고 사과 항목이 선택 된 경우



사과
1


오렌지
2




var selectedArr = checkcombobox1.getSelectedInfo();
//return 예시 ) [{index: 0, label: "사과", value: "1", checked: true}]

//첫번째 항목(사과)을 꺼내 올 경우
var selectedObj =  selectedArr[0];
//return 예시 ) {index: 0, label: "사과", value: "1", checked: true}

//첫번째 항목의 value를 꺼내 올 경우
var selectedValue = selectedObj.value;
//return 예시 ) "1"


getSize(
									  sizeName
										)
							

웹스퀘어 컴포넌트의 크기(width, height)를 반환. (웹스퀘어 컴포넌트 공통.) %로 설정된 경우, 픽셀로 변환된 값을 반환.


Parameter

nametyperequireddescription


sizeNameStringY크기 값의 종류. sizeName 별 계산 방법은 아래 표를 참고. 
height : element.clientHeight
innerHeight : element.clientHeight + padding
outerHeight : element.clientHeight + padding + border
outerMarginHeight : element.clientHeight + padding + border + margin
width : element.clientWidth
innerWidth : element.clientWidth + padding
outerWidth : element.clientWidth + padding + border
outerMarginWidth : element.clientWidth + padding + border + margin




Return

typedescription


Number컴포넌트의 크기 값


Sample
var returnValue = componentId.getSize("width");
// (반환 예) 100 
// 픽셀 단위의 크기 값이 반환됨. 
// %로 설정된 경우, 픽셀로 변환된 값이 반환됨.


getStyle(
									  propertyName
										)
							

웹스퀘어 컴포넌트의 CSS 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


propertyNameStringY반환할 CSS 속성




Return

typedescription


StringCSS 속성 값


Sample
//아래와 같이 input 컴포넌트가 정의 된 경우


// (예제) 위의 inputBox 컴포넌트의 width 값을 확인   
var returnValue = input1.getStyle("width");

// (반환 값) "144px"


getStyleValue(
									  style
										)
							

[deprecated]getStyle 사용 권장.웹스퀘어 컴포넌트에 적용된 해당 CSS 속성 값을 반환.


Parameter

nametyperequireddescription


styleStringY반환하려는 CSS 속성.




Return

typedescription


Stringstyle 해당 CSS 속성 값 (색을 반환하는 경우, HexCode로 반환됨.)





getText(
									  separator
										)
							

선택된 항목의 label을 반환. 선택된 항목이 여러 개인 경우, separator를 사용하여 반환.separator를 설정하지 않은 경우, 공백(space)이 구분자로 사용됨.


Parameter

nametyperequireddescription


separatorStringN항목 구분자




Return

typedescription


String선택 된 항목들의 label이 담긴 문자열


Sample

// "사과"와 "오렌지"가 선택 된 경우
var returnValue = checkcombobox1.getText();
// (반환 값) "사과 오렌지"

//구분자 , 적용
var returnValue = checkcombobox1.getText(",");
// (반환 값) "사과,오렌지"


getTextArray(
									  
										)
							

선택 된 항목들의 label을 Array에 담아 반환.



Return

typedescription


Array선택 된 항목들의 label이 담긴 Array


Sample
//항목 중 "사과"와 "오렌지"가 선택 된 경우
var returnValue = checkcombobox1.getTextArray();
//return 예시 ) ["사과", "오렌지"]


getTitle(
									  
										)
							

컴포넌트의 title 속성 값을 반환. (웹스퀘어 컴포넌트 공통.)



Return

typedescription


Stringtitle 속성 값.


Sample
// 아래와 같이 input 컴포넌트의 title 속성이 "이름 입력"으로 정의된 경우


var tmpTitle = input1.getTitle();
// (반환 값 예시) "이름 입력"


getUdcHome(
									  
										)
							

UDC 객체가 자신을 정의한 UDC 파일 경로를 파일명을 포함해서 반환. (웹스퀘어 컴포넌트 공통.)파일명은 마지막 .xml까지 포함. .xml을 제외한 경로는 getUdcRoot를 사용해서 반환.UDC 객체가 아닌 컴포넌트에서 호출된 경우에는 undefined가 반환됨.



Return

typedescription


StringUDC 파일 경로. (UDC가 아닌 경우, undefined가 반환됨.)


Sample
// 예제
// UDC 파일 경로는 /a/b/udc.xml 
// 화면 XML은  /a/c/main.xml 
// UDC 객체의 ID는 udc1
  
udc1.getUdcHome(); 
// (실행 결과) /a/b/udc.xml


getUdcRoot(
									  
										)
							

UDC 객체가 자신을 정의한  UDC 파일 경로를 반환. (웹스퀘어 컴포넌트 공통.)파일명을 포함하지 않음. 파일명을 포함한 경로는 getUdcHome을 사용해서 반환.UDC 객체가 아닌 컴포넌트에서 호출된 경우에는 undefined가 반환됨.



Return

typedescription


StringUDC 파일 경로. (UDC가 아닌 경우, undefined가 반환됨.)


Sample
// 예제
// UDC 파일 경로는 /a/b/udc.xml 
// 화면 XML은  /a/c/main.xml 
// UDC 객체의 ID는 udc1
  
udc1.getUdcHome();    
// (실행 결과) /a/b/


getUserData(
									  key
										)
							

setUserData로 웹스퀘어 컴포넌트에 설정한 key의 value 혹은 사용자가 직접 페이지 소스(XML)에 속성으로 정의한 value를 반환. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


keyStringY데이터의 key




Return

typedescription


Stringkey에 해당하는 value


Sample
// Input 컴포넌트에 사용자 속성(setTest)을 설정하는 예제


// 위에서 설정한 setTest을 값을 반환하는 예제. 
input1.getUserData("setTest");
// (반환 값) "Hello"

//setUserData를 통해 'valueTest'(key)와 'WebSquare'(data)로 설정하는 예제. 
input1.setUserData("valueTest","WebSquare");

// 위에서 설정한 setTest을 값을 반환하는 예제. 
input1.getUserData("WebSquare");
// (반환 값) "WebSquare"


getValue(
									  separator
										)
							

선택된 항목의 value를 반환. 선택된 항목이 여러 개인 경우 separator를 사용하여 반환됨.separator를 설정하지 않은 경우 공백(space)이 구분자로 사용됨.


Parameter

nametyperequireddescription


separatorStringN항목 구분자




Return

typedescription


String선택된 항목의 value가 담긴 문자열


Sample
// value가 "1"과 "2"인 항목이 선택 된 경우

// 기본 API를 이용하여 꺼내 올 때
var returnValue = checkcombobox1.getValue();
// (반환 값) "1 2"

// "," 구분자를 이용하여 꺼내 올 때
var returnValue = checkcombobox1.getValue(",");
// (반환 값) "1,2"


getValueArray(
									  
										)
							

선택 된 항목들의 value를 담은 Array를 반환.



Return

typedescription


Array선택 된 항목들의 value가 담긴 Array


Sample
//value가 "1"과 "2"인 항목이 선택 된 경우

var returnValue = checkcombobox1.getValueArray(); 
//return 예시 ) ["1", "2"]


hasClass(
									  className
										)
							

웹스퀘어 컴포넌트가 특정 class를 포함하고 있는지 확인. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


classNameStringY검색할 class 이름




Return

typedescription


Booleanclass의 포함 여부


Sample
// inputBox 컴포넌트에 class가 속성으로 직접 정의됨.

        
var returnValue = input1.hasClass("tmpInputClass");
// (반환 값) true


hide(
									  
										)
							

컴포넌트를 화면에서 보이지 않도록 숨깁니다.





initCheckCombobox(
									  
										)
							

CheckComboBox를 초기화. (항목 삭제 및 value 초기화)


Sample
// (예제)
checkcombobox.initCheckCombobox();


openTable(
									  
										)
							

선택 항목 목록을 여는 기능. 선택 항목 목록을 갱신(updateTabe)하고 보여(showTable)주는 작업을 수행. interactionMode="true"인 경우 xforms-submit-done 이벤트에서 사용해야 하며 submission 또는 submissionFunc가 실행된 후 호출해야 함. 
 (관련 속성)
 interactionMode="true"





removeAll(
									  isInitialize
										)
							

[default:false, true] 모든 항목을 삭제하는 기능으로 allOption이 정의 된 경우 isInitialize값을 true로 적용하면 해당 항목은 삭제되지 않는다.


Parameter

nametyperequireddescription


isInitializeBooleanNallOption 항목 삭제 유무



Sample
//allOption의 항목이 정의 된 경우 allOption을 포함한 모든 항목이 삭제
checkcombobox1.removeAll();

//allOption의 항목이 정의 된 경우 allOption의 항목을 제외한 항목이 삭제
checkcombobox1.removeAll(true);


removeClass(
									  className
										)
							

웹스퀘어 컴포넌트에서 class를 삭제. (웹스퀘어 컴포넌트 공통.)기본적으로 addClass를 통해 추가된 class만 삭제 가능. 컴포넌트의 속성으로 직접 정의된 class를 삭제하기 위해서는 config.xml 파일에 아래 설정을 추가해야 함. 
 // config.xml 파일에 아래 설정 추가 
 <removeDefaultClass value="true" />


Parameter

nametyperequireddescription


classNameStringY삭제 할 class명



Sample
// inputBox의 속성으로 class가 직접 정의된 경우,


// config.xml 파일에 아래 항목을 추가.

    <removeDefaultClass value="true" />


// removeClass를 통해 삭제 가능. 
input1.removeClass("tmpInputClass");


setDelimiter(
									  
										)
							

checkcombobox delimiter 동적 변경





setDisabled(
									  disabled
										)
							

웹스퀘어 컴포넌트의 disabled 속성을 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


disabledBooleanYdisabled 상태. 
true: disabled 속성 활성화
false: disabled 속성 비활성화



Sample
// 컴포넌트의 disabled 속성을 활성화.
componentId.setDisabled(true);


setDisplyaMode(
									  
										)
							

checkcombobox displayMode 동적 변경





setEnableColumn(
									  columnId
									       , 
									       enableColumnFalseValue
										)
							

enableColumn 속성을 동적으로 설정.enableColumn 속성으로 설정된 컬럼은 Checkcombobox와 바인딩된 DataList의 컬럼 중 선택 항목으로의 disable 여부에 대한 설정 값을 가지고 있음.enableColumn 속성은 Checkcombobox의 선택 항목 목록 중 특정 항목을 disable 시키기 위한 용도로 사용됨.selectedIndex는 영향을 받지 않고 항상 전체 목록을 기준으로 동작.
(관련 속성)  
 enableColumn
 enableColumnFalseValue


Parameter

nametyperequireddescription


columnIdStringYenableColumn으로 설정할 컬럼의 ID. (disable 시킬 항목에 대한 데이터를 가지고 있는 컬럼)


enableColumnFalseValueStringN목록을 disable 시키기 위한 조건에 해당하는 값.



Sample
// Checkcombobox는 DataList와 바인딩되어 있음.
checkcombobox1.setEnableColumn(col3, false);
// (실행 결과) DataList에서 col3 컬럼의 값을 false로 갖는 행은 Checkcombobox의 선택 목록에 disable 처리되어 표시됨.


setEventPause(
									  evList
									       , 
									       flag
										)
							

지정한 이벤트를 중단함. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


evListStringN중단할 이벤트 목록. (null을 지정할 경우 해당 컴포넌트의 모든 사용자 이벤트가 중단되거나 중단 해제됨.)


flagBooleanY이벤트 중단 여부. 
true: 중단
false: 중단 해제.



Sample
// (예제 1)
// onclick 이벤트를 중단. 
input1.setEventPause("onclick", true); 

// (예제 2)
// onfocus 및 onblur 이벤트의 중단을 해제.
input1.setEventPause("onfocus,onblur", false); 

// (예제 3)
// input1에 등록된 모든 사용자 이벤트를 중단.
input1.setEventPause(null, true);


setInitStyle(
									  property
										)
							

컴포넌트의 초기 스타일을 복구한다. initStyle 속성을 true로 설정한 컴포넌트만 유효하게 동작한다 (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


propertyStringNCSS 속성 (지정하지 않으면 모든 속성의 초기 값으로 복구.)



Sample
// (예제)
group1.setInitStyle();


setItemDisabled(
									  index
									       , 
									       flag
										)
							

주어진 index에 해당하는 항목의 disabled 속성을 설정.


Parameter

nametyperequireddescription


indexNumberY항목의 index


flagBooleanYdisabled 상태
true: disabled 속성 활성화
false: disabled 속성 비활성화



Sample
// 첫번째 항목을 비활성화
checkcombobox1.setItemDisabled(0, true);
// 첫번째 항목은 선택 및 선택 해제가 불가능.


setItemSet(
									  nodeset
									       , 
									       label
									       , 
									       value
										)
							

선택 항목 목록을 설정. 현재 사용자가 선택(입력)된 값은 그대로 유지되고, 선택 항목 목록만 새로 설정됨.


Parameter

nametyperequireddescription


nodesetStringN변경 대상 nodeset


labelStringN선택 항목 목록의 label로 새로 설정할 경로


valueStringN선택 항목 목록의 value로 새로 설정할 경로



Sample
// (예제)
// (1) id가 "dc_tmpSearchList"인 DataList 선택 항목(itemSet)과 바인딩.
// (2) disp 컬럼을 label로 code 컬럼을 value로 설정

checkcombobox1.setItemSet("data:dc_tmpSearchList","disp","code");


setNextTabID(
									  componentID
									       , 
									       componentScope
										)
							

nextTabID 속성을 설정.두번째 인자로 nextTabID에 해당하는 컴포넌트가 위치한 frame의 ID를 넘겨주면 scope를 설정할 수 있음.
(관련 속성)
nextTabID


Parameter

nametyperequireddescription


componentIDStringYnextTabID로 설정할 컴포넌트의 ID


componentScopeStringNnextTabID로 설정할 컴포넌트의 scope



Sample
// 사용 예
checkcombobox1.setNextTabID("input2", "wframe1");


setNodeSet(
									  nodeset
									       , 
									       label
									       , 
									       value
										)
							

선택 항목 목록을 설정. DataList와 바인딩할 경우 nodeset 파라미터는 "data:"로 시작해야 함.


Parameter

nametyperequireddescription


nodesetStringYDataList의 ID. "data:"로 시작해야 함. (혹은 InstanceData의 XPath)


labelStringNlabel로 설정할 컬럼의 ID. 할당하지 않으면 기존 값이 그대로 적용됨. (혹은 label에 설정할 nodeset 하위의 XPath)


valueStringNvalue로 설정할 컬럼의 ID. 할당하지 않으면 기존 값이 그대로 적용됨. (혹은 value에 설정할 nodeset 하위의 XPath)



Sample
// DataList 정의.







zero
0


one
1




// (예제 1) DataList1과 바인딩하고 label은 lbl 컬럼을, value는 code컬럼을 사용.   
checkcombobox1.setNodeSet('data:dataList1','lbl','code');

// (예제 2) DataList2와 바인딩하고 label 및 value는 예전 컬럼 정보를 사용.
checkcombobox1.setNodeSet('data:dataList2');    
// (결과) 기존에 할당된 label의 lbl과 value의 code는 그대로 유지되고 dataList만 변경됨.


setOpacity(
									  value
										)
							

웹스퀘어 컴포넌트의 불투명도를 설정. (웹스퀘어 컴포넌트 공통.)엔진 내부적으로 CSS 속성인 opacity(불투명도)를 설정.


Parameter

nametyperequireddescription


valueNumberYOpacity 값 (0과 1 사이의 실수)



Sample
// (예제) 불투명도를 0.45로 설정
componentId.setOpacity(0.45);


setPosition(
									  left
									       , 
									       top
									       , 
									       mode
										)
							

웹스퀘어 컴포넌트의 위치(left, top)를 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


leftNumberY설정할 left 위치 값 또는 null.


topNumberY설정할 top 위치 값 또는 null.


modeStringN위치 설정 방법. [default: absolute, delta] 
absolute: 입력된 값을 위치로 설정.
delta: 현재 위치에 입력된 left 및 top 값을 추가.



Sample
// (예제) 컴포넌트의 top만 100px로 설정.
componentId.setPosition(null, 100);


setReadOnly(
									  readOnly
										)
							

웹스퀘어 컴포넌트의 readOnly 속성을 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


readOnlyBooleanYreadOnly 속성 활성화 여부. ( "true" : 활성화, "false" : 비활성화)



Sample
// 컴포넌트의 readOnly 속성을 true로 설정하는 예.
componentId.setReadOnly(true);


setRef(
									  path
										)
							

ref 속성을 설정. DataCollection과 연동시 "data:"라는 prefix를 꼭 붙여야 함.명시하지 않을 경우, InstanceData의 XPath로 인식됨.


Parameter

nametyperequireddescription


pathStringYref의 경로



Sample
// dataMap1의 hobby key와 checkcombobox1 컴포넌트의 value를 바인딩하는 경우
checkcombobox1.setRef("data:dataMap1.hobby");

// InstanceData의 "res/userData/hobby"와 연동 할 경우.
checkcombobox1.setRef("res/userData/hobby");


setSelectedInfo(
									  infoArray
										)
							

항목의 선택여부가 담긴 정보(JSON)를 기반으로 항목을 선택/해지.


Parameter

nametyperequireddescription


infoArrayArrayY선택/해지하려는 각 항목의 정보가 담긴 JOSN을 담고 있는 Array



Sample
//아래와 같이 항목을 추가하고 allOption속성을 true로 정의 한 경우



사과
1


오렌지
2


     

//"오렌지" 항목을 선택하고자 할 때   - allOption항목이 true임으로 해당 항목이 0번째 index이다.
checkcombobox1.setSelectedInfo([{index:2,checked:true}]);

//"사과"와 "오렌지"항목을 선택하고자 할 때 - allOption항목이 true임으로 해당 항목이 0번째 index이다.
checkcombobox1.setSelectedInfo([{index:1,checked:true},{index:2,checked:true}]);


setSize(
									  width
									       , 
									       height
										)
							

웹스퀘어 컴포넌트의 크기(width, height)를 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


widthNumberY새로 설정할 컴포넌트의 width 값 또는 null


heightNumberY새로 설정할 컴포넌트의 height 값 또는 null



Sample
// (예제) 컴포넌트의 height만 100px로 설정.
componentId.setSize(null,100);


setStyle(
									  propertyName
									       , 
									       value
										)
							

웹스퀘어 컴포넌트의 CSS 속성을 설정. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


propertyNameStringY설정할 CSS 속성


valueStringY해당 CSS 속성에 적용할 값



Sample
// (예제 1) 컴포넌트의 width를 200px로 설정
componentId.setStyle("width", "200px");

// (예제 2) 배경색을 olive로 변경
componentId.setStyle("background-color","olive");


setText(
									  label
										)
							

파라메터로 넘어온 label이 항목에 있는 경우 해당 항목이 선택되며 separator속성에 정의 한 구분자로 label간의 구분자를 넣어야 함.separator속성을 미지정 한 경우 공백(space)를 통해 항목을 구분.


Parameter

nametyperequireddescription


labelStringY선택하고자 하는 항목들의 label 문자열



Sample
//아래와 같이 항목을 추가하고 separator속성을 ","로 정의 한 경우



사과
1


오렌지
2




//"사과"와 "오렌지"항목을 선택 할 경우
checkcombobox1.setText("사과,오렌지");

//만약 separator속성을 정의하지 않은경우 label 사이에 공백을 넣어줘야 한다.
checkcombobox1.setText("사과 오렌지");


setUserData(
									  key
									       , 
									       value
										)
							

웹스퀘어 컴포넌트에 임의의 데이터를 설정. (웹스퀘어 컴포넌트 공통.) 컴포넌트에 설정 가능한 key를 입력해야 함. 설정 가능한 key가 아닌 경우, 해당 내용이 로그에 출력됨.


Parameter

nametyperequireddescription


keyStringY설정할 데이터의 key


valueStringY설정한 데이터의 value



Sample
// 컴포넌트에 'data'라는 key로 'WebSquare'라는 value를 설정하는 예제.

componentId.setUserData("data", "WebSquare");

// 컴포넌트에 설정이 불가능한 key를 임력할 경우, key 설정이 불가능. 
 
componentId.setUserData("title", "WebSquare");
// 아래와 같이 로그가 출력됨. 
// !!!WARNING - [title] can't be defined as UserData.


setValue(
									  value
										)
							

파라메터로 넘어온 값에 해당하는 선택 항목을 선택.  여러 항목을 한번에 설정할 경우 공백(space)를 이용하여 구분. 주어진 값에 대한 선택 항목이 없는 경우, 아무 동작이 일어나지 않음.


Parameter

nametyperequireddescription


valueStringY선택하려는 항목의 value



Sample
//아래와 같이 항목을 추가하고 separator 속성을 ","로 정의 한 경우



Apple
1


Orange
2




//"Apple"과 "Orange" 항목을 선택하는 예제 
checkcombobox1.setValue("1,2");


setVisibleColumn(
									  columnId
									       , 
									       visibleColumnFalseValue
										)
							

visibleColumn 속성을 동적으로 설정.visibleColumn 속성으로 설정된 컬럼은 CheckComboBox와 바인딩된 DataList의 컬럼 중 선택 항목으로의 표시 여부에 대한 설정 값을 가지고 있음.visibleColumn 속성은 CheckComboBox의 선택 항목 목록 중 특정 항목을 감추기 위한 용도로 사용됨.selectedIndex는 영향을 받지 않고 항상 전체 목록을 기준으로 동작.
(관련 속성)  
 visibleColumn
 visibleColumnFalseValue


Parameter

nametyperequireddescription


columnIdStringYvisibleColumn으로 설정할 컬럼의 ID. (감출 항목에 대한 데이터를 가지고 있는 컬럼)


visibleColumnFalseValueStringN목록을 감추기 위한 조건에 해당하는 값.



Sample
// CheckComboBox는 DataList와 바인딩되어 있음.
checkCombobox1.setVisibleColumn(col3, false);
// (실행 결과) DataList에서 col3 컬럼의 값을 false로 갖는 행은 CheckComboBox의 선택 목록에 표시되지 않음.


show(
									  displayType
										)
							

웹스퀘어 컴포넌트를 화면에 표시. (웹스퀘어 컴포넌트 공통.)CSS display 속성을 주어진 값으로 설정하고 "visibility: show;"를 적용.


Parameter

nametyperequireddescription


displayTypeStringN적용할 CSS display 속성의 값.   
block : display: block;을 적용. (기본 값)
inline : display: inline;을 적용.
none : display: none;을 적용.
"" : show 수행 이전의 display 속성 값으로 복구.



Sample
// (예제) display: block; CSS를 설정.
componentId.show();  

// (예제) 위제 설정한 display 속성 값을 취소하고 원래의 display 값을 복구.
componentId.show("");


toggleClass(
									  className
										)
							

웹스퀘어 컴포넌트에서 특정 class를 제거하거나 추가. (웹스퀘어 컴포넌트 공통.)웹스퀘어 컴포넌트가 파라미터로 주어진 class를 포함한 경우, 해당 class를 제거. 웹스퀘어 컴포넌트에 파라미터로 주어진 class가 없는 경우, 해당 class를 추가. 기본적으로 addClass를 통해 추가된 class만 삭제 가능. 웹스퀘어 컴포넌트의 속성으로 직접 정의된 class를 삭제하기 위해서는 config.xml 파일에 아래 설정을 추가. 
 // config.xml 파일에 아래 설정 추가
 <removeDefaultClass value="true" />


Parameter

nametyperequireddescription


classNameStringY추가/삭제할 class



Sample
// inputBox 컴포넌트에 class가 속성으로 직접 정의됨.


//config.xml 파일에 아래를 추가.

    <removeDefaultClass value="true" />


// tmpInputClass class를 삭제.
input1.toggleClass("tmpInputClass");

// (위에서 삭제된) tmpInputClass class를 다시 추가.
input1.toggleClass("tmpInputClass");


trigger(
									  type
									       , 
									       array
										)
							

컴포넌트에서 특정 이벤트를 발생시킴. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


typeStringY발생시킬 이벤트


arrayArrayN이벤트 핸들러에 전달할 파라미터 배열



Sample
// (예제 1)
// input1 컴포넌트에 onclick 이벤트를 발생시킴.
input1.trigger("onclick");

// (예제 2)
// input1에 onviewchange 이벤트를 발생시키고 핸들러 함수에 (1,2) 인자를 전달하여 호출.
input1.trigger("onviewchange", [1,2]);


unbind(
									  type
									       , 
									       function
										)
							

컴포넌트에서 이벤트를 제거. (웹스퀘어 컴포넌트 공통.)


Parameter

nametyperequireddescription


typeStringN제거할 이벤트. (생략할 경우 해당 컴포넌트의 모든 이벤트를 제거.)


functionFunctionN제거할 이벤트의 핸들러 함수. (생략할 경우 해당 위에 지정한 이벤트에 등록된 모든 핸들러 함수를 제거.)



Sample
// (예제 1)
// input1에 등록된 모든 이벤트를 제거.
input1.unbind();

// (예제 2)
// input1의 onviewchange 이벤트에 대한 모든 핸들러 함수를 제거.
input1.unbind("onviewchange");

// (예제 3)
// input1의 onviewchange 이벤트에 대한 func1 이벤트 핸들러 함수를 제거.
input1.unbind("onviewchange", func1);


unbindRef(
									  
										)
							

ref 바인딩을 해제.





validateObject(
									  
										)
							

컴포넌트의 유효성 관련 속성값을 통해 유효성 검사를 실행.
(관련 속성)
 displaymessage="true"

(유효성 관련 속성)
 mandatory
 minLength
 maxLength 
 minByteLength
 maxByteLength



Return

typedescription


Objectobject 유효성 검사 결과 객체
    object.callerId 유효성 검사 대상 컴포넌트 ID
    object.type 유효성 검사 항목
   object.value 유효성 검사 결과 값


Sample
//아래와 같이 checkcombobox1 컴포넌트에 mandatory 속성을 정의했을 경우









var returnObj = checkcombobox1.validateObject();
// (반환 값 - checkcombobox의 값이 없을 경우) returnObj 객체 반환

returnObj.callerId = "checkcombobox1" returnObj.type = "mandatory" returnObj.value = "" 
// (반환 값 - checkcombobox의 값이 있을 경우) 비어있는 객체가 반환

// displaymessage="true" 설정을 사용할 경우, 검사에 실패하면 Engine에 설정된 메시지가 alert으로 표시됨. 
// (alert 메세지 예시) 필수 입력 항목입니다


visible(
									  flag
										)
							

[deprecated] show/hide 혹은 setStyle 사용을 권장.엔진 내부적으로 CSS visibility 속성을 설정.


Parameter

nametyperequireddescription


flagBooleanY설정할 CSS visibility 속성 값 
true : visibility: visible;
false : visibility: hidden;










Copyrights Inswave Systems Co., Ltd.



