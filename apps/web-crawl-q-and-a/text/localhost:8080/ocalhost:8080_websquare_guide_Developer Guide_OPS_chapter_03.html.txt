
데이터 바인딩 가이드3.데이터 바인딩 가이드3.1Menu메뉴의 데이터는 ItemSet을 통하여 바인딩할 수 있습니다. 메뉴 컴포넌트를 더블 클릭하면 메뉴 대화창이 나오고, Radio, SelectBox와 같이 Itemset을 정의할 수 있습니다.여기서 주의할 점은 dataType에 따라 요구되는 정보가 다르므로 dataType에 맞게 데이터 바인딩을 하도록 합니다.dataType이 recursive인 경우, nodeSet, label, value의 xPath 설정이 필요합니다.dataType이 listed인 경우, nodeSet, label, value, depth의 xPath 설정이 필요합니다.value의 경우, 공백(space)을 구분자로 하여 한가지 이상의 값을 바인딩 할 수 있습니다.Menu 컴포넌트를 더블클릭하면 데이터 바인딩을 위한 메뉴 대화창이 열립니다.3.1.1recursive코드 3-1.recursive dataBinding<w2:menu id="menu1" dataType="recursive"
  style="position: absolute ;left: 0px;top: 0px;"
  isVertical="false" menuWidthType="byWidth"
  showChildMenu="onmouseover" menuHide="true"
  firstMenuGap="0"
  keepFirstSelectedMenu="">
  ...
  <w2:itemset nodeset="menu/vector/data">
    <w2:label ref="label/@value"></w2:label>
    <w2:value ref="code/@value url/@value"></w2:value>
    <w2:depth ref=""></w2:depth>
  </w2:itemset>
</w2:menu>그림 3-1.recursive dataBinding3.1.2listed코드 3-2.listed dataBinding<w2:menu id="menu1" dataType="listed"
  style="position: absolute ;left: 0px;top: 0px;"
  isVertical="false" menuWidthType="byWidth"
  showChildMenu="onmouseover" menuHide="true"
  firstMenuGap="0"
  keepFirstSelectedMenu="">
  ...
  <w2:itemset nodeset="menu/vector/data">
    <w2:label ref="label/@value"></w2:label>
    <w2:value ref="code/@value url/@value"></w2:value>
    <w2:depth ref="depth/@value"></w2:depth>
  </w2:itemset>
</w2:menu>그림 3-2.listed dataBinding3.2TreeView그림 3-3.Innter XML아래와 같이 TreeView의 데이터 입력 방식을 선택한 후, 각 노드의 정보를 설정한 후 [OK]를 클릭하십시오.Inner XML: 데이터를 직접 입력ItemSet: DataList와 바인딩표 3-1.TreeView 설정 방법(1)Inner XMLItemSet(2)아래의 버튼으로 생성한 TreeView의 구조를 표시(3)Add Child: 하위 노드 추가Add Sibling: 동일한 레벨에 노드 추가Delete: 노드 삭제(4)TreeView에서 선택한 노드의 정보Label: 해당 노드의 이름* Value: 해당 노드의 값NodeSet: TreeView를 구성할 DataList를 선택Label: 해당 노드의 이름* Value: 해당 노드의 값Depth: 해당 노드의 값 (TreeView 상에서의 위치)위치(5)Image: 노드 이미지Icon Image: 노드 아이콘Selected Image: 노드가 선택된 상태를 표시하는 이미지Expanded Image: 노드가 펼쳐진 상태를 표시하는 이미지Leaf Image: 노드 하위의 각 항목을 표시하는 이미지3.3FusionChart3.3.1chart Properties 이용하는 방법PropertiesDescriptionrefFusionChart와 DataCollection 데이터 연동 시 사용. DataCollection을 설정합니다. labelNode / seriesColumns 옵션과 함께 사용됩니다.labelNodeFusionChart의 lable 데이터로 사용할 DataCollection의 column의 ID값. 공백 일 경우 DataCollection의 첫 번째 column이 자동 셋팅 됩니다. seriesColumnsFusionChart의 series 데이터로 사용할 DataCollection column 정보들. 공백 일 경우 DataCollection의 첫 번째 column을 제외 한 dataType이 number인 column들이 자동 셋팅 됩니다.seriesColumns에는 각 series에 대한 column의 ID값이나 옵션을 설정한 객체가 들어갈 수 있습니다.seriesColumns에 객체를 못 넣는 차트 종류 : Single Series, Scatter, Zoom Line사용예)  * Single Series Chart 일 경우 : [['ProductA']] * Multi Series Charts 일 경우 : [['ProductA','ProductB'], ['ServiceA','ServiceB','id':'ServiceC']] * Multi Series Stacked Chart 일 경우 : Multi Series Charts 와 동일 * MSStackedColumn2DLineDY 차트의 경우( 마지막 시리즈 배열은 LineDY로 인식) : [['ProductA','ProductB'], ['ServiceA','ServiceB','ServiceC'],[{'id':'Revenue','linethickness':'2'},{'id':'RevenueB','linethickness':'5'}]] * Scatter & Bubble Chart 일 경우(X, Y, Z의 column ID를 순서대로 설정) : [['X','Y']]  * Zoom Line Chart 일 경우 : Multi Series Charts 와 동일객체 상세 설명) * 단순 string('ProductA')만 넣은 경우에는 {'id':'ProductA'} id가 생략 된 모양입니다.  * {'id':'Year3','seriesname': ‘New Year', 'renderas':'Line', 'showValues':'1', 'parentyaxis':'S'} 객체에 seriesname이 있을 경우 설정한 seriesname으로 세팅되고, seriesname이 없을 경우에는 dataList의 Year3 컬럼의 name 값으로 셋팅됩니다. * {'id':'Year2','displayValue':'Month', 'showValues':'1'} Month 컬럼의 데이타들을 displayValue로 넣고 싶은 경우 사용 할 컬럼의 id로 설정 해 주시면 됩니다. 3.3.1.1Single Series Chart3.3.1.1.1<model><xf:model>
    <w2:dataCollection>
        <w2:dataList id="dataList1" baseNode="vector" repeatNode="item" valueNode="">
            <w2:columnInfo>
                <w2:column id="Month" name="Month" dataType="text"></w2:column>
                <w2:column id="Price" name="Price" dataType="number"></w2:column>
            </w2:columnInfo>
        </w2:dataList>
    </w2:dataCollection>
    <xf:instance>
        <data xmlns="">
            <vector>
                <item>
                    <Month>January</Month>
                    <Price>17400</Price>
                </item>
                <item>
                    <Month>February</Month>
                    <Price>19800</Price>
                </item>
                <item>
                    <Month>March</Month>
                    <Price>21800</Price>
                </item>
                <item>
                    <Month>April</Month>
                    <Price>23800</Price>
                </item>
                <item>
                    <Month>May</Month>
                    <Price>29600</Price>
                </item>
                <item>
                    <Month>June</Month>
                    <Price>27600</Price>
                </item>
                <item>
                    <Month>July</Month>
                    <Price>31800</Price>
                </item>
                <item>
                    <Month>August</Month>
                    <Price>39700</Price>
                </item>
                <item>
                    <Month>September</Month>
                    <Price>37800</Price>
                </item>
                <item>
                    <Month>October</Month>
                    <Price>21900</Price>
                </item>
                <item>
                    <Month>November</Month>
                    <Price>32900</Price>
                </item>
                <item>
                    <Month>December</Month>
                    <Price>39800</Price>
                </item>
            </vector>
        </data>
    </xf:instance>
</xf:model>3.3.1.1.2<script><script type="javascript"><![CDATA[
       // dataCollection이  셋팅되면 자동으로 차트가 그려짐
       dataList1.setXML(WebSquare.ModelUtil.findInstanceNode('vector'));
</script>3.3.1.1.3<body><w2:FusionChart id="chart1" style="height:280px;width:100%;" chartType="Column2D" drawType="javascript" ref="data:dataList1" seriesColumns="[['Price']]" labelNode="Month"></w2:FusionChart>3.3.1.1.4결과그림 3-4.fusion43.3.1.2Multi Series Charts / Combination Chart3.3.1.2.1<model><xf:model>
    <w2:dataCollection>
        <w2:dataList id="dataList2" baseNode="vector2" repeatNode="item" valueNode="">
            <w2:columnInfo>
                <w2:column id="Month" name="Month" dataType="text"></w2:column>
                <w2:column id="Year1" name="2005" dataType="number"></w2:column>
                <w2:column id="Year2" name="2006" dataType="number"></w2:column>
                <w2:column id="Year3" name="2007" dataType="number"></w2:column>
            /w2:columnInfo>
        </w2:dataList>

    </w2:dataCollection>
    <xf:instance>
        <data xmlns="">
            <vector2>
                <item>
                    <Month>January</Month>
                    <Year1>27400</Year1>
                    <Year2>10000</Year2>
                    <Year3>10000</Year3>
                </item>
                <item>
                    <Month>February</Month>
                    <Year1>11500</Year1>
                    <Year2>28110</Year2>
                    <Year3>23990</Year3>
                </item>
                <item>
                    <Month>March</Month>
                    <Year1>12500</Year1>
                    <Year2>29800</Year2>
                    <Year3>32700</Year3>
                </item>
                <item>
                    <Month>April</Month>
                    <Year1>27400</Year1>
                    <Year2>10000</Year2>
                    <Year3>29000</Year3>
                </item>
                <item>
                    <Month>May</Month>
                    <Year1>1500</Year1>
                    <Year2>10000</Year2>
                    <Year3>10000</Year3>
                           </item>
                <item>
                    <Month>June</Month>
                    <Year1>19700</Year1>
                    <Year2>32600</Year2>
                    <Year3>32600</Year3>
                </item>
                <item>
                    <Month>July</Month>
                    <Year1>27400</Year1>
                                <Year2>29700</Year2>
                    <Year3>31900</Year3>
                </item>
                <item>
                    <Month>August</Month>
                    <Year1>27400</Year1>
                    <Year2>10000</Year2>
                    <Year3>21800</Year3>
                </item>
                <item>
                    <Month>September</Month>
                                <Year1>27400</Year1>
                    <Year2>31800</Year2>
                    <Year3>42800</Year3>
                </item>
                <item>
                    <Month>October</Month>
                    <Year1>27400</Year1>
                    <Year2>15000</Year2>
                    <Year3>11000</Year3>
                </item>
                <item>
                    <Month>November</Month>
                    <Year1>27400</Year1>
                    <Year2>9800</Year2>
                    <Year3>11800</Year3>
                </item>
                <item>
                    <Month>December</Month>
                    <Year1>27400</Year1>
                    <Year2>22900</Year2>
                    <Year3>20800</Year3>
                </item>
            </vector2>
        </data>
    </xf:instance>
</xf:model>3.3.1.2.2<script><script type="javascript"><![CDATA[
       // dataCollection이  셋팅되면 자동으로 차트가 그려짐                      dataList2.setXML(WebSquare.ModelUtil.findInstanceNode('vector2'));
</script>3.3.1.2.3<body><w2:fusionchart chartType="MSColumn2D" drawType="javascript" id="chart2" ref="data:dataList2" labelNode="Month"  seriesColumns="[['Year1','Year2','Year3']]" style="height:280px;width:100%;"> </w2:fusionchart>

<w2:fusionchart chartType="StackedColumn3DLineDY" drawType="javascript" id="chart3" ref="data:dataList2" labelNode="Month" seriesColumns="[['Year1','Year2',{'id':'Year3','seriesname':'Year New', 'renderas':'Line', 'showValues':'1', 'parentyaxis':'S'}]]" style="height:280px;width:100%;"></w2:fusionchart>3.3.1.2.4결과그림 3-5.fusion53.3.1.3Multi Serires Stacked Chart3.3.1.3.1<model><xf:model>
    <w2:dataCollection>
         <w2:dataList id="dataList3" baseNode="vector3" repeatNode="item" valueNode="">
                 <w2:columnInfo>
          <w2:column id="Year" name="Year" dataType="text></w2:column>
          <w2:column id="ProductA" name="Product A" dataType="number"></w2:column>
          <w2:column id="ProductB" name="Product B" dataType="number"></w2:column>
          <w2:column id="ServiceA" name="Service A" dataType="number"></w2:column>
          <w2:column id="ServiceB" name="Service B" dataType="number"></w2:column>
           <w2:column id="ServiceC" name="Service C" dataType="number"></w2:column>
           <w2:column id="Revenue" name="Cost as % of Revenue"  dataType="number"></w2:column>
           <w2:column id="RevenueB" name="Cost as % of Revenue B"  dataType="number"></w2:column>
        /w2:columnInfo>
            </w2:dataList>
    </w2:dataCollection>
    <xf:instance>
        <data xmlns="">
            <<vector3>
                <item>
                    <Year>2001</Year>
                                <ProductA>30</ProductA>
                    <ProductB>26</ProductB>
                    <ServiceA>29</ServiceA>
                    <ServiceB>31</ServiceB>
                                                        <ServiceC>34</ServiceC>
                    <Revenue>57</Revenue>
                    <RevenueB>27</RevenueB>
                </item>
                <item>
                    <Year>2002</Year>
                    <ProductA>21</ProductA>
                    <ProductB>28</ProductB>
                    <ServiceA>39</ServiceA>
                    <ServiceB>41</ServiceB>
                    <ServiceC>24</ServiceC>
                    <Revenue>68</Revenue>
                    <RevenueB>67</RevenueB>
                </item>
                <item>
                    <Year>2003</Year>
                    <ProductA>27</ProductA>
                    <ProductB>25</ProductB>
                    <ServiceA>28</ServiceA>
                    <ServiceB>31</ServiceB>
                    <ServiceC>10</ServiceC>
                    <Revenue>79</Revenue>
                    <RevenueB>43</RevenueB>
                </item>
                <item>
                    <Year>2004</Year>
                    <ProductA>17</ProductA>
                    <ProductB>16</ProductB>
                    <ServiceA>29</ServiceA>
                    <ServiceB>31</ServiceB>
                    <ServiceC>34</ServiceC>
                    <Revenue>73</Revenue>
                    <RevenueB>25</RevenueB>
                </item>
                <item>
                    <Year>2005</Year>
                    <ProductA>30</ProductA>
                    <ProductB>22</ProductB>
                    <ServiceA>29</ServiceA>
                    <ServiceB>43</ServiceB>
                    <ServiceC>22</ServiceC>
                    <Revenue>80</Revenue>
                    <RevenueB>33</RevenueB>
                </item>
            </vector3>
        </data>
    </xf:instance>
</xf:model>3.3.1.3.2<script><script type="javascript"><![CDATA[
       // dataCollection이  셋팅되면 자동으로 차트가 그려짐                                 dataList3.setXML(WebSquare.ModelUtil.findInstanceNode('vector3’));
</script>3.3.1.3.3<body><w2:fusionchart chartType="MSStackedColumn2D" drawType="javascript" id="chart4" ref="data:dataList3" labelNode="Year"  seriesColumns="[['ProductA','ProductB'], ['ServiceA','ServiceB',{'id':'ServiceC','showvalues':'1'}]]" style="height:280px;width:100%;"></w2:fusionchart>

<!--  MSStackedColumn2DLineDY 차트의 경우 마지막 시리즈 배열은 LineDY로 인식합니다.   -->
<w2:fusionchart chartType="MSStackedColumn2DLineDY" drawType="javascript" id="chart5" ref="data:dataList3" labelNode="Year"  seriesColumns="[['ProductA','ProductB'], ['ServiceA','ServiceB','ServiceC'],[{'id':'Revenue','linethickness':'2'},{'id':'RevenueB','linethickness':'5'}]]" style="height:280px;width:100%;"></w2:fusionchart>3.3.1.3.4결과그림 3-6.fusion63.3.1.4Scatter & Bubble Chart3.3.1.4.1<model><xf:model>
    <w2:dataCollection>
        <w2:dataList id="dataList4" baseNode="vector4" repeatNode="item" valueNode="">
            <w2:columnInfo>
                <w2:column id="Server" name="Server" dataType="text"></w2:column>
                <w2:column id="X" name="X" dataType="number"></w2:column>
                <w2:column id="Y" name="Y" dataType="number"></w2:column>
            </w2:columnInfo>
        </w2:dataList>
    </w2:dataCollection>
    <xf:instance>
        <data xmlns="">
            <vector4>
                <item>
                    <Server>Server 1</Server>
                    <X>21</X>
                    <Y>2.4</Y>
                </item>
                <item>
                    <Server>Server 1</Server>
                    <X>43</X>
                    <Y>2.5</Y>
                </item>
                <item>
                    <Server>Server 1</Server>
                    <X>43</X>
                    <Y>3.5</Y>
                </item>
                <item>
                    <Server>Server 1</Server>
                    <X>23</X>
                    <Y>1.5</Y>
                </item>
                <item>
                    <Server>Server 1</Server>
                    <X>33</X>
                    <Y>1.6</Y>
                </item>
                <item>
                    <Server>Server 2</Server>
                    <X>41</X>
                    <Y>1.1</Y>
                </item>
                <item>
                    <Server>Server 2</Server>
                    <X>43</X>
                    <Y>2.5</Y>
                </item>
                <item>
                    <Server>Server 2</Server>
                    <X>43</X>
                                    <Y>1.5</Y>
                </item>
                <item>
                    <Server>Server 2</Server>
                    <X>50</X>
                    <Y>3.2</Y>
                </item>
                <item>
                    <Server>Server 2</Server>
                    <X>22</X>
                    <Y>4.3</Y>
                </item>
            </vector4>
        </data>
    </xf:instance>
</xf:model>3.3.1.4.2<script><script type="javascript"><![CDATA[
       // dataCollection이  셋팅되면 자동으로 차트가 그려짐                                 dataList4.setXML(WebSquare.ModelUtil.findInstanceNode('vector4’));
</script>3.3.1.4.3<body><!-- seriesColumns : X, Y, Z의 컬럼 ID를 순서대로 설정 -->
<w2:fusionchart chartType="Scatter" drawType="javascript" id="chart6" ref="data:dataList4" labelNode="Server" seriesColumns="[['X','Y']]" style="height:280px;width:100%;"></w2:fusionchart>3.3.1.4.4결과그림 3-7.fusion83.3.1.5Zoom Line ChartZoom Line Chart의 경우 두 가지 데이타 구조를 지원합니다.Standard Multi-series JSON Data : 9.1.1.2 Multi Series Charts / Combination Chart와 동일Compact JSON data : 이 형식은 JSON의 크기와 구문 분석 시간을 줄일 수 있습니다. 차트에 표시 할 1,000 개 이상의 데이터 포인트가 있을 때에는 해당 형식을 사용 하시기 바랍니다. Compact JSON data를 사용하기 위해서는 차트 Attribute에 필수적으로 compactdatamode와 dataseparator을 넣어주셔야 합니다.아래는 Compact JSON data를 사용한 샘플입니다.3.3.1.5.1<model><xf:model>
    <w2:dataCollection>
        <w2:dataList id="dataList5" baseNode="vector5" repeatNode="item" valueNode="">
            <w2:columnInfo>
                <w2:column id="Month" name="Month" dataType="text"></w2:column>
                <w2:column id="Year1" name="2005" dataType="number"></w2:column>
                <w2:column id="Year2" name="2006" dataType="number"></w2:column>
            </w2:columnInfo>
        </w2:dataList>
    </w2:dataCollection>
    <xf:instance>
        <data xmlns="">
            <vector5>
                                                                <!-- Compact JSON data -->
                <item>                <Month>January-07|February-07|March-07|April-07|May-07|June-07|July-07|August-07|September-07|October-07|November-07|December-07|January-08|February-08|March-08|April-08|May-08|June-08|July-08|August-08|September-08|October-08|November-08|December-08|January-09|February-09|March-09|April-09|May-09|June-09|July-09|August-09|September-09|October-09|Nevember-09|December-09|January-10|February-10|March-10|April-10|May-10|June-10|July-10|August-10|September-10|October-10|November-10|December-10||
                    </Month>                        <Year1>||||16|41|64|53|78|47|91|23|72|49|27||26|49|27|41|35|12|24|10|79|71|74|84|43|63|40|59|64|59|52|55|20|22|61|57|61|05|15|39||32|31|25|14|44
                    </Year1>            <Year2>23|69|80|49|69|01|04|46|27|40|25|22|39|10|46|44|16|39|10|30|23|30|42|78|45||70|59|35|34|8|45|83|50|97|17|73|49|17|14|28||84|32|62|25|78|31|56|19
                    </Year2>
                </item>
            </vector5>
        </data>
    </xf:instance>
</xf:model>3.3.1.5.2<script><script type="javascript"><![CDATA[
        //chart7 Attribute 세팅 
        var options = {    "caption":"Web visits",  "compactdatamode":"1",  "dataseparator":"|"  }
       chart7.setChartAttribute(options);

       // dataCollection이  셋팅되면 자동으로 차트가 그려짐                                          dataList5.setXML(WebSquare.ModelUtil.findInstanceNode('vector5’));
</script>3.3.1.5.3<body><w2:fusionchart chartType="ZoomLine" drawType="javascript" id="chart7" ref="data:dataList5" labelNode="Month" seriesColumns="[['Year1','Year2']]" style="height:280px;width:100%;"></w2:fusionchart>3.3.1.5.4결과그림 3-8.fusion93.3.2setChartColumnRef API를 이용하는 방법setChartColumnRef(ref,labelNode,seriesColumns) API를 이용하여 동적으로 DataCollection을 binding 할 수 있습니다.chart1.setChartColumnRef('data:dataList2','Year',"[['ServiceC']]");                         
chart2.setChartColumnRef('data:dataList2','Year',"['ProductA','ProductB'], ['ServiceA','ServiceB','ServiceC']]");3.3.3DataCollection의 getFusionChartData API를 이용하는 방법dataList의 getFusionChartData(chartType, labelNode, SeriesColumn)를 호출하면 chartType에 따라 알맞은 chart 데이터가 반환 됩니다. 반환타입은 JSON 객체이며 FusionChart의 setJSONData() API로 해당 데이터를 셋팅하면 화면에 차트가 그려집니다.getFusionChartData API를 이용하는 경우 DataCollection과 직접 바인딩 된 것은 아니기 때문에 DataCollection의 데이타가 업데이트 되더라도 차트는 갱신되지 않습니다. 갱신되길 원하시는 경우라면 9.1, 9.2 를 이용해서 DataCollection과 직접 바인딩 해야 합니다.<script type="javascript"><![CDATA[

       // 위에 정의된 xml를 읽어 datalist에 바인딩합니다.
       dataList1.setXML(WebSquare.ModelUtil.findInstanceNode('vector'));

       //dataList를 getFusionChartData() API를 사용하여 차트데이터로 변환합니다.
       var chartObj = dataList1.getFusionChartData("column2d”, "Month", ”[["Price"]]”);
     
       //변환된 데이터를 차트에 셋팅 합니다
       chart1.setJSONData(chartObj);.

]]></script>DataCollection으로 모든 FusionChart 옵션을 지원하는데는 한계가 있기 때문에 , getFusionChartData() API로 반환받는 json 객체를 직접 핸들링하여 원하시는 옵션을 추가 할 수 있습니다.코드 3-3.예제var chartObj = dataList1.getFusionChartData("Column2D","Month","[['Price']]”);
var vlineObj =  { "vline":"true","color":"FF5904","thickness":"2”};
chartObj.data.splice(2, 0, vlineObj);  // vline을 추가합니다. 
chart1.setJSONData(chartObj);
