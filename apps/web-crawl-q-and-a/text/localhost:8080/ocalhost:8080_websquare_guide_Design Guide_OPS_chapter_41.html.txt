
Group + Textbox와 또 다른 컴포넌트의 조합41.Group + Textbox와 또 다른 컴포넌트의 조합수정 일자 버전 (SP2)WebSquare5 Studio : 20180117_1349_x86_BWebSquare5 Engine : 5.0_2.2936B.20180114.155240_1.5Textbox 컴포넌트 설명에서 언급한 것과 같이, 부모-자식의 관계에 있는 요소를 코딩하기 위해서는 대부분 Group 컴포넌트와 Textbox 컴포넌트의 조합으로 마크업할 수 있습니다.여기서 더 나아가 고려할 것이 있는데, 바로 '해당 컴포넌트에 들어갈 값이 정적인가 동적인가?' 하는 것입니다. 이것을 다른 표현으로 풀자면 '데이터가 바인딩 되어야 하는가?' 입니다. 기본적으로 Websquare의 컴포넌트들을 사용하면 해당 컴포넌트들의 ref 속성 혹은 API(with ID 속성)이용하여 개발단에서는 데이터를 바인딩 할 수 있습니다.이렇게 데이터가 바인딩이 되는 컴포넌트가 있다면, 반대로 데이터가 바인딩이 되지 않는 컴포넌트가 있을 것입니다. 그렇기에 Group 컴포넌트와 Textbox 컴포넌트 이외의 컴포넌트의 사용이 필요합니다.이번 장에서는 데이터가 정적인 경우와 동적인 경우의 코딩에 대해 알아보고, 그 두 조건이 혼합되었을때는 어떻게 컴포넌트들을 조합하여 코딩하는지, 컴포넌트의 개수를 동적으로 파싱할수 있게끔 코딩하는 방법 알아보겠습니다.41.1Table 코딩 심화이전 장에서 실습해 보았던 Group 컴포넌트와 Textbox 컴포넌트로 코딩을 하면 ref Property를 설정하여 데이터 바인딩이 가능합니다. 그렇기에 기본적인 테이블 코딩은 이전 장의 예시 방법으로 코딩해도 무방합니다. 하지만 이 두 컴포넌트로는 웹표준·웹접근성을 고려한 섬세한 하드 코딩은 힘들어 보입니다.그렇기에 Websquare에서는 하드코딩을 위한 Tag 컴포넌트를 지원합니다. Tag 컴포넌트는 데이터 바인딩이 되지않아 게시판 테이블과 같이 동적으로 반복되는 요소는 코딩하기가 어렵습니다.그렇기에 코딩을 하기 전에 해당 요소의 값이 정적인가, 가변적인가를 판단이 우선적으로 고려되어야 합니다. 동적인 부분(요소)는 Textbox 컴포넌트로 매칭을 하고 정적인 부분은 Tag 컴포넌트로 하드코딩 하면 됩니다.실제 데이터가 들어갈 컴포넌트가 매칭이 끝나고 컴포넌트를 그리는 작업이 끝나면, 동적인 데이터가 반복이 되는지를 판단을 하고, 동적으로 반복되는 부분은 Generator 컴포넌트로 감싸서(반복되는 요소의 직계 부모가 되게끔) 작업을 마무리합니다.다음 예제로 각 경우의 코딩 방법을 적어보도록 하겠습니다.Table 데이터가 모두 정적인 경우Table 안에 데이터가 모두 정적이어서 컴포넌트에 데이터 바인딩이 될 필요가 없어 HTML 코딩할 때의 하드코딩 처럼 작업해도 된다고 판단될 경우에는 Tag 컴포넌트를 사용합니다. Tag 컴포넌트에 대한 자세한 설명은 Tag 컴포넌트 가이드를 참고하십시오.75. Tag웹스퀘어5에서는 순수 html을 그대로 사용해도 호환을 보장하고 있음으로, tag 컴포넌트로 감싸지 않아도 사용이 가능함으로 2가지 방법을 모두 사용해도 무방합니다.기본적인 텍스트 데이터가 들어가는 td가 될 부분을 먼저 코딩해보겠습니다.Tag 컴포넌트를 Design View에서 그린 뒤 td에 해당되는 컴포넌트이기 때문에 Textbox와 동일하게 텍스트를 수정하기 위해 Design View에서 더블클릭을 해봅니다. 하지만 Textbox와 다르게 텍스트 수정 대화상자가 나오지 않고 Source 편집기로 이동합니다.Tag 컴포넌트는 tagname과 같은 기본적인 파싱 요소이외에 자식 요소를 포함하여 그대로 by pass해 주는 방식이기 때문에 직접 하드 코딩하는 것이 코드가 더 간결해 질 뿐만 아니라 더 수월합니다.<w2:tag id="tag1" class="table02" tagname="table" summary="웹스퀘어 기본교육에 대한 교육일, 과정, 내용등을 서술하는 표">
<caption>웹스퀘어 기본 교육</caption>                        
<colgroup>
<col width="30%" /><col width="20%" /><col width="*" />
</colgroup>
<thead>
<tr>
<th scope="col">교육일</th>
<th scope="col">과정</th>
<th scope="col" class="brn">내용</th>
</tr>
</thead>
<tr>
<td scope="rowgroup" rowspan="7">1일차</td>
<td scope="row">제품소개</td>
<td cla0ss="brn">개요 및 적용 기술</td>
</tr>
<tr>                        
<td scope="row" rowspan="2">웹스퀘어 스튜디오 사용법</td>
<td class="brn">설치 및 view 사용법</td>
</tr>
<tr>                        
<td class="brn">스튜디오 환경 설정</td>
</tr>
<tr>                        
<td scope="row" rowspan="2">컴포넌트 사용법</td>
<td class="brn">컴포넌트 사용법</td>
</tr>
</w2:tag>코드 1의 내용을 보면 thead는 있는데 tbody는 없습니다. tbody의 경우는 table 태그 선언시 브라우저에서 자동으로 그려주는 요소이기 때문입니다. tag 컴포넌트안에 직접 tbody를 코딩하면 Design View에 나타나지 않는 현상이 있습니다. tbody를 직접 코딩하고 싶으면 tbody의 내용만을 따로 table이 되는 Tag 컴포넌트의 자식 컴포넌트로 Tag 컴포넌트를 그리고, tbody의 자식들이 되는 tr td를 Source 편집기에서 하드코딩하면됩니다.그림 41-1.Tag 컴포넌트로 하드코딩한  Table을 실행한 결과그림 41-2.개발자 도구에서  파싱된 결과. 하드코딩 된 부분은 웹스퀘어 내에 지정된  namespace가   아니라  w3c에 따르는 태그라 명시하기 위해 xmlns 가 붙는다.웹접근성 관련 프로젝트일 경우 namespace를 지정하는 xmlns 속성을 제거해야할 경우가 있습니다. 이 경우에는 config.xml에 다음 항목을 추가하면 xmlns 속성이 붙는 현상이 없어집니다. config.xml에서 설명한 것과 같이 상단 메뉴 Window -> Preferences -> Config Modificatoin 을 클릭하여 편집기에서 해당 노드를 추가하면 됩니다. config.xml을 수정하였으므로 Resource 관리 담당자에게 보고해야 합니다....
</selectbox>
<!-- tag 컴포넌트와 generator 컴포넌트로 코딩시 xmlns 속성을 제거합니다. -->
<removeXmlNameSpace value="true" />
<body>
    ...그림 41-3.removeXmlNameSpace 노드를  config.xml에 추가한 뒤 화면 실행 모습.   xmlns 속성이 없어진 것을 확인할 수 있다.그림 41-4.Design View에서 Textbox로  테이블 틀을 그린 모습Table의 셀이 될 Textbox가 그려졌으니 같은 tr의 요소가 될 컴포넌트들 끼리 그룹핑을 해야 합니다.그룹핑이 되어야 할 Textbox들을 Component View에서 Ctrl키 혹은 Shift키로 다중선택하여 오른쪽 클릭으로컨텍스트 메뉴를 불러 'Group으로 감싸기'를 해줍니다.그림 41-5.같은 tr의  자식요소(th)가 될 컴포넌트들을 그룹핑 한 모습. 다음  셀들도 그룹핑 해 나갑니다.그룹핑을 한 후 그루핑한 컴포넌트들이 Component VIew에 맨 밑에 위치한다고 해서 끌어 올릴 필요가 없습니다. 밑에 위치하는 컴포넌트들도 구룹핑이 되어 맨 밑에 위치하게 되므로 그룹핑이 완료되면 원래대로의 순서로 돌아오기 때문입니다.그림 41-6.그룹핑이 완료된 모습여기서 caption 요소가 필요할 경우, caption의 텍스트 노드가 동적이면 textbox 컴포넌트로 그려주며 그루핑은 따로 필요 없습니다. caption의 텍스트 노드가 정적이라면 tag 컴포넌트를 이용하여 텍스트 노드를 입력해 줍니다.그림 41-7.왼쪽-데이터가 동적이어 textbox 컴포넌트로 코딩했을때의 Component 구조, 오른쪽-데이터가  정적이어 Tag 컴포넌트로 코딩했을때의 Component 구조웹스퀘어5에서는 html tag(div) <-> group, textbox가 마우스 우측 메뉴로 상호 전환이 가능합니다.그림 41-8.65이제 각 셀들, row 들, table에 해당하는 마크업을 수정해야 합니다. 교육일, 제품소개, 개요 및 적용 기술은 tagname 속성을 th로, 이하 셀들에 해당하는 tagname 속성을 td로 직접 입력하여 수정합니다. 앞서 언급한 것과 같이 tagname을 직접 입력하여 수정할 경우에는 Design View에서 떨어져 보입니다. (지금은 Disign View에서 컴포넌트를 끌어 그려넣어 style 창에 absolute 값이들어가 있는 상태 이므로 틀이 잡혀 보입니다.) 그리고 각 그루핑된 row들을 tagname 속성을 tr로 입력하여 수정합니다.마크업이 완료되었으니 일차, 웹스퀘어 스튜디오 사용법, 컴포넌트 사용법, FAQ, Q&A와 같이 colspan, rowspan과 같은 속성이 필요한 Textbox 컴포넌트에 대해 속성을 추가합니다. 속성을 추가할 컴포넌트를 선택하고 오른쪽 클릭-'속성 태그 수정'을 선택하여 속성을 추가합니다. 1일차와 웹스퀘어 스튜디오 사용법, 컴포넌트 사용법 셀은 셀의 제목 범위 및 방향이 필요하기 때문에 scope 속성도 함께 추가하겠습니다. 가장 상위 컴포넌트인 Table 요소가 될 컴포넌트에도 summay 속성을 추가합니다.그림 41-9.'일차' 셀에 추가한 속성들그림 41-10.'웹스퀘어 스튜디오 사용법', '컴포넌트 사용법' 셀에 대한 속성 추가그림 41-11.'FAQ', 'Q&A' 셀에 대한 속성 추가그림 41-12.전체 셀을 감싸고 있는 table이 되는 컴포넌트의 속성 추가이제 최종적으로 table에 관련 class인 'table02'를 Property view에 입력하고, Design View에 컴포넌트를 그려넣어 추가된 style 창에서의 속성들을 모두 지워줍니다. 그리고 '개요 및 적용 기술 column에 해당되는 셀들에 오른쪽 보더를 지워주기 위한 brn 클래스를 추가하는것도 잊지 말아야 되겠습니다.그림 41-13.브라우저에서  완성된 코딩을 실행한 모습.여기서 더 나아가 column들의 width를 %로 예쁘게 주고 싶으면 Tag 컴포넌트를 사용하여 colgoup 및 col 요소 코딩을 해주면 됩니다.그림 41-14.Tag 컴포넌트로  colgroup을 코딩했을때의 컴포넌트 구조Tag 컴포넌트로 colgroup을 코딩했을때의 컴포넌트 구조row가 반복되는 Table 이라면 DB에서 데이터를 가지고 오는 게시판 형태의 디자인이 제일 많을 것 입니다. 기본적은 틀은 이전 장의 'Table 데이터가 모두 동적인 경우'의 코딩과 같습니다. 모든 요소가 될 컴포넌트를 Textbox, Group 컴포넌트로 코딩하고, 반복될 row는 하나의 row만 코딩해도 됩니다.이제 반복 되어야 하는 컴포넌트를 Generator로 감싸야 합니다. 컴포넌트에 대한 자세한 설명은 Generator 컴포넌트 가이드를 참고하십시오.38. Generator반복되는 요소는 tr로, tr을 감쌀수 있는 요소는 tbody 이기때문에 그림 54에서의 group25를 Generator안에 배치시키고, Generator의 tagname을 tbody로 직접 입력하여 수정합니다.그림 41-15.generator1을 tbody로  코딩한 후의 컴포넌트 구조Generator가 동적으로 그려지기 위해서는 데이터와 자바스크립트 코드가 필요합니다. 데이터는 로컬 데이터인 instance와 데이터를 요청하는 방식인 submission이 있습니다. 이 두 데이터는 똑같이 xml 형태의 데이터입니다. 현재 예제는 로컬의 instance를 이용하여 자바스크립트로 작업 하였습니다....
<head>
<w2:buildDate/>
<xf:model>
<xf:instance>
<data xmlns="">                
<row idx="0">
<num>1</num>
<title>게시판글 1 test 해봅시다</title>
<author>이시혜</author>
<date>2013.05.02</date>
<inquiry>30</inquiry>
</row>
<row idx="1">
<num>2</num>
<title>게시판글 2 test 해봅시다</title>
<author>이시혜</author>
<date>2013.05.03</date>
<inquiry>1</inquiry>
</row>
... <row> 반복 생략...
</data>
</xf:instance>
</xf:model>
<script type="javascript"><![CDATA[ 
    function generate() {
    var nodeArr = WebSquare.ModelUtil.findInstanceNodes("row");                
    for(var i=0; i< nodeArr.length; i++){
        generator1.insert();                    
        var tmpObj = generator1.getChild( i , "textbox43" );
        tmpObj.setValue(WebSquare.xml.getValue( nodeArr[i] , "num"));            
        tmpObj = generator1.getChild( i, "textbox44" );
        tmpObj.setValue(WebSquare.xml.getValue( nodeArr[i] , "title"));    
        tmpObj = generator1.getChild( i, "textbox45" );
        tmpObj.setValue(WebSquare.xml.getValue( nodeArr[i] , "author"));            
        tmpObj = generator1.getChild( i, "textbox46" );
        tmpObj.setValue(WebSquare.xml.getValue( nodeArr[i] , "date"));            
        tmpObj = generator1.getChild( i, "textbox47" );
        tmpObj.setValue(WebSquare.xml.getValue( nodeArr[i] , "inquiry"));
    }
    }                    
    generate();
]]></script>
...
</head>
...스크립트와 데이터는 실제 개발할 때와 많이 달라질 수 있습니다. 데이터 구조가 결정되어진상태에서 UI단 작업을 하는 것이 아니라면, Generator 컴포넌트로 반복될 컴포넌트를 감싸고tagname을지정하는 것까지 작업을 완료합니다.그림 41-16.스크립트와 데이터를  적용시켜 브라우저로 실행한 모습41.2리스트형 코딩하기리스트 형(ol, ul, dt)의 코딩에도 데이터가 동적인지 정적인지에 대해 조합해야하는 컴포넌트가 다른 경우가 있습니다.리스트를 표현하는 ul 태그로 마크업을 해보겠습니다.Group과 textbox 컴포넌트를 그린 후 속성창에서 아래와 같이 tagname을 <ul><li><strong><span> 지정하여 주었습니다.단순 리스트형 코딩하기그림 41-17.리스트 컴포넌트 구조<ul>태그에 클래스명은 “list01”로 지정해 주었습니다.<li>태그에는 리스트의 텍스트에 관련된 색상, 폰트 스타일, 여백, 불릿 스타일을 지정해 주며, <li>태그 안에 <strong>태그에는 마진과 폰트 색상을 주었습니다.그림 41-18.<li> 태그에 스타일을 준 모습그림 41-19.<strong> 태그에 스타일은 준 모습참고로 <ul>, <li>태그는 기본적으로 가지고 있는 속성이 있습니다. 목록 항목 마커를 제거 할 수 없으므로 <ul>, <li>이에 대해 새로운 스타일을 주고 싶을때는 태그가 가지고 있는 기본속성을 초기화 시켜야 합니다.아래 소스에 보시면 리스트가 가지고 있는 list-style을 none값으로 표시해 주시 않으며, 브라우저 간 호환성을 위해 margin, padding 값을 0으로 ul태그가 가지고 있던 고유의 속성이 없어지게 됩니다./* reset */
ul,ol {margin:0; padding:0; -webkit-text-size-adjust:none;}
li{list-style:none;}

/* list style */
.list01{background:#fff;}
.list01 li{
    margin:11px0;
    padding-left:32px;
    font-family:맑은고딕;
    color:#5b5b5b;
    background:url(/DesignGuide/images/bg_list_01.gif)12pxcenterno-repeat;}
.list01 li strong{
    margin-right:5px;
    color:#608acb;
}그림 41-20.단순 리스트형  브라우저에 실행시킨 모습
